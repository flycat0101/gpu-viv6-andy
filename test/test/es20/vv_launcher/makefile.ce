##############################################################################
#
#    Copyright 2012 - 2016 Vivante Corporation, Santa Clara, California.
#    All Rights Reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining
#    a copy of this software and associated documentation files (the
#    'Software'), to deal in the Software without restriction, including
#    without limitation the rights to use, copy, modify, merge, publish,
#    distribute, sub license, and/or sell copies of the Software, and to
#    permit persons to whom the Software is furnished to do so, subject
#    to the following conditions:
#
#    The above copyright notice and this permission notice (including the
#    next paragraph) shall be included in all copies or substantial
#    portions of the Software.
#
#    THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
#    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
#    IN NO EVENT SHALL VIVANTE AND/OR ITS SUPPLIERS BE LIABLE FOR ANY
#    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
##############################################################################


#
# ROOT DIRECTORY
#
ROOT_DIR = $(AQROOT)\test\es20\vv_launcher

!IF "$(_TGTCPU)"=="ARMV4I"
#
# ARMV4I CPU
#
CPUFLAGS = \
  /QRarch4T /QRinterwork-return /DTHUMBSUPPORT /D_ARM_ /DARM /DARMV4I
LFLAGS = /MACHINE:THUMB

!ELSEIF "$(_TGTCPU)"=="x86"
#
# X86 CPU
#
CPUFLAGS = /Dx86 /D_X86_ /DEMULATOR /Ix86
LFLAGS = /MACHINE:X86

!ELSE
!MESSAGE Unknown CPU!
!ENDIF

#
# C FLAGS
#
CFLAGS = \
  /Gy -Fo$@ /I. /Ox /Os /GF /W3 /c /Zi \
  /DWINCEOEM /DWINCEINTERNAL \
  /DUNDER_CE=500 /D_WIN32_WCE=500 /DWIN32 /DSTRICT \
  /DUNICODE /D_UNICODE /DINTERNATIONAL /DL0409 /DINTLMSG_CODEPAGE=1252 \

#
# LINKER FLAGS
#
LFLAGS = $(LFLAGS) \
  /SUBSYSTEM:WINDOWSCE,5.00 \
  /NODEFAULTLIB \
  /INCREMENTAL:NO \
  /PDB:$*.pdb \
  /DEBUG \
  /DEBUGTYPE:CV \

#
# LINKER FLAGS FOR EXE FILES
#
EXEFLAGS = \
  /ENTRY:mainACRTStartup \
  /BASE:0x00010000 \

#
# INCLUDE DIRECTORIES
#
INCLUDES = \
  $(_PUBLICROOT)\common\sdk\inc; \
  $(_PUBLICROOT)\common\oak\inc; \
  $(_PUBLICROOT)\common\ddk\inc; \
  $(_SDKROOT)\CE\inc; \
  $(VIVANTE_SDK_INC); \
  $(ROOT_DIR)\lib; \
  $(ROOT_DIR)\src; \


#
# TARGET LIBRARIES
#
TARGETLIBS = \
  $(_PROJECTROOT)\cesysgen\sdk\lib\$(_TGTCPU)\$(WINCEDEBUG)\coredll.lib \
  $(_PROJECTROOT)\cesysgen\sdk\lib\$(_TGTCPU)\$(WINCEDEBUG)\corelibc.lib \
  $(GCLIB_PATH)\libEGL.lib \
  $(GCLIB_PATH)\libVDK.lib \
  $(GCLIB_PATH)\libGLESv2.lib \

#
# OUTPUT DIRECTORY
#
OUT = obj\$(_TGTCPU)\$(WINCEDEBUG)
OUT_PLATFORM = $(_FLATRELEASEDIR)\vv_launcher

!IF [mkdir $(OUT)]
!ENDIF
!IF [mkdir $(OUT_PLATFORM)]
!ENDIF

#
# TARGETS TO BUILD
#
TARGETS = \
  $(OUT_PLATFORM)\vv_launcher.exe \

################################################################################
#
# DEFAULT TARGET
#
all : resource $(TARGETS)

################################################################################
#
# Common defines
#

CFLAGS = $(CFLAGS) -DUSE_VDK=1

################################################################################
#
# FM_OES_PLAYER.EXE
#

#
# OBJECT FILES FOR FM_OES_PLAYER
#
OBJECTS = \
  $(OUT)\check.obj \
  $(OUT)\dds.obj \
  $(OUT)\log.obj \
  $(OUT)\program.obj \
  $(OUT)\Texture2D.obj \
  $(OUT)\Texture2DRenderSurface.obj \
  $(OUT)\TextureCube.obj \
  $(OUT)\icosa.obj \
  $(OUT)\Mat.obj \
  $(OUT)\misc.obj \
  $(OUT)\Vec.obj \
  $(OUT)\resource.obj \
  $(OUT)\Chiclet.obj \
  $(OUT)\ChicletProg.obj \
  $(OUT)\ContentProg.obj \
  $(OUT)\EnvProg.obj \
  $(OUT)\Geodesic.obj \
  $(OUT)\LauncherApp.obj \
  $(OUT)\resources.obj \
  $(OUT)\vv_main.obj \

#
# MAKE RULES FOR FM_OES_PLAYER OBJECT FILES
#
{$(ROOT_DIR)\lib\glutils}.c{$(OUT)}.obj :
  cl -nologo $(CFLAGS) -I$(INCLUDES:;= -I) $(CPUFLAGS) $<

{$(ROOT_DIR)\lib\math}.c{$(OUT)}.obj :
  cl -nologo $(CFLAGS) -I$(INCLUDES:;= -I) $(CPUFLAGS) $<

{$(ROOT_DIR)\lib\rc}.c{$(OUT)}.obj :
  cl -nologo $(CFLAGS) -I$(INCLUDES:;= -I) $(CPUFLAGS) $<

{$(ROOT_DIR)\src}.c{$(OUT)}.obj :
  cl -nologo $(CFLAGS) -I$(INCLUDES:;= -I) $(CPUFLAGS) $<

#
# Use this tool to process resources
#
resource:
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\chiclet.frag
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\chiclet.vert
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\content.frag
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\content.vert
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\env.frag
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\shaders\env.vert
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\envcube.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\envelope.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\Vivante-Logo.Black.Square.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\3dmark06_samurai.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\photo_album.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\firefox.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\3dmark07_taiji.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\vgmark_navi.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\vgmark_flash.dds
  $(ROOT_DIR)\bin\resource $(ROOT_DIR)\src\textures\cover_flow.dds

#
# MAKE RULE FOR FM_OES_PLAYER.EXE
#
$(OUT)\vv_launcher.exe : $(OBJECTS)
  link /OUT:$@ $(EXEFLAGS) @<<
$(LFLAGS)
$**
$(TARGETLIBS)
<<NOKEEP

$(OUT_PLATFORM)\vv_launcher.exe: $(OUT)\vv_launcher.exe
  copy /y $** $@


################################################################################
#
# clean
#

clean :
  -del /q $(TARGETS)
  -del /q $(OUT)\*.*
  -del /q $(OUT_PLATFORM)\*.*

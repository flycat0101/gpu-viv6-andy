##############################################################################
#
#    Copyright (c) 2005 - 2016 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################


#
# Common include file for Android build
#

ifeq ($(VIVANTE_ANDROID_MK_DEF),)
VIVANTE_ANDROID_MK_DEF := 1

################################################################################
# Options.

# Select prebuilt binary types.
FIXED_ARCH_TYPE              ?=

# Set this variable to Kernel directory.
KERNEL_DIR                   ?= $(ANDROID_BUILD_TOP)/kernel/kernel

# Cross compiler for building kernel module.
CROSS_COMPILE                ?= $(notdir $(TARGET_TOOLS_PREFIX))

# <ro.hardware> property, which comes from 'Hardware' field of
# 'cpuinfo' of the device.
RO_HARDWARE                  ?=

# Enable this to allocate video memory via coherent DMA.
NO_DMA_COHERENT              ?= 1

# Enable to start GPU clock in drver.
ENABLE_GPU_CLOCK_BY_DRIVER   ?= 1

# Enable platform driver model, available after linux 2.6.x.
USE_PLATFORM_DRIVER          ?= 1

# Force all video memory cached.
FORCE_ALL_VIDEO_MEMORY_CACHED ?= 0

# Enable caching for non paged memory.
NONPAGED_MEMORY_CACHEABLE    ?= 0

# Enable buffering for non paged memory
NONPAGED_MEMORY_BUFFERABLE   ?= 1

# Enable memory bank alignment
USE_BANK_ALIGNMENT           ?= 0
BANK_BIT_START               ?= 0
BANK_BIT_END                 ?= 0
BANK_CHANNEL_BIT             ?= 0

# Enable debug.
DEBUG                        ?= 0

# Build OpenCL
USE_OPENCL ?= 1
ifeq ($(USE_OPENCL),1)
BUILD_OPENCL_ICD             ?= 1
BUILD_OPENCL_FP              ?= 1
else
BUILD_OPENCL_ICD             ?= 0
endif

USE_OPENVX                   ?= 0

# 2D VG
VIVANTE_ENABLE_VG            ?= 0
# 2D
VIVANTE_ENABLE_2D            ?= 1
# 3D VG
VIVANTE_ENABLE_3D            ?= 1

# Security
SECURITY                     ?= 0

# Path to hold built modules besides $(PRODUCT_OUT)
VIV_OUT                      ?= $(AQROOT)/build

PLATFORM_CALLBACK            ?= platform/default/gc_hal_user_platform_default

################################################################################
# Variables.

GPU_TYPE  := \
    $(lastword \
        $(filter XAQ2 GCCORE Unified,\
            $(notdir $(wildcard $(call my-dir)/arch/*)) \
        ) \
    )

PROPERTY  := \
    $(firstword \
        $(strip $(RO_HARDWARE)) \
        $(TARGET_BOOTLOADER_BOARD_NAME) \
        $(TARGET_BOARD_PLATFORM)\
        default \
    )

AQROOT    := $(call my-dir)
AQARCH    := $(AQROOT)/arch/$(GPU_TYPE)
ifeq ($(VIVANTE_ENABLE_VG), 1)
AQVGARCH  := $(AQROOT)/arch/GC350
else
AQVGARCH  :=
endif

ARCH_TYPE := $(TARGET_ARCH)
TAG       := VIVANTE

export KERNEL_DIR
export CROSS_COMPILE


################################################################################
# Target CFLAGS.

CFLAGS        := -DLINUX

ifeq ($(VIVANTE_ENABLE_3D),0)
CFLAGS += -DgcdENABLE_3D=0
else
CFLAGS += -DgcdENABLE_3D=1
endif

ifeq ($(VIVANTE_ENABLE_2D),0)
CFLAGS += -DgcdENABLE_2D=0
else
CFLAGS += -DgcdENABLE_2D=1
endif

ifeq ($(VIVANTE_ENABLE_VG),0)
CFLAGS += -DgcdENABLE_VG=0
else
CFLAGS += -DgcdENABLE_VG=1
endif

ifeq ($(USE_OPENVX),0)
CFLAGS += -DgcdUSE_VX=0
else
CFLAGS += -DgcdUSE_VX=1
endif

CFLAGS        += -DUSE_VDK=0

PLATFORM_SDK_VERSION ?= 12

ifeq ($(USE_BANK_ALIGNMENT), 1)
    CFLAGS += -DgcdENABLE_BANK_ALIGNMENT=1
    ifneq ($(BANK_BIT_START), 0)
            ifneq ($(BANK_BIT_END), 0)
                CFLAGS += -DgcdBANK_BIT_START=$(BANK_BIT_START)
                CFLAGS += -DgcdBANK_BIT_END=$(BANK_BIT_END)
            endif
    endif

    ifneq ($(BANK_CHANNEL_BIT), 0)
        CFLAGS += -DgcdBANK_CHANNEL_BIT=$(BANK_CHANNEL_BIT)
    endif
endif

CFLAGS        += -DANDROID_SDK_VERSION=$(PLATFORM_SDK_VERSION)
CFLAGS        += -fno-strict-aliasing -fno-short-enums
CFLAGS        += -Wno-missing-field-initializers -Wno-unused-parameter

ifeq ($(DEBUG), 1)
CFLAGS        += -DDBG=1 -DDEBUG -D_DEBUG -O0 -g
endif

ifeq ($(SECURITY), 1)
CFLAGS        += -DgcdSECURITY=1
endif

CFLAGS        += -DVIVANTE_PROFILER=1
CFLAGS        += -DVIVANTE_PROFILER_CONTEXT=1

ifeq ($(FORCE_ALL_VIDEO_MEMORY_CACHED), 1)
CFLAGS        += -DgcdPAGED_MEMORY_CACHEABLE=1
else
CFLAGS        += -DgcdPAGED_MEMORY_CACHEABLE=0
endif

ifeq ($(FPGA_BUILD), 1)
CFLAGS += -DgcdFPGA_BUILD=1
else
CFLAGS += -DgcdFPGA_BUILD=0
endif

# Disable implicit native buffer sync on kitkat and later.
# Kitkat and later will use KHR_fence_sync or ANDROID_native_fence_sync
# to keep buffers sync-ed.
# Please see frameworks/native/libs/gui/SyncFeatures.cpp
ifeq ($(shell expr $(PLATFORM_SDK_VERSION) ">=" 19),1)
CFLAGS        += -DgcdANDROID_IMPLICIT_NATIVE_BUFFER_SYNC=0
endif


################################################################################
# Platform specific configs.

THIRDPARTY_CUSTOMER ?=
THIRDPARTY_TYPE ?=

endif


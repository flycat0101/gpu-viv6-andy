/****************************************************************************
*
*    Copyright (c) 2005 - 2019 by Vivante Corp.  All rights reserved.
*
*    The material in this file is confidential and contains trade secrets
*    of Vivante Corporation. This is proprietary information owned by
*    Vivante Corporation. No part of this work may be disclosed,
*    reproduced, copied, transmitted, or used in any way for any purpose,
*    without the express written permission of Vivante Corporation.
*
*****************************************************************************/


  {
        "__unknown", gcvNULL,
        VIR_TYPE_UNKNOWN,
        0,
        0,
        0,
        0,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        0,
        0,
        VIR_TY_INVALID
    },
    {
        "void", gcvNULL,
        VIR_TYPE_VOID,
        0,
        0,
        0,
        0,
        VIR_TYPE_VOID,
        VIR_TYPE_VOID,
        0/* size */,
        0,
        0,
        0,
        VIR_TY_VOID
    },
    {
        "float", gcvNULL,
        VIR_TYPE_FLOAT32,
        1,
        1,
        1,
        1,
        VIR_TYPE_FLOAT32,
        VIR_TYPE_FLOAT32,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        4,
        VIR_TY_SCALAR
    },
    {
        "half", gcvNULL,
        VIR_TYPE_FLOAT16,
        1,
        1,
        1,
        1,
        VIR_TYPE_FLOAT16,
        VIR_TYPE_FLOAT16,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        2,
        VIR_TY_SCALAR
    },
    {
        "int", gcvNULL,
        VIR_TYPE_INT32,
        1,
        1,
        1,
        1,
        VIR_TYPE_INT32,
        VIR_TYPE_INT32,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "short", gcvNULL,
        VIR_TYPE_INT16,
        1,
        1,
        1,
        1,
        VIR_TYPE_INT16,
        VIR_TYPE_INT16,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        2,
        VIR_TY_SCALAR
    },
    {
        "char", gcvNULL,
        VIR_TYPE_INT8,
        1,
        1,
        1,
        1,
        VIR_TYPE_INT8,
        VIR_TYPE_INT8,
        1/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        1,
        VIR_TY_SCALAR
    },
    {
        "uint", gcvNULL,
        VIR_TYPE_UINT32,
        1,
        1,
        1,
        1,
        VIR_TYPE_UINT32,
        VIR_TYPE_UINT32,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "ushort", gcvNULL,
        VIR_TYPE_UINT16,
        1,
        1,
        1,
        1,
        VIR_TYPE_UINT16,
        VIR_TYPE_UINT16,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        2,
        VIR_TY_SCALAR
    },
    {
        "uchar", gcvNULL,
        VIR_TYPE_UINT8,
        1,
        1,
        1,
        1,
        VIR_TYPE_UINT8,
        VIR_TYPE_UINT8,
        1/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        1,
        VIR_TY_SCALAR
    },
    {
        "snorm16", gcvNULL,
        VIR_TYPE_SNORM16,
        1,
        1,
        1,
        1,
        VIR_TYPE_SNORM16,
        VIR_TYPE_SNORM16,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "snorm8", gcvNULL,
        VIR_TYPE_SNORM8,
        1,
        1,
        1,
        1,
        VIR_TYPE_SNORM8,
        VIR_TYPE_SNORM8,
        1/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "unorm16", gcvNULL,
        VIR_TYPE_UNORM16,
        1,
        1,
        1,
        1,
        VIR_TYPE_UNORM16,
        VIR_TYPE_UNORM16,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "unorm8", gcvNULL,
        VIR_TYPE_UNORM8,
        1,
        1,
        1,
        1,
        VIR_TYPE_UNORM8,
        VIR_TYPE_UNORM8,
        1/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "int64", "long",
        VIR_TYPE_INT64,
        1,
        1,
        1,
        2,
        VIR_TYPE_INT64,
        VIR_TYPE_INT64,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "uint64", "ulong",
        VIR_TYPE_UINT64,
        1,
        1,
        1,
        2,
        VIR_TYPE_UINT64,
        VIR_TYPE_UINT64,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    /* double  type, fake it as float32 internally,
     * need to change it to real double when HW double is supported */
    {
        "double", gcvNULL,
        VIR_TYPE_FLOAT64,
        1,
        1,
        1,
        1,
        VIR_TYPE_FLOAT32,
        VIR_TYPE_FLOAT32,
        4/* size */, /* pretent the size to be 32-bit float */
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        4,
        VIR_TY_SCALAR
    },
    {
        "bool", gcvNULL,
        VIR_TYPE_BOOLEAN,
        1,
        1,
        1,
        1,
        VIR_TYPE_BOOLEAN,
        VIR_TYPE_BOOLEAN,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        4,
        VIR_TY_SCALAR
    },
    {
        "vec2", "float2",
        VIR_TYPE_FLOAT_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "vec3", "float3",
        VIR_TYPE_FLOAT_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "vec4", "float4",
        VIR_TYPE_FLOAT_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "vec8", "float8",
        VIR_TYPE_FLOAT_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "vec16", "float16",
        VIR_TYPE_FLOAT_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "vec32", "float32",
        VIR_TYPE_FLOAT_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "hvec2", "half2",
        VIR_TYPE_FLOAT16_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_FLOAT16_X2,
        VIR_TYPE_FLOAT16,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        4,
        VIR_TY_VECTOR
    },
    {
        "hvec3", "half3",
        VIR_TYPE_FLOAT16_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_FLOAT16_X3,
        VIR_TYPE_FLOAT16,
        6/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "hvec4", "half4",
        VIR_TYPE_FLOAT16_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_FLOAT16_X4,
        VIR_TYPE_FLOAT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "hvec8", "half8",
        VIR_TYPE_FLOAT16_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_FLOAT16_X4,
        VIR_TYPE_FLOAT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "hvec16", "half16",
        VIR_TYPE_FLOAT16_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_FLOAT16_X4,
        VIR_TYPE_FLOAT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "hvec32", "half32",
        VIR_TYPE_FLOAT16_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_FLOAT16_X4,
        VIR_TYPE_FLOAT16,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },

    /* double vector type, fake it as float32 vector internally,
     * need to change it to real double when HW double is supported */
    {
        "dvec2", "double2",
        VIR_TYPE_FLOAT64_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "dvec3", "double3",
        VIR_TYPE_FLOAT64_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "dvec4", "double4",
        VIR_TYPE_FLOAT64_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "dvec8", "double8",
        VIR_TYPE_FLOAT64_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "dvec16", "double16",
        VIR_TYPE_FLOAT64_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },
    {
        "dvec32", "double32",
        VIR_TYPE_FLOAT64_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_VECTOR
    },

    {
        "bvec2", "bool2",
        VIR_TYPE_BOOLEAN_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_BOOLEAN_X2,
        VIR_TYPE_BOOLEAN,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        8,
        VIR_TY_VECTOR
    },
    {
        "bvec3", "bool3",
        VIR_TYPE_BOOLEAN_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_BOOLEAN_X3,
        VIR_TYPE_BOOLEAN,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bvec4", "bool4",
        VIR_TYPE_BOOLEAN_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_BOOLEAN_X4,
        VIR_TYPE_BOOLEAN,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bvec8", "bool8",
        VIR_TYPE_BOOLEAN_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_BOOLEAN_X4,
        VIR_TYPE_BOOLEAN,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bvec16", "bool16",
        VIR_TYPE_BOOLEAN_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_BOOLEAN_X4,
        VIR_TYPE_BOOLEAN,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bvec32", "bool32",
        VIR_TYPE_BOOLEAN_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_BOOLEAN_X4,
        VIR_TYPE_BOOLEAN,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "ivec2", "int2",
        VIR_TYPE_INTEGER_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_INTEGER_X2,
        VIR_TYPE_INT32,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "ivec3", "int3",
        VIR_TYPE_INTEGER_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_INTEGER_X3,
        VIR_TYPE_INT32,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "ivec4", "int4",
        VIR_TYPE_INTEGER_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "ivec8", "int8",
        VIR_TYPE_INTEGER_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "ivec16", "int16",
        VIR_TYPE_INTEGER_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "ivec32", "int32",
        VIR_TYPE_INTEGER_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT32,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "uvec2", "uint2",
        VIR_TYPE_UINT_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_UINT_X2,
        VIR_TYPE_UINT32,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "uvec3", "uint3",
        VIR_TYPE_UINT_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_UINT_X3,
        VIR_TYPE_UINT32,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "uvec4", "uint4",
        VIR_TYPE_UINT_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "uvec8", "uint8",
        VIR_TYPE_UINT_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "uvec16", "uint16",
        VIR_TYPE_UINT_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "uvec32", "uint32",
        VIR_TYPE_UINT_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    /* uchar vectors */
    {
        "ucvec2", "uchar2",
        VIR_TYPE_UINT8_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_UINT8_X2,
        VIR_TYPE_UINT8,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        2,
        VIR_TY_VECTOR
    },
    {
        "ucvec3", "uchar3",
        VIR_TYPE_UINT8_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_UINT8_X3,
        VIR_TYPE_UINT8,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "ucvec4", "uchar4",
        VIR_TYPE_UINT8_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_UINT8_X4,
        VIR_TYPE_UINT8,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "ucvec8", "uchar8",
        VIR_TYPE_UINT8_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_UINT8_X4,
        VIR_TYPE_UINT8,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "ucvec16", "uchar16",
        VIR_TYPE_UINT8_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_UINT8_X4,
        VIR_TYPE_UINT8,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "ucvec32", "uchar32",
        VIR_TYPE_UINT8_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_UINT8_X4,
        VIR_TYPE_UINT8,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },

    /* char vectors */
    {
        "cvec2", "char2",
        VIR_TYPE_INT8_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_INT8_X2,
        VIR_TYPE_INT8,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        2,
        VIR_TY_VECTOR
    },
    {
        "cvec3", "char3",
        VIR_TYPE_INT8_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_INT8_X3,
        VIR_TYPE_INT8,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "cvec4", "char4",
        VIR_TYPE_INT8_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_INT8_X4,
        VIR_TYPE_INT8,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "cvec8", "char8",
        VIR_TYPE_INT8_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_INT8_X4,
        VIR_TYPE_INT8,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "cvec16", "char16",
        VIR_TYPE_INT8_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_INT8_X4,
        VIR_TYPE_INT8,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "cvec32", "char32",
        VIR_TYPE_INT8_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_INT8_X4,
        VIR_TYPE_INT8,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    /* ushort vectors */
    {
        "usvec2", "ushort2",
        VIR_TYPE_UINT16_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_UINT16_X2,
        VIR_TYPE_UINT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "usvec3", "ushort3",
        VIR_TYPE_UINT16_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_UINT16_X3,
        VIR_TYPE_UINT16,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "usvec4", "ushort4",
        VIR_TYPE_UINT16_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_UINT16_X4,
        VIR_TYPE_UINT16,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "usvec8", "ushort8",
        VIR_TYPE_UINT16_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_UINT16_X4,
        VIR_TYPE_UINT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "usvec16", "ushort16",
        VIR_TYPE_UINT16_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_UINT16_X4,
        VIR_TYPE_UINT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "usvec32", "ushort32",
        VIR_TYPE_UINT16_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_UINT16_X4,
        VIR_TYPE_UINT16,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },

    /* short vectors */
    {
        "svec2", "short2",
        VIR_TYPE_INT16_X2,
        2,
        2,
        2,
        1,
        VIR_TYPE_INT16_X2,
        VIR_TYPE_INT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "svec3", "short3",
        VIR_TYPE_INT16_X3,
        3,
        3,
        3,
        1,
        VIR_TYPE_INT16_X3,
        VIR_TYPE_INT16,
        12/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "svec4", "short4",
        VIR_TYPE_INT16_X4,
        4,
        4,
        4,
        1,
        VIR_TYPE_INT16_X4,
        VIR_TYPE_INT16,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "svec8", "short8",
        VIR_TYPE_INT16_X8,
        8,
        4,
        4,
        2,
        VIR_TYPE_INT16_X4,
        VIR_TYPE_INT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "svec16", "short16",
        VIR_TYPE_INT16_X16,
        16,
        4,
        4,
        4,
        VIR_TYPE_INT16_X4,
        VIR_TYPE_INT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "svec32", "short32",
        VIR_TYPE_INT16_X32,
        32,
        4,
        4,
        8,
        VIR_TYPE_INT16_X4,
        VIR_TYPE_INT16,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },

    /* ulong vectors */
    {
        "ulvec2", "ulong2",
        VIR_TYPE_UINT64_X2,
        2,
        2,
        2,
        2,
        VIR_TYPE_UINT64_X2,
        VIR_TYPE_UINT64,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "ulvec3", "ulong3",
        VIR_TYPE_UINT64_X3,
        3,
        3,
        3,
        2,
        VIR_TYPE_UINT_X3,
        VIR_TYPE_UINT64,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "ulvec4", "ulong4",
        VIR_TYPE_UINT64_X4,
        4,
        4,
        4,
        2,
        VIR_TYPE_UINT64_X4,
        VIR_TYPE_UINT64,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "ulvec8", "ulong8",
        VIR_TYPE_UINT64_X8,
        8,
        4,
        4,
        4,
        VIR_TYPE_UINT64_X4,
        VIR_TYPE_UINT64,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "ulvec16", "ulong16",
        VIR_TYPE_UINT64_X16,
        16,
        4,
        4,
        8,
        VIR_TYPE_UINT64_X4,
        VIR_TYPE_UINT64,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "ulvec32", "ulong32",
        VIR_TYPE_UINT64_X32,
        32,
        4,
        4,
        16,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT64,
        256/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        32,
        VIR_TY_VECTOR
    },

    /* long vectors */
    {
        "lvec2", "long2",
        VIR_TYPE_INT64_X2,
        2,
        2,
        2,
        2,
        VIR_TYPE_INT64_X2,
        VIR_TYPE_INT64,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    {
        "lvec3", "long3",
        VIR_TYPE_INT64_X3,
        3,
        3,
        3,
        2,
        VIR_TYPE_INTEGER_X3,
        VIR_TYPE_INT64,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "lvec4", "long4",
        VIR_TYPE_INT64_X4,
        4,
        4,
        4,
        2,
        VIR_TYPE_INT64_X4,
        VIR_TYPE_INT64,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "lvec8", "long8",
        VIR_TYPE_INT64_X8,
        8,
        4,
        4,
        4,
        VIR_TYPE_INT64_X4,
        VIR_TYPE_INT64,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "lvec16", "long16",
        VIR_TYPE_INT64_X16,
        16,
        4,
        4,
        8,
        VIR_TYPE_INT64_X4,
        VIR_TYPE_INT64,
        128/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        32,
        VIR_TY_VECTOR
    },
    {
        "lvec32", "long32",
        VIR_TYPE_INT64_X32,
        32,
        4,
        4,
        16,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT64,
        256/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SIGNED_INT,
        32,
        VIR_TY_VECTOR
    },

    /* packed data type */

    /* packed float16 (2 bytes per element) */
    {
        "half_P2", "half2P",
        VIR_TYPE_FLOAT16_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_FLOAT16_P2,
        VIR_TYPE_FLOAT16,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        4,
        VIR_TY_VECTOR
    },
    {
        "half_P3", "half3P",
        VIR_TYPE_FLOAT16_P3,
        3,
        1,
        3,
        1,
        VIR_TYPE_FLOAT16_P3,
        VIR_TYPE_FLOAT16,
        6/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "half_P4", "half4P",
        VIR_TYPE_FLOAT16_P4,
        4,
        1,
        4,
        1,
        VIR_TYPE_FLOAT16_P4,
        VIR_TYPE_FLOAT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "half_P8", "half8P",
        VIR_TYPE_FLOAT16_P8,
        8,
        2,
        8,
        1,
        VIR_TYPE_FLOAT16_P8,
        VIR_TYPE_FLOAT16,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "half_P16", "half16P",
        VIR_TYPE_FLOAT16_P16,
        16,
        4,
        8,
        2,
        VIR_TYPE_FLOAT16_P8,
        VIR_TYPE_FLOAT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },
    {
        "half_P32", "half32P",
        VIR_TYPE_FLOAT16_P32,
        32,
        4,
        8,
        4,
        VIR_TYPE_FLOAT16_P8,
        VIR_TYPE_FLOAT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_VECTOR
    },

    /* packed boolean (1 byte per element) */
    {
        "bool_P2", "bool2P",
        VIR_TYPE_BOOLEAN_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_BOOLEAN_P2,
        VIR_TYPE_BOOLEAN,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        8,
        VIR_TY_VECTOR
    },
    {
        "bool_P3", "bool3P",
        VIR_TYPE_BOOLEAN_P3,
        3,
        1,
        3,
        1,
        VIR_TYPE_BOOLEAN_P3,
        VIR_TYPE_BOOLEAN,
        3/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bool_P4", "bool4P",
        VIR_TYPE_BOOLEAN_P4,
        4,
        1,
        4,
        1,
        VIR_TYPE_BOOLEAN_P4,
        VIR_TYPE_BOOLEAN,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bool_P8", "bool8P",
        VIR_TYPE_BOOLEAN_P8,
        8,
        2,
        8,
        1,
        VIR_TYPE_BOOLEAN_P8,
        VIR_TYPE_BOOLEAN,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bool_P16", "bool16P",
        VIR_TYPE_BOOLEAN_P16,
        16,
        4,
        16,
        1,
        VIR_TYPE_BOOLEAN_P16,
        VIR_TYPE_BOOLEAN,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },
    {
        "bool_P32", "bool32P",
        VIR_TYPE_BOOLEAN_P32,
        32,
        4,
        16,
        2,
        VIR_TYPE_BOOLEAN_P16,
        VIR_TYPE_BOOLEAN,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_BOOLEAN,
        16,
        VIR_TY_VECTOR
    },

    /* uchar vectors */
    {
        "uchar_P2", "uchar2P",
        VIR_TYPE_UINT8_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_UINT8_P2,
        VIR_TYPE_UINT8,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        2,
        VIR_TY_VECTOR
    },
    {
        "uchar_P3", "uchar3P",
        VIR_TYPE_UINT8_P3,
        3,
        1,
        3,
        1,
        VIR_TYPE_UINT8_P3,
        VIR_TYPE_UINT8,
        3/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "uchar_P4", "uchar4P",
        VIR_TYPE_UINT8_P4,
        4,
        1,
        4,
        1,
        VIR_TYPE_UINT8_P4,
        VIR_TYPE_UINT8,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "uchar_P8", "uchar8P",
        VIR_TYPE_UINT8_P8,
        8,
        2,
        8,
        1,
        VIR_TYPE_UINT8_P8,
        VIR_TYPE_UINT8,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "uchar_P16", "uchar16P",
        VIR_TYPE_UINT8_P16,
        16,
        4,
        16,
        1,
        VIR_TYPE_UINT8_P16,
        VIR_TYPE_UINT8,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "uchar_P32", "uchar32P",
        VIR_TYPE_UINT8_P32,
        32,
        4,
        16,
        2,
        VIR_TYPE_UINT8_P16,
        VIR_TYPE_UINT8,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },

    /* char vectors */
    {
        "char_P2", "char2P",
        VIR_TYPE_INT8_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_INT8_P2,
        VIR_TYPE_INT8,
        2/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        2,
        VIR_TY_VECTOR
    },
    {
        "char_P3", "char3P",
        VIR_TYPE_INT8_P3,
        3,
        1,
        3,
        1,
        VIR_TYPE_INT8_P3,
        VIR_TYPE_INT8,
        3/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "char_P4", "char4P",
        VIR_TYPE_INT8_P4,
        4,
        1,
        4,
        1,
        VIR_TYPE_INT8_P4,
        VIR_TYPE_INT8,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "char_P8", "char8P",
        VIR_TYPE_INT8_P8,
        8,
        2,
        8,
        1,
        VIR_TYPE_INT8_P8,
        VIR_TYPE_INT8,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "char_P16", "char16P",
        VIR_TYPE_INT8_P16,
        16,
        4,
        16,
        1,
        VIR_TYPE_INT8_P16,
        VIR_TYPE_INT8,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "char_P32", "char32P",
        VIR_TYPE_INT8_P32,
        32,
        4,
        16,
        2,
        VIR_TYPE_INT8_P16,
        VIR_TYPE_INT8,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    /* ushort vectors */
    {
        "ushort_P2", "ushort2P",
        VIR_TYPE_UINT16_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_UINT16_P2,
        VIR_TYPE_UINT16,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "ushort_P3", "ushort3P",
        VIR_TYPE_UINT16_P3,
        3,
        2,
        3,
        1,
        VIR_TYPE_UINT16_P3,
        VIR_TYPE_UINT16,
        6/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "ushort_P4", "ushort4P",
        VIR_TYPE_UINT16_P4,
        4,
        2,
        4,
        1,
        VIR_TYPE_UINT16_P4,
        VIR_TYPE_UINT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "ushort_P8", "ushort8P",
        VIR_TYPE_UINT16_P8,
        8,
        4,
        8,
        1,
        VIR_TYPE_UINT16_P8,
        VIR_TYPE_UINT16,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "ushort_P16", "ushort16P",
        VIR_TYPE_UINT16_P16,
        16,
        4,
        8,
        2,
        VIR_TYPE_UINT16_P8,
        VIR_TYPE_UINT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "ushort_P32", "ushort32P",
        VIR_TYPE_UINT16_P32,
        32,
        4,
        8,
        4,
        VIR_TYPE_UINT16_P8,
        VIR_TYPE_UINT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_UNSIGNED_INT,
        8,
        VIR_TY_VECTOR
    },

    /* short vectors */
    {
        "short_P2", "short2P",
        VIR_TYPE_INT16_P2,
        2,
        1,
        2,
        1,
        VIR_TYPE_INT16_P2,
        VIR_TYPE_INT16,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        4,
        VIR_TY_VECTOR
    },
    {
        "short_P3", "short3P",
        VIR_TYPE_INT16_P3,
        3,
        2,
        3,
        1,
        VIR_TYPE_INT16_P3,
        VIR_TYPE_INT16,
        6/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "short_P4", "short4P",
        VIR_TYPE_INT16_P4,
        4,
        2,
        4,
        1,
        VIR_TYPE_INT16_P4,
        VIR_TYPE_INT16,
        8/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "short_P8", "short8P",
        VIR_TYPE_INT16_P8,
        8,
        4,
        8,
        1,
        VIR_TYPE_INT16_P8,
        VIR_TYPE_INT16,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "short_P16", "short16P",
        VIR_TYPE_INT16_P16,
        16,
        4,
        16,
        2,
        VIR_TYPE_INT16_P8,
        VIR_TYPE_INT16,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },
    {
        "short_P32", "short32P",
        VIR_TYPE_INT16_P32,
        32,
        4,
        16,
        4,
        VIR_TYPE_INT16_P8,
        VIR_TYPE_INT16,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_PACKED | VIR_TYFLAG_IS_SIGNED_INT,
        8,
        VIR_TY_VECTOR
    },

    /* matrix type: only support float type */
    {
        "mat2", "float2x2",
        VIR_TYPE_FLOAT_2X2,
        2,
        2,
        2,
        2,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "mat3", "float3x3",
        VIR_TYPE_FLOAT_3X3,
        3,
        3,
        3,
        3,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        36/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "mat4", "float4x4",
        VIR_TYPE_FLOAT_4X4,
        4,
        4,
        4,
        4,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "mat2X3", "float2x3",
        VIR_TYPE_FLOAT_2X3,
        3,
        3,
        3,
        2,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "mat2X4", "float2x4",
        VIR_TYPE_FLOAT_2X4,
        4,
        4,
        4,
        2,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "mat3X2", "float3x2",
        VIR_TYPE_FLOAT_3X2,
        2,
        2,
        2,
        3,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "mat3X4", "float3x4",
        VIR_TYPE_FLOAT_3X4,
        4,
        4,
        4,
        3,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        48/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "mat4X2", "float4x2",
        VIR_TYPE_FLOAT_4X2,
        2,
        2,
        2,
        4,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "mat4X3", "float4x3",
        VIR_TYPE_FLOAT_4X3,
        3,
        3,
        3,
        4,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        48/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    /* double matrix, fake it as float32 matrix internally,
     * need to change it to real double if HW double is supported */
    {
        "dmat2", "double2x2",
        VIR_TYPE_FLOAT64_2X2,
        2,
        2,
        2,
        2,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "dmat3", "double3x3",
        VIR_TYPE_FLOAT64_3X3,
        3,
        3,
        3,
        3,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        36/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "dmat4", "double4x4",
        VIR_TYPE_FLOAT64_4X4,
        4,
        4,
        4,
        4,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        64/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "dmat2X3", "double2x3",
        VIR_TYPE_FLOAT64_2X3,
        3,
        3,
        3,
        2,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "dmat2X4", "double2x4",
        VIR_TYPE_FLOAT64_2X4,
        4,
        4,
        4,
        2,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "dmat3X2", "double3x2",
        VIR_TYPE_FLOAT64_3X2,
        2,
        2,
        2,
        3,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        24/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "dmat3X4", "double3x4",
        VIR_TYPE_FLOAT64_3X4,
        4,
        4,
        4,
        3,
        VIR_TYPE_FLOAT_X4,
        VIR_TYPE_FLOAT32,
        48/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "dmat4X2", "double4x2",
        VIR_TYPE_FLOAT64_4X2,
        2,
        2,
        2,
        4,
        VIR_TYPE_FLOAT_X2,
        VIR_TYPE_FLOAT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        8,
        VIR_TY_MATRIX
    },
    {
        "dmat4X3", "double4x3",
        VIR_TYPE_FLOAT64_4X3,
        3,
        3,
        3,
        4,
        VIR_TYPE_FLOAT_X3,
        VIR_TYPE_FLOAT32,
        48/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_ISFLOAT,
        16,
        VIR_TY_MATRIX
    },
    {
        "sampler1D", gcvNULL,
        VIR_TYPE_SAMPLER_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler2D", gcvNULL,
        VIR_TYPE_SAMPLER_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler3D", gcvNULL,
        VIR_TYPE_SAMPLER_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_3D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "samplerCube", gcvNULL,
        VIR_TYPE_SAMPLER_CUBIC,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE,
        0,
        VIR_TY_SAMPLER
    },
    {
        "samplerCubeArray", gcvNULL,
        VIR_TYPE_SAMPLER_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler", gcvNULL,
        VIR_TYPE_SAMPLER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        0,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler1D", gcvNULL,
        VIR_TYPE_ISAMPLER_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler2D", gcvNULL,
        VIR_TYPE_ISAMPLER_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler3D", gcvNULL,
        VIR_TYPE_ISAMPLER_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_3D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isamplerCube", gcvNULL,
        VIR_TYPE_ISAMPLER_CUBIC,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isamplerCubeArray", gcvNULL,
        VIR_TYPE_ISAMPLER_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler1D", gcvNULL,
        VIR_TYPE_USAMPLER_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler2D", gcvNULL,
        VIR_TYPE_USAMPLER_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler3D", gcvNULL,
        VIR_TYPE_USAMPLER_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_3D,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usamplerCube", gcvNULL,
        VIR_TYPE_USAMPLER_CUBIC,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usamplerCubeArray", gcvNULL,
        VIR_TYPE_USAMPLER_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_exeternal_oes", gcvNULL,
        VIR_TYPE_SAMPLER_EXTERNAL_OES,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        0,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_1d_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_1D_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_2D_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_cube_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_CUBE_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_cube_array_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_CUBE_ARRAY_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_CUBE | VIR_TYFLAG_IS_SAMPLER_ARRAY | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_1d_array", gcvNULL,
        VIR_TYPE_SAMPLER_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_1d_array_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_1D_ARRAY_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D | VIR_TYFLAG_IS_SAMPLER_ARRAY | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_array", gcvNULL,
        VIR_TYPE_SAMPLER_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler_2d_array", gcvNULL,
        VIR_TYPE_ISAMPLER_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler_2d_array", gcvNULL,
        VIR_TYPE_USAMPLER_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_array_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_2D_ARRAY_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_ms", gcvNULL,
        VIR_TYPE_SAMPLER_2D_MS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler_2d_ms", gcvNULL,
        VIR_TYPE_ISAMPLER_2D_MS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler_2d_ms", gcvNULL,
        VIR_TYPE_USAMPLER_2D_MS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_ms_array", gcvNULL,
        VIR_TYPE_SAMPLER_2D_MS_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler_2d_ms_array", gcvNULL,
        VIR_TYPE_ISAMPLER_2D_MS_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler_2d_ms_array", gcvNULL,
        VIR_TYPE_USAMPLER_2D_MS_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_MS | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "samplerBuffer", gcvNULL,
        VIR_TYPE_SAMPLER_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_BUFFER,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isamplerBuffer", gcvNULL,
        VIR_TYPE_ISAMPLER_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_BUFFER,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usamplerBuffer", gcvNULL,
        VIR_TYPE_USAMPLER_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_BUFFER,
        0,
        VIR_TY_SAMPLER
    },
    {
        "viv_generic_gl_sampler", gcvNULL,
        VIR_TYPE_VIV_GENERIC_GL_SAMPLER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        0,
        0,
        VIR_TY_SAMPLER
    },
    {
        "subpassInput", gcvNULL,
        VIR_TYPE_SUBPASSINPUT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "subpassInputMS", gcvNULL,
        VIR_TYPE_SUBPASSINPUTMS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "isubpassInput", gcvNULL,
        VIR_TYPE_ISUBPASSINPUT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "isubpassInputMS", gcvNULL,
        VIR_TYPE_ISUBPASSINPUTMS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "usubpassInput", gcvNULL,
        VIR_TYPE_USUBPASSINPUT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "usubpassInputMS", gcvNULL,
        VIR_TYPE_USUBPASSINPUTMS,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_SUBPASS | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    /* All OCL image types are uvec8 descriptor, need to adjust it at init time */
    {
        "image_1d", gcvNULL,
        VIR_TYPE_IMAGE_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_1d_depth", gcvNULL,
        VIR_TYPE_IMAGE_1D_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_1d_array", gcvNULL,
        VIR_TYPE_IMAGE_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_1d_array_depth", gcvNULL,
        VIR_TYPE_IMAGE_1D_ARRAY_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_1d_buffer", gcvNULL,
        VIR_TYPE_IMAGE_1D_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_BUFFER | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_1d", gcvNULL,
        VIR_TYPE_IIMAGE_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_1d_array", gcvNULL,
        VIR_TYPE_IIMAGE_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_1d", gcvNULL,
        VIR_TYPE_UIMAGE_1D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_1d_array", gcvNULL,
        VIR_TYPE_UIMAGE_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d", gcvNULL,
        VIR_TYPE_IMAGE_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_array", gcvNULL,
        VIR_TYPE_IMAGE_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_3d", gcvNULL,
        VIR_TYPE_IMAGE_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_3D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_mssa", gcvNULL,
        VIR_TYPE_IMAGE_2D_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_array_mssa", gcvNULL,
        VIR_TYPE_IMAGE_2D_ARRAY_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_mssa_depth", gcvNULL,
        VIR_TYPE_IMAGE_2D_MSSA_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_array_mssa_depth", gcvNULL,
        VIR_TYPE_IMAGE_2D_ARRAY_MSSA_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_depth", gcvNULL,
        VIR_TYPE_IMAGE_2D_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_2d_array_depth", gcvNULL,
        VIR_TYPE_IMAGE_2D_ARRAY_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_2d", gcvNULL,
        VIR_TYPE_IIMAGE_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_2d_mssa", gcvNULL,
        VIR_TYPE_IIMAGE_2D_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_2d_array_mssa", gcvNULL,
        VIR_TYPE_IIMAGE_2D_ARRAY_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_2d", gcvNULL,
        VIR_TYPE_UIMAGE_2D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_2d_mssa", gcvNULL,
        VIR_TYPE_UIMAGE_2D_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_2d_array_mssa", gcvNULL,
        VIR_TYPE_UIMAGE_2D_ARRAY_MSSA,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_3d", gcvNULL,
        VIR_TYPE_IIMAGE_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_3D | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_3d", gcvNULL,
        VIR_TYPE_UIMAGE_3D,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_3D | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_2d_array", gcvNULL,
        VIR_TYPE_IIMAGE_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_2d_array", gcvNULL,
        VIR_TYPE_UIMAGE_2D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_cube", gcvNULL,
        VIR_TYPE_IMAGE_CUBE,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_cube_depth", gcvNULL,
        VIR_TYPE_IMAGE_CUBE_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_cube_array", gcvNULL,
        VIR_TYPE_IMAGE_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "image_cube_depth_array", gcvNULL,
        VIR_TYPE_IMAGE_CUBE_DEPTH_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_cube", gcvNULL,
        VIR_TYPE_IIMAGE_CUBE,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_cube_depth", gcvNULL,
        VIR_TYPE_IIMAGE_CUBE_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimage_cube_array", gcvNULL,
        VIR_TYPE_IIMAGE_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_cube", gcvNULL,
        VIR_TYPE_UIMAGE_CUBE,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },

    {
        "uimage_cube_depth", gcvNULL,
        VIR_TYPE_UIMAGE_CUBE_DEPTH,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimage_cube_array", gcvNULL,
        VIR_TYPE_UIMAGE_CUBE_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_CUBE | VIR_TYFLAG_IS_IMAGE_ARRAY | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },

    {
        "imageBuffer", gcvNULL,
        VIR_TYPE_IMAGE_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_BUFFER | VIR_TYFLAG_IMAGE_DATA_FLOAT,
        4,
        VIR_TY_IMAGE
    },
    {
        "iimageBuffer", gcvNULL,
        VIR_TYPE_IIMAGE_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_BUFFER | VIR_TYFLAG_IMAGE_DATA_SIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "uimageBuffer", gcvNULL,
        VIR_TYPE_UIMAGE_BUFFER,
        1,
        4,
        4,
        1,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_BUFFER | VIR_TYFLAG_IMAGE_DATA_UNSIGNED_INT,
        4,
        VIR_TY_IMAGE
    },
    {
        "viv_generic_gl_image", gcvNULL,
        VIR_TYPE_VIV_GENERIC_GL_IMAGE,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED,
        4,
        VIR_TY_IMAGE
    },
    /* OCL image types */
    {
        "image1d_t", gcvNULL,
        VIR_TYPE_IMAGE_1D_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "image1d_buffer_t", gcvNULL,
        VIR_TYPE_IMAGE_1D_BUFFER_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_BUFFER,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "image1d_array_t", gcvNULL,
        VIR_TYPE_IMAGE_1D_ARRAY_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_ARRAY,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "image2d_t", gcvNULL,
        VIR_TYPE_IMAGE_2D_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "image2d_array_t", gcvNULL,
        VIR_TYPE_IMAGE_2D_ARRAY_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_ARRAY,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "image3d_t", gcvNULL,
        VIR_TYPE_IMAGE_3D_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_3D,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "viv_generic_image_t", gcvNULL,
        VIR_TYPE_VIV_GENERIC_IMAGE_T,
        1,
        4,
        4,
        2,
        VIR_TYPE_UINT_X4,
        VIR_TYPE_UINT32,
        32/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_IMAGE_1D | VIR_TYFLAG_IS_IMAGE_2D | VIR_TYFLAG_IS_IMAGE_3D,
        4,
        VIR_TY_IMAGE_T
    },
    {
        "sampler_t", gcvNULL,
        VIR_TYPE_SAMPLER_T,
        1,
        1,
        1,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        4/* size */,
        0,
        0,
        4,
        VIR_TY_SAMPLER
    },
    {
        "event_t", gcvNULL,
        VIR_TYPE_EVENT_T,
        1,
        1,
        1,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        4/* size */,
        0,
        0,
        4,
        VIR_TY_SAMPLER
    },
    {
        "atomic_uint", gcvNULL,
        VIR_TYPE_ATOMIC_UINT,
        1,
        1,
        1,
        1,
        VIR_TYPE_INT32,
        VIR_TYPE_INT32,
        4/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        4,
        VIR_TY_SCALAR
    },
    {
        "atomic_uint4", gcvNULL,
        VIR_TYPE_ATOMIC_UINT4,
        4,
        4,
        4,
        1,
        VIR_TYPE_INTEGER_X4,
        VIR_TYPE_INT32,
        16/* size */,
        0,
        VIR_TYFLAG_SIZED | VIR_TYFLAG_IS_UNSIGNED_INT,
        16,
        VIR_TY_VECTOR
    },
    /* OpenGL 4.0 types */
    {
        "sampler_2d_rect", gcvNULL,
        VIR_TYPE_SAMPLER_2D_RECT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler_2d_rect", gcvNULL,
        VIR_TYPE_ISAMPLER_2D_RECT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler_2d_rect", gcvNULL,
        VIR_TYPE_USAMPLER_2D_RECT,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "sampler_2d_rect_shadow", gcvNULL,
        VIR_TYPE_SAMPLER_2D_RECT_SHADOW,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_2D | VIR_TYFLAG_IS_SAMPLER_ARRAY | VIR_TYFLAG_IS_SAMPLER_SHADOW,
        0,
        VIR_TY_SAMPLER
    },
    {
        "isampler_1d_array", gcvNULL,
        VIR_TYPE_ISAMPLER_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },
    {
        "usampler_1d_array", gcvNULL,
        VIR_TYPE_USAMPLER_1D_ARRAY,
        1,
        4,
        4,
        1,
        VIR_TYPE_UNKNOWN,
        VIR_TYPE_UNKNOWN,
        0/* size */,
        0,
        VIR_TYFLAG_IS_SAMPLER_1D | VIR_TYFLAG_IS_SAMPLER_ARRAY,
        0,
        VIR_TY_SAMPLER
    },



    /* !!! Add new types above, below is the last item as end of builtin type marker */
    {
        gcvNULL, gcvNULL,
        0
    }


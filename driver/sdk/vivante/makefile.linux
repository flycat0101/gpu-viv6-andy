##############################################################################
#
#    Copyright (c) 2005 - 2016 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################



# Default appendix for GL name collision.
GL_11_APPENDIX ?= _es11
GL_2_APPENDIX  ?= _es2
GL_3_APPENDIX  ?= _es3
OS_DIR=linux

USE_VIV_WAYLAND := 1

# Include common makefile.
include $(AQROOT)/makefile.linux.def

# Define target to build.
ifeq ($(gcdSTATIC_LINK),1)
	STATIC = 1
else
	DYNAMIC = 1
endif

ifeq ($(STATIC), 1)
	TARGET_NAME = libVIVANTE.a
else
	TARGET_NAME = libVIVANTE.so
endif

TARGET_OUTPUT = $(OBJ_DIR)/$(TARGET_NAME)

# Set installation directory.
INSTALL_DIR = $(SDK_DIR)/drivers

# Set source directories.
vpath %.c $(AQROOT)/hal/user
vpath %.c $(AQROOT)/hal/os/$(OS_DIR)/user
vpath %.c $(AQROOT)/hal/os/$(OS_DIR)/user/platform/default
vpath %.c $(AQROOT)/hal/os/$(OS_DIR)/user/platform/$(soc_vendor)
ifeq ($(VIVANTE_ENABLE_3D),1)
vpath %.c $(AQROOT)/sdk/vdk
vpath %.c $(AQROOT)/driver/khronos/libEGL/source
vpath %.c $(AQROOT)/driver/khronos/libEGL/api
vpath %.c $(AQROOT)/driver/khronos/libEGL/os
vpath %.c $(AQROOT)/driver/khronos/libGLESv11
vpath %.c $(AQROOT)/driver/khronos/libGLESv3/src/glcore
vpath %.c $(AQROOT)/driver/khronos/libGLESv3/src/chip
vpath %.c $(AQROOT)/compiler/libGLSLC/common
vpath %.c $(AQROOT)/compiler/libGLSLC/compiler
vpath %.c $(AQROOT)/compiler/libGLSLC/preprocessor
vpath %.c $(AQROOT)/compiler/libGLSLC/entry
ifneq ($(VIVANTE_NO_VG), 1)
ifeq ($(VIVANTE_ENABLE_VG),1)
vpath %.c $(AQROOT)/driver/khronos/libOpenVG
else
vpath %.c $(AQROOT)/driver/khronos/libOpenVG_3D/vg11/driver
endif
endif
endif
ifeq ($(EGL_API_DRI),1)
vpath %.c $(AQROOT)/driver/X/DRI/src
endif
ifeq ($(EGL_API_WL),1)
ifeq ($(USE_VIV_WAYLAND),1)
vpath %.c $(AQROOT)/driver/wayland
else
vpath %.c $(AQROOT)/driver/wl
endif
endif

# Set include directories.
INC_DIR = \
	$(AQROOT)/hal/inc \
	$(AQROOT)/hal/user \
	$(AQROOT)/hal/os/$(OS_DIR)/user \
	$(AQROOT)/sdk/inc \
	$(AQROOT)/hal/user/arch \

ifeq ($(VIVANTE_ENABLE_VG),1)
INC_DIR += \
	$(AQROOT)/hal/user/archvg
endif

ifeq ($(VIVANTE_ENABLE_2D),1)
INC_DIR += \
        $(AQROOT)/hal/user/arch/thirdparty_special
endif

ifeq ($(VIVANTE_ENABLE_3D),1)
INC_DIR += \
    $(AQROOT)/driver/khronos/libGLESv3/include/chip \
    $(AQROOT)/driver/khronos/libGLESv3/include/glcore \
    $(AQROOT)/driver/khronos/libGLESv3/src/glcore
endif

CFLAGS += -DGL_GLEXT_PROTOTYPES -D_LINUX_

ifeq ($(VIVANTE_ENABLE_3D),1)
INC_DIR += \
	$(AQROOT)/driver/khronos/libEGL/os \
	$(AQROOT)/driver/khronos/libEGL/source \
	$(AQROOT)/driver/khronos/libEGL/inc \
	$(AQROOT)/driver/khronos/libEGL/api \
	$(AQROOT)/compiler/libVSC/include \
	$(AQROOT)/compiler/libGLSLC/inc
endif

ifeq ($(EGL_API_WL), 1)
ifeq ($(USE_VIV_WAYLAND),1)
INC_DIR += \
    $(AQROOT)/driver/wayland \
    $(WAYLAND_DIR)/include
else
INC_DIR += \
    $(AQROOT)/driver/wl \
    $(WAYLAND_DIR)/include
endif

LIBS += \
    -L$(WAYLAND_DIR)/lib \
    -lwayland-client \

# required for EGL server side
LIBS += \
    -lwayland-server \

LIBS += \
    -lwayland-cursor
endif

ifeq ($(EGL_API_DFB), 1)
  INC_DIR += $(DFB_DIR)/usr/include \
      $(DFB_DIR)/include \
      $(DFB_DIR)/include/directfb-internal \
      $(DFB_DIR)/include/directfb

  LIBS += -L$(DFB_DIR)/lib -ldirectfb -ldirect
endif

ifeq ($(EGL_API_DRI),1)
  INC_DIR += \
      $(X11_ARM_DIR)/include \
      $(X11_ARM_DIR)/include/libdrm \
      $(X11_ARM_DIR)/include/X11/extensions \
      $(AQROOT)/driver/X/DRI/src

  LIBS += -L$(X11_ARM_DIR)/lib -lX11 -lXext -ldrm
endif

ifeq ($(EGL_API_X),1)
  INC_DIR += \
      $(X11_ARM_DIR)/include

  LIBS += -L$(X11_ARM_DIR)/lib -lX11
endif

ifeq ($(EGL_API_GBM),1)
  ifneq ($(GBM_LIBS),)
    CFLAGS += $(GBM_CFLAGS)

    LIBS += $(GBM_LIBS)
  else
    INC_DIR += \
        $(AQROOT)/driver/gbm/main \
        $(AQROOT)/driver/gbm/backends/viv

    LIBS += \
        -L$(SDK_DIR)/drivers -L$(AQROOT)/driver/gbm/main/$(OBJ_DIR) -lgbm
  endif
endif

CFLAGS += $(addprefix -I,$(INC_DIR))

ifeq ($(VIVANTE_NO_VG), 1)
	CFLAGS += -DVIVANTE_NO_VG
endif

ifneq ($(USE_ARMCC), 1)
  CFLAGS += -fPIC -Werror

  # These header files don't follow ansi.
  ifeq ($(filter 1,$(EGL_API_WL) $(EGL_API_DFB) $(EGL_API_GBM)),)
    CFLAGS += -ansi
  endif
endif

ifeq ($(EGL_API_DRI), 1)
  CFLAGS += -Wno-int-to-pointer-cast -Wno-pointer-to-int-cast
endif

ifeq ($(EGL_API_WL), 1)
  CFLAGS += -Wno-deprecated-declarations
ifeq ($(USE_VIV_WAYLAND),1)
  CFLAGS += -DUSE_VIV_WAYLAND=1
endif
endif

ifeq ($(EGL_API_DFB),1)
  CFLAGS += -DDIRECTFB_MAJOR_VERSION=$(DIRECTFB_MAJOR_VERSION) \
            -DDIRECTFB_MINOR_VERSION=$(DIRECTFB_MINOR_VERSION) \
            -DDIRECTFB_MICRO_VERSION=$(DIRECTFB_MICRO_VERSION)
endif

# libGAL
libGAL_SOURCE := $(wildcard \
					$(AQROOT)/hal/user/*.c \
					$(AQROOT)/hal/user/arch/*.c \
					$(AQROOT)/hal/os/$(OS_DIR)/user/*.c \
					)

libGAL_SOURCE += \
    $(firstword $(wildcard \
        $(AQROOT)/hal/os/$(OS_DIR)/user/platform/$(soc_vendor)/gc_hal_user_platform_$(soc_board).c \
        $(AQROOT)/hal/os/$(OS_DIR)/user/platform/default/gc_hal_user_platform_default.c))

ifeq ($(VIVANTE_ENABLE_2D),1)
  libGAL_SOURCE += $(wildcard \
					$(AQROOT)/hal/user/arch/thirdparty_special/*.c \
					)
endif

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libGAL_SOURCE))))

ifeq ($(VIVANTE_ENABLE_VG),1)
ARCHVG_SOURCE := $(wildcard \
					$(AQROOT)/hal/user/archvg/*.c \
					)

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(ARCHVG_SOURCE))))
endif

ifeq ($(EGL_API_DRI),1)
libDRI_SOURCE = $(wildcard \
                   $(AQROOT)/driver/X/DRI/src/*.c \
                   )
OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libDRI_SOURCE))))
endif

ifeq ($(VIVANTE_ENABLE_3D),1)
# libVDK
libVDK_SOURCE := \
    gc_vdk_egl.c \
    gc_vdk_gl.c

libVDK_API :=

ifneq ($(filter 1,$(EGL_API_X) $(EGL_API_DRI)),)
  libVDK_API := \
    gc_vdk_x11.c
endif

ifeq ($(EGL_API_NULLWS),1)
  libVDK_API := \
    gc_vdk_nullws.c
endif

ifeq ($(EGL_API_FB),1)
  libVDK_API := \
    gc_vdk_fbdev.c
endif

ifeq ($(EGL_API_DFB),1)
  libVDK_API := \
    gc_vdk_dfb.c
endif

ifeq ($(EGL_API_GBM),1)
  libVDK_API := \
    gc_vdk_gbm.c
endif

ifeq ($(EGL_API_WL),1)
  libVDK_API := \
    gc_vdk_wayland.c
endif

libVDK_SOURCE += $(libVDK_API)

ifeq ($(USE_VDK),1)
OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libVDK_SOURCE))))
endif


# libEGL
libEGL_SOURCE = $(wildcard \
					$(AQROOT)/driver/khronos/libEGL/source/*.c \
					$(AQROOT)/driver/khronos/libEGL/os/*_$(OS_DIR).c \
					)
libEGL_SOURCE += \
    gc_egl_nullws.c \
    gc_egl_fbdev.c

ifeq ($(EGL_API_X),1)
libEGL_SOURCE += \
    gc_egl_x11.c
endif

ifeq ($(EGL_API_DRI),1)
libEGL_SOURCE += \
    gc_egl_dri.c
endif

ifeq ($(EGL_API_GBM),1)
libEGL_SOURCE += \
    gc_egl_gbm.c
endif

ifeq ($(EGL_API_WL),1)
ifeq ($(USE_VIV_WAYLAND),1)
libEGL_SOURCE += \
    gc_egl_wayland.c \
    gc_egl_wayland_server.c \
    wayland-viv-protocol.c
else
libEGL_SOURCE += \
    gc_egl_wayland_legacy.c \
    gc_wayland_protocol.c \
    wayland-viv-protocol.c
endif
endif

ifeq ($(EGL_API_DFB),1)
libEGL_SOURCE += \
    gc_egl_dfb.c
endif

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libEGL_SOURCE))))

#libGLES_CM
libGLES_CM_SOURCE = \
    gc_glff_alpha.c \
    gc_glff_basic_types.c \
    gc_glff_buffer.c \
    gc_glff.c \
    gc_glff_clear.c \
    gc_glff_clip_plane.c \
    gc_glff_context.c \
    gc_glff_cull.c \
    gc_glff_depth.c \
    gc_glff_draw.c \
    gc_glff_enable.c \
    gc_glff_fixed_func.c \
    gc_glff_fog.c \
    gc_glff_fragment_shader.c \
    gc_glff_frag_proc.c \
    gc_glff_framebuffer.c \
    gc_glff_hash.c \
    gc_glff_lighting.c \
    gc_glff_line.c \
    gc_glff_matrix.c \
    gc_glff_multisample.c \
    gc_glff_named_object.c \
    gc_glff_pixel.c \
    gc_glff_point.c \
    gc_glff_profiler.c \
    gc_glff_query.c \
    gc_glff_renderbuffer.c \
    gc_glff_states.c \
    gc_glff_stream.c \
    gc_glff_texture.c \
    gc_glff_vertex_shader.c \
    gc_glff_viewport.c

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libGLES_CM_SOURCE))))

# libGLESv2
libGLESv2_SOURCE = $(wildcard \
                        $(AQROOT)/driver/khronos/libGLESv3/src/chip/*.c \
                        $(AQROOT)/driver/khronos/libGLESv3/src/glcore/*.c \
                        )
OBJECTS += \
    $(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libGLESv2_SOURCE))))

libVSC_SOURCE :=\
	$(wildcard \
		$(AQROOT)/compiler/libVSC/old_impl/*.c \
		$(AQROOT)/compiler/libVSC/old_impl/optimizer/*.c \
		$(AQROOT)/compiler/libVSC/lib/*.c \
		)

ifeq ($(VSC_VIR_BUILD),1)
libVSC_SOURCE += \
	$(wildcard \
		$(AQROOT)/compiler/libVSC/asm/*.c \
		$(AQROOT)/compiler/libVSC/chip/gpu/*.c \
		$(AQROOT)/compiler/libVSC/drvi/*.c \
		$(AQROOT)/compiler/libVSC/utils/*.c \
		$(AQROOT)/compiler/libVSC/utils/array/*.c \
		$(AQROOT)/compiler/libVSC/utils/base/*.c \
		$(AQROOT)/compiler/libVSC/utils/bitvector/*.c \
		$(AQROOT)/compiler/libVSC/utils/graph/*.c \
		$(AQROOT)/compiler/libVSC/utils/hash/*.c \
		$(AQROOT)/compiler/libVSC/utils/list/*.c \
		$(AQROOT)/compiler/libVSC/utils/mm/*.c \
		$(AQROOT)/compiler/libVSC/utils/string/*.c \
		$(AQROOT)/compiler/libVSC/utils/table/*.c \
		$(AQROOT)/compiler/libVSC/utils/tree/*.c \
		$(AQROOT)/compiler/libVSC/vir/analysis/*.c \
		$(AQROOT)/compiler/libVSC/vir/codegen/*.c \
		$(AQROOT)/compiler/libVSC/vir/ir/*.c \
		$(AQROOT)/compiler/libVSC/vir/lower/*.c \
		$(AQROOT)/compiler/libVSC/vir/passmanager/*.c \
		$(AQROOT)/compiler/libVSC/vir/transform/*.c \
		$(AQROOT)/compiler/libVSC/vir/linker/*.c \
		$(AQROOT)/compiler/libVSC/debug/*.c \
		)
endif

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libVSC_SOURCE))))


# libGLSLC
libGLSLC_SOURCE = \
	$(wildcard $(AQROOT)/compiler/libGLSLC/*/*.c)

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libGLSLC_SOURCE))))

ifneq ($(VIVANTE_NO_VG), 1)
ifeq ($(VIVANTE_ENABLE_VG),1)
CFLAGS += -I$(AQROOT)/driver/khronos/libOpenVG
lib2DVG_SOURCE = $(wildcard $(AQROOT)/driver/khronos/libOpenVG/*.c)
FILTER_C_FILES := $(AQROOT)/driver/khronos/libOpenVG/gc_vg_format_writer.c
FILTER_C_FILES += $(AQROOT)/driver/khronos/libOpenVG/gc_vg_format_reader.c
FILTER_C_FILES += $(FILTER_C_FILES) $(AQROOT)/driver/khronos/libOpenVG/gc_vg_format_array.c
FILTER_C_FILES += $(FILTER_C_FILES) $(AQROOT)/driver/khronos/libOpenVG/gc_vg_format_lookup.c
libOpenVG_SOURCE = $(filter-out $(FILTER_C_FILES),$(lib2DVG_SOURCE))

OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libOpenVG_SOURCE))))
else
libOpenVG_SOURCE = $(wildcard $(AQROOT)/driver/khronos/libOpenVG_3D/vg11/driver/*.c)
OBJECTS += \
	$(addprefix $(OBJ_DIR)/,$(notdir $(patsubst %.c,%.o,$(libOpenVG_SOURCE))))
endif
endif # VIVANTE_NO_VG
ifdef FIXED_ARCH_TYPE
OBJECTS += $(AQROOT)/sdk/vivante/$(FIXED_ARCH_TYPE)/*.o
endif
endif

LIBS += -lm -pthread -ldl

$(OBJ_DIR)/%.o: $(AQROOT)/hal/user/arch/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

ifeq ($(VIVANTE_ENABLE_2D),1)
$(OBJ_DIR)/%.o: $(AQROOT)/hal/user/arch/thirdparty_special/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<
endif

ifeq ($(VIVANTE_ENABLE_VG),1)
$(OBJ_DIR)/%.o: $(AQROOT)/hal/user/archvg/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQVGARCH)/cmodel/inc -o $@ $<
endif

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/old_impl/optimizer/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/old_impl/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/lib/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

ifeq ($(VSC_VIR_BUILD),1)
$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/asm/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/chip/gpu/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/drvi/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/array/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/base/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/bitvector/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/graph/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/hash/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/list/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/mm/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/string/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/table/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/utils/tree/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/analysis/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/codegen/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/ir/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/lower/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/linker/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/passmanager/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/vir/transform/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<

$(OBJ_DIR)/%.o: $(AQROOT)/compiler/libVSC/debug/%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -I$(AQARCH)/cmodel/inc -o $@ $<
endif
include $(AQROOT)/common.target

ifneq ($(wildcard $(OBJ_DIR)/*.d),)
include $(wildcard $(OBJ_DIR)/*.d)
endif

install: $(TARGET_OUTPUT) extra_install

.PHONY: extra_install
extra_install: $(TARGET_OUTPUT)
	@-mkdir -p $(INSTALL_DIR)
ifeq ($(gcdSTATIC_LINK), 0)
  ifeq ($(EGL_API_NULLWS),1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.nullws.so
  endif # EGL_API_NULLWS
  ifeq ($(EGL_API_X), 1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.x11.so
  endif # EGL_API_X
  ifeq ($(EGL_API_DRI), 1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.dri.so
  endif # EGL_API_DRI
  ifeq ($(EGL_API_GBM), 1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.gbm.so
  endif # EGL_API_GBM
  ifeq ($(EGL_API_FB)_$(EGL_API_WL), 1_1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.wl.so
  endif # EGL_API_FB
  ifeq ($(EGL_API_FB)_$(EGL_API_WL), 1_0)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.fb.so
  endif # EGL_API_WL
  ifeq ($(EGL_API_DFB), 1)
	@-cp -f $(TARGET_OUTPUT) $(INSTALL_DIR)/libVIVANTE.dfb.so
  endif # EGL_API_DFB
endif # gcdSTATIC_LINK

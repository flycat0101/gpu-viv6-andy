#include "cl_viv_vx_ext.h"

_viv_uniform VXC_512Bits uniConvertFstFp16Fp32_4x4;
_viv_uniform VXC_512Bits uniConvertSecFp16Fp32_4x4;
_viv_uniform VXC_512Bits uniConvertInt32toUint8_2x8;

__kernel void vxcFloor_fp16
    (
    image2d_array_t input,
    int type,
    image2d_array_t output
    )
{
    int gidx = get_global_id(0);
    int gidy = get_global_id(1);
    int gidz = get_global_id(2);
    int4 coord = (int4)(gidx, gidy, gidz, 0);

    vxc_short8 data;
    vxc_half8 tmpData;
    vxc_float4 tmpVal1, tmpVal2;
    half4 tmpOut1, tmpOut2;
    VXC_ReadImage2DArray(data, input, coord, VXC_5BITOFFSET_XY(0,0),
        VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, tmpData, data, 16);
    VXC_DP4x4(tmpVal1, tmpData, tmpData, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniConvertFstFp16Fp32_4x4);
    VXC_DP4x4(tmpVal2, tmpData, tmpData, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniConvertSecFp16Fp32_4x4);
    tmpVal1 = floor(tmpVal1);
    tmpVal2 = floor(tmpVal2);

    _viv_asm(CONV, tmpOut1, tmpVal1);
    _viv_asm(CONV, tmpOut2, tmpVal2);
    VXC_DP2x8(data, tmpOut1, tmpOut2, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniConvertInt32toUint8_2x8);
    VXC_WriteImage2DArray(output, coord, data, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}

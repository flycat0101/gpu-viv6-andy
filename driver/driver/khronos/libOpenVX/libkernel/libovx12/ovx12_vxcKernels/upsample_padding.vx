#include "cl_viv_vx_ext.h"

__kernel void upsample_padding_u8_to_u8
(
    __read_only  image2d_t      src_image,
    __write_only image2d_t      dst_image
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_src = (int2)(0, 0);
    uchar value;

    if (coord.y % 2 != 0 || coord.x % 2 != 0)
    {
        value = 0;
    }
    else
    {
        coord_src.x = coord.x / 2;
        coord_src.y = coord.y / 2;
        VXC_ReadImage(value, src_image, coord_src, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    }

    VXC_WriteImage(dst_image, coord, value, VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
}

__kernel void upsample_padding_u8_to_s16
(
    __read_only  image2d_t      src_image,
    __write_only image2d_t      dst_image
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_src = (int2)(0, 0);
    short value;
    uchar reg;

    if (coord.y % 2 != 0 || coord.x % 2 != 0)
    {
        value = 0;
    }
    else
    {
        coord_src.x = coord.x / 2;
        coord_src.y = coord.y / 2;
        VXC_ReadImage(reg, src_image, coord_src, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
        value = (short)reg;
    }

    VXC_WriteImage(dst_image, coord, value, VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
}

__kernel void upsample_padding_s16_to_u8
(
    __read_only  image2d_t      src_image,
    __write_only image2d_t      dst_image
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_src = (int2)(0, 0);
    uchar value;
    short reg;

    if (coord.y % 2 != 0 || coord.x % 2 != 0)
    {
        value = 0;
    }
    else
    {
        coord_src.x = coord.x / 2;
        coord_src.y = coord.y / 2;
        VXC_ReadImage(reg, src_image, coord_src, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
        value = (uchar)reg;
    }

    VXC_WriteImage(dst_image, coord, value, VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
}

__kernel void upsample_padding_s16_to_s16
(
    __read_only  image2d_t      src_image,
    __write_only image2d_t      dst_image
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    int2 coord_src = (int2)(0, 0);
    short value;

    if (coord.y % 2 != 0 || coord.x % 2 != 0)
    {
        value = 0;
    }
    else
    {
        coord_src.x = coord.x / 2;
        coord_src.y = coord.y / 2;
        VXC_ReadImage(value, src_image, coord_src, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    }

    VXC_WriteImage(dst_image, coord, value, VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
}
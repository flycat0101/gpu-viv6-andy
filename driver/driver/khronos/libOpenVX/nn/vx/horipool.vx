#include "cl_viv_vx_ext.h"
_viv_uniform VXC_512Bits UniFp16toFp32;
_viv_uniform VXC_512Bits UniPack035;
_viv_uniform VXC_512Bits Uni2x8MaskInt16 ;
_viv_uniform VXC_512Bits UniShort2Int;
_viv_uniform VXC_512Bits UniShort2intLow;
_viv_uniform VXC_512Bits UniShort2IntHigh;

_viv_uniform VXC_512Bits UinTestData;
__kernel void vxcHoripool
    (
	       __read_only image2d_t  src,
		   __read_only image2d_t  vpool,
		   global int             *depth,
		   global int             *width,
		   global int             *height,
		   __read_only image2d_t   dst)

{

	int index   =  get_global_id(0);     //rects
	int channel =  get_global_id(1);     //depths
	int2 pos_src = (int2)(58,index);	 //read pos of map roi
	vxc_short8 pos01,pos23,pos45;
	int4 pos_pool;
	vxc_short8 data0,data1,datar0,datar1,tmp;
	vxc_short8 mask0,mask1,mask2,mask3,mask4,mask5;
	short szx0,szx1;
	vxc_short8 pool;
	int2 pos_dst;
	vxc_short8 pos3;
	float4 dprslt;
	int2 pos_mask;

	VXC_OP4(img_load, pos01, src, pos_src, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	VXC_OP4(img_load, pos23, src, pos_src, VXC_5BITOFFSET_XY(4,0), VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0));
	VXC_OP4(img_load, pos45, src, pos_src, VXC_5BITOFFSET_XY(8,0), VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0));
	pos_src.x+=12;

	VXC_OP4(img_load, pos3 , src, (int2)(2,index), VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 1, 0, VXC_RM_TowardZero, 0));

	pos_mask= (int2)(12,index);
	VXC_OP4(img_load, mask0, src, pos_mask, VXC_5BITOFFSET_XY(-8,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	VXC_OP4(img_load, mask1, src, pos_mask, VXC_5BITOFFSET_XY(0 ,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
 	VXC_OP4(img_load, mask2, src, pos_mask, VXC_5BITOFFSET_XY( 8,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	pos_mask.x = 36;
	VXC_OP4(img_load, mask3, src, pos_mask, VXC_5BITOFFSET_XY(-8,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	VXC_OP4(img_load, mask4, src, pos_mask, VXC_5BITOFFSET_XY(0 ,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
 	VXC_OP4(img_load, mask5, src, pos_mask, VXC_5BITOFFSET_XY( 8,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

	int loop = 0;
	short cx8 = channel*8;
	int2 pos_szx = (int2)(52,index);
	VXC_OP4(dp4x4, pos_dst, pos3, pos3, VXC_MODIFIER(0, 1, 0, VXC_RM_TowardZero, 0), UniShort2Int);
	pos_dst.x += channel*36;

      //read 01
	   VXC_OP4(dp4x4, pos_pool, pos01, cx8, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), UniShort2intLow);

	   VXC_OP4(img_load, datar0, vpool, pos_pool.xy, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
 	   VXC_OP4(dp16x1, dprslt, datar0, datar0, VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0), UinTestData);

	   VXC_OP4(img_load, datar1, vpool, pos_pool.zw, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	   VXC_OP4(img_load, pos01, src, pos_src, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

	do{
		data0 = datar0;
		data1 = datar1;

		//read 23
		VXC_OP4(dp4x4, pos_pool, pos23, cx8, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), UniShort2intLow);
		VXC_OP4(img_load, datar0, vpool, pos_pool.xy, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
		VXC_OP4(img_load, datar1, vpool, pos_pool.zw, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	    VXC_OP4(img_load, pos23, src, pos_src, VXC_5BITOFFSET_XY(4,0), VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0));
	// pw = 0
		VXC_OP4(dp2x8, tmp, data0, mask0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data0,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data0, data0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(0, 0, 0, 0, 0));
	 // pw = 1
		VXC_OP4(dp2x8, tmp, data1, mask1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data1,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data1, data1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(1, 1, 0, 0, 0));

		data0 = datar0;
		data1 = datar1;
	//read 45
	  	VXC_OP4(dp4x4, pos_pool, pos45, cx8, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), UniShort2intLow);
		VXC_OP4(img_load, datar0, vpool, pos_pool.xy, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
		VXC_OP4(img_load, datar1, vpool, pos_pool.zw, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	    VXC_OP4(img_load, pos45, src, pos_src, VXC_5BITOFFSET_XY(8,0), VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0));
	    pos_src.x+=12;

		// pw = 2
		VXC_OP4(dp2x8, tmp, data0, mask2, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data0,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data0, data0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(2, 2, 0, 0, 0));
	 // pw = 3
		VXC_OP4(dp2x8, tmp, data1, mask3, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data1,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data1, data1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(3, 3, 0, 0, 0));

		data0 = datar0;
		data1 = datar1;
  //  read 01
	   VXC_OP4(dp4x4, pos_pool, pos01, cx8, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), UniShort2intLow);
	   VXC_OP4(img_load, datar0, vpool, pos_pool.xy, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
 	   VXC_OP4(img_load, datar1, vpool, pos_pool.zw, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
	   VXC_OP4(img_load, pos01, src, pos_src, VXC_5BITOFFSET_XY(0,0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

		// pw = 4
		VXC_OP4(dp2x8, tmp, data0, mask4, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data0,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data0, data0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(4, 4, 0, 0, 0));
	 // pw = 5
		VXC_OP4(dp2x8, tmp, data1, mask5, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), Uni2x8MaskInt16);
		VXC_HorzMax3(data1,tmp,VXC_MODIFIER(0, 5, 0, 0, 0));
		VXC_OP4(dp4x8, tmp, data1, data1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), UniPack035);
		VXC_HorzMax3(pool,tmp,VXC_MODIFIER(5, 5, 0, 0, 0));

		VXC_OP4_NoDest(img_store, dst, pos_dst, pool, VXC_MODIFIER(0, 5, 0, VXC_RM_TowardZero, 0));
		pos_dst.x += 6;

		loop++;
	 }while(loop<6);
}

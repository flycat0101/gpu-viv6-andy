##############################################################################
#
#    Copyright (c) 2005 - 2020 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################

#
# Driver part of OpenVX.
#

#############################################################################
# Include common definitions.

include $(AQROOT)/makefile.linux.def
include ../../makefile.linux.def
INCLUDE += -I$(AQROOT)/hal/inc
INCLUDE += -I$(AQROOT)/hal/user
INCLUDE += -I$(AQROOT)/hal/os/linux/user
INCLUDE += -I$(AQARCH)/cmodel/inc
INCLUDE += -I$(AQROOT)/sdk/inc
INCLUDE += -I$(AQROOT)/compiler/libVSC/include

INCLUDE += -I../include
INCLUDE += -I../../kernels
ifeq ($(ORI_NNARCHPERF),1)
INCLUDE += -I../../libarchmodel/include
else
INCLUDE += -I../../libarchmodelInterface/include
INCLUDE += -I$(AQROOT)/driver/khronos/libOpenVX/vipArchPerfMdl_dev/vipArchPerf
INCLUDE += -I$(AQROOT)/driver/khronos/libOpenVX/vipArchPerfMdl_dev/libarchmodelSw/include
endif

ifeq ($(gcdSTATIC_LINK), 1)
STATIC=1
TARGET_NAME = libOpenVX.a
else
DYNAMIC = 1
TARGET_NAME = libOpenVX.so
endif

#############################################################################
# Objects.

# Core
OBJECTS         =  \
                    $(OBJ_DIR)/gc_vx_target.o \
                    $(OBJ_DIR)/gc_vx_json.o \
                    $(OBJ_DIR)/gc_vx_context.o \
                    $(OBJ_DIR)/gc_vx_array.o \
                    $(OBJ_DIR)/gc_vx_convolution.o \
                    $(OBJ_DIR)/gc_vx_delay.o   \
                    $(OBJ_DIR)/gc_vx_distribution.o    \
                    $(OBJ_DIR)/gc_vx_error.o   \
                    $(OBJ_DIR)/gc_vx_graph.o \
                    $(OBJ_DIR)/gc_vx_graph_optimization.o \
                    $(OBJ_DIR)/gc_vx_image.o   \
                    $(OBJ_DIR)/gc_vx_kernel.o  \
                    $(OBJ_DIR)/gc_vx_log.o \
                    $(OBJ_DIR)/gc_vx_lut.o \
                    $(OBJ_DIR)/gc_vx_matrix.o  \
                    $(OBJ_DIR)/gc_vx_memory.o  \
                    $(OBJ_DIR)/gc_vx_meta_format.o \
                    $(OBJ_DIR)/gc_vx_node.o    \
                    $(OBJ_DIR)/gc_vx_node_api.o \
                    $(OBJ_DIR)/gc_vx_object_array.o \
                    $(OBJ_DIR)/gc_vx_runtime.o    \
                    $(OBJ_DIR)/gc_vx_parameter.o   \
                    $(OBJ_DIR)/gc_vx_pyramid.o \
                    $(OBJ_DIR)/gc_vx_reference.o   \
                    $(OBJ_DIR)/gc_vx_remap.o   \
                    $(OBJ_DIR)/gc_vx_scalar.o  \
                    $(OBJ_DIR)/gc_vx_threshold.o   \
                    $(OBJ_DIR)/gc_vx_program.o  \
                    $(OBJ_DIR)/gc_vx_profiler.o  \
                    $(OBJ_DIR)/gc_vx_tensor.o   \
                    $(OBJ_DIR)/gc_vx_layer.o   \
                    $(OBJ_DIR)/gc_vx_binary.o   \
                    $(OBJ_DIR)/gc_vx_gpu_layer.o   \

# Operations
OBJECTS         +=    \
                    $(OBJ_DIR)/gc_vx_op_fc.o \
                    $(OBJ_DIR)/gc_vx_op_debug.o \
                    $(OBJ_DIR)/gc_vx_op_tensor_copy.o

# Layers
OBJECTS         +=    \
                    $(OBJ_DIR)/gc_vx_layer_lstm.o \
		    $(OBJ_DIR)/gc_vx_layer_activation.o \
		    $(OBJ_DIR)/gc_vx_layer_conv.o \
		    $(OBJ_DIR)/gc_vx_layer_fc.o \
		   $(OBJ_DIR)/gc_vx_layer_adapter.o \
					$(OBJ_DIR)/gc_vx_layer_batch_norm.o \
					$(OBJ_DIR)/gc_vx_layer_concat.o \
					$(OBJ_DIR)/gc_vx_layer_deconv.o \
					$(OBJ_DIR)/gc_vx_layer_depthwise_conv.o \
					$(OBJ_DIR)/gc_vx_layer_div.o \
					$(OBJ_DIR)/gc_vx_layer_eltwise.o \
					$(OBJ_DIR)/gc_vx_layer_rnn.o \
					$(OBJ_DIR)/gc_vx_layer_hash_lut.o \
					$(OBJ_DIR)/gc_vx_layer_l2norm.o \
					$(OBJ_DIR)/gc_vx_layer_lrn.o \
					$(OBJ_DIR)/gc_vx_layer_lsh_project.o \
					$(OBJ_DIR)/gc_vx_layer_lut.o \
					$(OBJ_DIR)/gc_vx_layer_pool.o \
					$(OBJ_DIR)/gc_vx_layer_reduce_sum.o \
					$(OBJ_DIR)/gc_vx_layer_reorg.o \
					$(OBJ_DIR)/gc_vx_layer_roi_pool.o \
					$(OBJ_DIR)/gc_vx_layer_rpn.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_mean.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_reshape.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_round.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_scale.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_squeeze.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_stride_slice.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_transpose.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_pad.o \
					$(OBJ_DIR)/gc_vx_layer_softmax.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_copy.o \
					$(OBJ_DIR)/gc_vx_layer_tensor_reverse.o \

# API
OBJECTS         +=    \
                    $(OBJ_DIR)/gc_vx_interface.o \
                    $(OBJ_DIR)/gc_vx_nn_extension_interface.o \
                    $(OBJ_DIR)/gc_vx_internal_node_api.o \
                    $(OBJ_DIR)/gc_vx_nn_util.o \
                    $(OBJ_DIR)/gc_vx_nn_encoder.o \
                    $(OBJ_DIR)/gc_vx_nn_wb.o \
                    $(OBJ_DIR)/gc_vx_nn_command.o   \
                    $(OBJ_DIR)/gc_vx_sys.o

# Kernels
OBJECTS         +=  \
                    $(OBJ_DIR)/gc_vxk_absdiff.o \
                    $(OBJ_DIR)/gc_vxk_accumulate.o \
                    $(OBJ_DIR)/gc_vxk_addsub.o \
                    $(OBJ_DIR)/gc_vxk_bitwise.o \
                    $(OBJ_DIR)/gc_vxk_channel.o \
                    $(OBJ_DIR)/gc_vxk_convertcolor.o \
                    $(OBJ_DIR)/gc_vxk_convertdepth.o \
                    $(OBJ_DIR)/gc_vxk_convolve.o \
                    $(OBJ_DIR)/gc_vxk_fast9.o \
                    $(OBJ_DIR)/gc_vxk_filter.o \
                    $(OBJ_DIR)/gc_vxk_harris.o \
                    $(OBJ_DIR)/gc_vxk_histogram.o \
                    $(OBJ_DIR)/gc_vxk_integralimage.o \
                    $(OBJ_DIR)/gc_vxk_lut.o \
                    $(OBJ_DIR)/gc_vxk_magnitude.o \
                    $(OBJ_DIR)/gc_vxk_common.o \
                    $(OBJ_DIR)/gc_vxk_morphology.o \
                    $(OBJ_DIR)/gc_vxk_multiply.o \
                    $(OBJ_DIR)/gc_vxk_nn_layers.o \
                    $(OBJ_DIR)/gc_vxk_norm.o \
                    $(OBJ_DIR)/gc_vxk_nonmax.o \
                    $(OBJ_DIR)/gc_vxk_optpyrlk.o \
                    $(OBJ_DIR)/gc_vxk_phase.o \
                    $(OBJ_DIR)/gc_vxk_remap.o \
                    $(OBJ_DIR)/gc_vxk_scale.o \
                    $(OBJ_DIR)/gc_vxk_sobel3x3.o \
                    $(OBJ_DIR)/gc_vxk_statistics.o \
                    $(OBJ_DIR)/gc_vxk_threshold.o \
                    $(OBJ_DIR)/gc_vxk_warp.o \

vpath %.c

################################################################################

LIBS += -L $(SDK_DIR)/drivers
LIBS += -L $(AQROOT)/hal/user/$(OBJ_DIR)
ifeq ($(ORI_NNARCHPERF),1)
else
LIBS += -L $(AQROOT)/driver/khronos/libOpenVX/vipArchPerfMdl_dev/vipArchPerf/$(OBJ_DIR)
endif
ifeq ($(USE_VXC_BINARY)$(USE_VSC_LITE),11)
CFLAGS += -DVSC_LITE_BUILD=1
LIBS += -lVSC_Lite -lGAL
else
LIBS += -lVSC -lGAL
endif

VPATH = ops:layers:../../kernels

ifeq ($(USE_VXC_BINARY),1)
INCLUDE += -I$(AQROOT)/driver/khronos/libOpenVX/libkernel/libnnvxc
INCLUDE += -I$(AQROOT)/driver/khronos/libOpenVX/libkernel/libovx12
INCLUDE += -I$(AQROOT)/driver/khronos/libOpenVX/libkernel/libnngpu
endif

CFLAGS += $(INCLUDE)
ifeq ($(ORI_NNARCHPERF),1)
LIBS += $(AQROOT)/driver/khronos/libOpenVX/libarchmodel/$(OBJ_DIR)/libarchmodel.a
else
LIBS += $(AQROOT)/driver/khronos/libOpenVX/libarchmodelInterface/$(OBJ_DIR)/libarchmodelInterface.a
LIBS += -l ArchModelSw
endif
LIBS += -l NNArchPerf
LIBS += -l dl -l pthread -lm

################################################################################
# Add extra include path.

################################################################################
# Define the macros used in common makefile.

# installation directory
INSTALL_DIR := $(SDK_DIR)/drivers

################################################################################
# Include the common makefile.

include $(AQROOT)/common.target

################################################################################
# Extra installation.
install: $(TARGET_OUTPUT) extra_install

.PHONY: extra_install
extra_install: $(TARGET_OUTPUT)
	@mkdir -p $(SDK_DIR)/include
	@-cp -rf $(AQROOT)/sdk/inc/VX $(SDK_DIR)/include
ifeq ($(USE_VXC_BINARY),0)
	@mkdir -p $(SDK_DIR)/nnvxc_kernels
	@-cp -rvf $(AQROOT)/driver/khronos/libOpenVX/libkernel/libnnvxc/nnvxc_kernels $(SDK_DIR)
	@mkdir -p $(SDK_DIR)/ovx12_vxcKernels
	@-cp -rvf $(AQROOT)/driver/khronos/libOpenVX/libkernel/libovx12/ovx12_vxcKernels $(SDK_DIR)
	@mkdir -p $(SDK_DIR)/nngpu_kernels
	@-cp -rvf $(AQROOT)/driver/khronos/libOpenVX/libkernel/libnngpu/nngpu_kernels $(SDK_DIR)
endif

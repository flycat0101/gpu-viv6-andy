##############################################################################
#
#    Copyright (c) 2005 - 2017 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################


#
# Linux build file for OpenGL ES 1.1 library.
#

################################################################################
# Include common definitions.

include $(AQROOT)/makefile.linux.def

################################################################################
# Define target module name.

ifeq ($(gcdSTATIC_LINK), 1)
  GLES_CL           := $(OBJ_DIR)/libGLES_CL.a
  GLES_CM           := $(OBJ_DIR)/libGLES_CM.a
  GLES_V1_CL        := $(OBJ_DIR)/libGLESv1_CL.a
  GLES_V1_CM        := $(OBJ_DIR)/libGLESv1_CM.a
else
  GLES_CL           := $(OBJ_DIR)/libGLES_CL.so
  GLES_CM           := $(OBJ_DIR)/libGLES_CM.so
  GLES_V1_CL        := $(OBJ_DIR)/libGLESv1_CL.so
  GLES_V1_CM        := $(OBJ_DIR)/libGLESv1_CM.so

  # Define target soname.
  GLES_CL_SONAME    := libGLES_CL.so
  GLES_CM_SONAME    := libGLES_CM.so
  GLES_V1_CL_SONAME := libGLESv1_CL.so
  GLES_V1_CM_SONAME := libGLESv1_CM.so

  GLES_CL_LINKS     :=
  GLES_CM_LINKS     :=
  GLES_V1_CL_LINKS  :=
  GLES_V1_CM_LINKS  :=
endif

TARGET_MODULES      := $(GLES_CL)
TARGET_MODULES      += $(GLES_CM)
TARGET_MODULES      += $(GLES_V1_CL)
TARGET_MODULES      += $(GLES_V1_CM)

################################################################################
# Installation directory.

INSTALL_DIR         := $(SDK_DIR)/drivers

################################################################################
# Supply additional include directories.

INCLUDE := -I$(AQROOT)/hal/inc \
           -I$(AQROOT)/hal/os/linux/user \
           -I$(AQROOT)/hal/user \
           -I$(AQARCH)/cmodel/inc \
           -I$(AQROOT)/sdk/inc \
           -I$(AQROOT)/compiler/libVSC/include \
           -I$(AQROOT)/driver/khronos/libEGL/inc

ifneq ($(filter 1,$(EGL_API_X) $(EGL_API_DRI)),)
  INCLUDE += -I$(X11_ARM_DIR)/include
endif

CFLAGS += $(INCLUDE)

################################################################################
# Add extra flags for object files.

ifneq ($(USE_ARMCC), 1)
  CFLAGS  += -fPIC -Werror -ansi
endif

CFLAGS += -D__GL_EXPORTS


################################################################################
# Define flags for the linker.

LDFLAGS := \
    $(LFLAGS)

ifneq ($(USE_ARMCC),1)
  ifeq ($(GL_11_APPENDIX),)
    LDFLAGS += -Wl,--version-script=libGLESv11.map
  endif
endif

ifeq ($(USE_ARMCC),1)
  LDFLAGS += --shared
else
  LDFLAGS += -Wall -shared -Wl,-z,defs
endif

ifeq ($(USE_ARMCC),1)
  SONAME_OPTION := -L--soname=,
else
  SONAME_OPTION := -Wl,-soname,
endif

################################################################################
# Supply dependent libraries.

LDLIBS := -L$(SDK_DIR)/drivers \
          -L$(AQROOT)/hal/user/$(OBJ_DIR) -lGAL \
          -L$(AQROOT)/compiler/libVSC/$(OBJ_DIR) -lVSC \
          -lm

################################################################################
# Describe object files.

OBJECTS := gc_glff.o \
           gc_glff_alpha.o \
           gc_glff_basic_types.o \
           gc_glff_buffer.o \
           gc_glff_clear.o \
           gc_glff_clip_plane.o \
           gc_glff_cull.o \
           gc_glff_depth.o \
           gc_glff_draw.o \
           gc_glff_enable.o \
           gc_glff_fixed_func.o \
           gc_glff_fragment_shader.o \
           gc_glff_frag_proc.o \
           gc_glff_framebuffer.o \
           gc_glff_fog.o\
           gc_glff_hash.o \
           gc_glff_lighting.o \
           gc_glff_line.o \
           gc_glff_matrix.o \
           gc_glff_multisample.o \
           gc_glff_named_object.o \
           gc_glff_pixel.o \
           gc_glff_point.o \
           gc_glff_query.o \
           gc_glff_renderbuffer.o \
           gc_glff_states.o \
           gc_glff_stream.o \
           gc_glff_texture.o \
           gc_glff_vertex_shader.o \
           gc_glff_viewport.o \
           gc_glff_profiler.o

OBJECTS_EGL := \
           gc_glff_egl.o

OBJECTS_CL := \
           gc_glff_context-cl.o

OBJECTS_CM := \
           gc_glff_context.o

GLES_CL_OBJECTS     := $(addprefix $(OBJ_DIR)/,$(OBJECTS) $(OBJECTS_EGL) $(OBJECTS_CL))
GLES_CM_OBJECTS     := $(addprefix $(OBJ_DIR)/,$(OBJECTS) $(OBJECTS_EGL) $(OBJECTS_CM))
GLES_V1_CL_OBJECTS  := $(addprefix $(OBJ_DIR)/,$(OBJECTS) $(OBJECTS_CL))
GLES_V1_CM_OBJECTS  := $(addprefix $(OBJ_DIR)/,$(OBJECTS) $(OBJECTS_CM))

################################################################################
# Define targets.

.PHONY: all clean install

all: $(TARGET_MODULES)

clean:
	@rm -rf $(OBJ_DIR)

install: all
	@mkdir -p $(INSTALL_DIR)
	@-cp $(TARGET_MODULES) $(INSTALL_DIR)
	@mkdir -p $(SDK_DIR)/drivers
	@mkdir -p $(SDK_DIR)/include/GLES
	@-cp -f $(AQROOT)/sdk/inc/GLES/*.h $(SDK_DIR)/include/GLES
	@for lib in $(GLES_CL_LINKS); do \
	    ln -sf $(notdir $(GLES_CL)) $(INSTALL_DIR)/$$lib; \
	done
	@for lib in $(GLES_CM_LINKS); do \
	    ln -sf $(notdir $(GLES_CM)) $(INSTALL_DIR)/$$lib; \
	done
	@for lib in $(GLES_V1_CL_LINKS); do \
	    ln -sf $(notdir $(GLES_V1_CL)) $(INSTALL_DIR)/$$lib; \
	done
	@for lib in $(GLES_V1_CM_LINKS); do \
	    ln -sf $(notdir $(GLES_V1_CM)) $(INSTALL_DIR)/$$lib; \
	done

################################################################################
# Module rules.

ifeq ($(gcdSTATIC_LINK),1)

$(GLES_CL): $(GLES_CL_OBJECTS)
	$(AR) -r -c $@ $(GLES_CL_OBJECTS)
ifneq ($(USE_ARMCC),1)
	$(RANLIB) $@
endif

$(GLES_CM): $(GLES_CM_OBJECTS)
	$(AR) -r -c $@ $(GLES_CM_OBJECTS)
ifneq ($(USE_ARMCC),1)
	$(RANLIB) $@
endif

$(GLES_V1_CL): $(GLES_V1_CL_OBJECTS)
	$(AR) -r -c $@ $(GLES_V1_CL_OBJECTS)
ifneq ($(USE_ARMCC),1)
	$(RANLIB) $@
endif

$(GLES_V1_CM): $(GLES_V1_CM_OBJECTS)
	$(AR) -r -c $@ $(GLES_V1_CM_OBJECTS)
ifneq ($(USE_ARMCC),1)
	$(RANLIB) $@
endif

else

# module dependencies
$(TARGET_MODULES): $(wildcard $(AQROOT)/hal/user/$(OBJ_DIR)/libGAL.so) \
                   $(wildcard $(AQROOT)/compiler/libVSC/$(OBJ_DIR)/libVSC.so)

$(GLES_CL): $(GLES_CL_OBJECTS)
	$(CC) $(LDFLAGS) $(SONAME_OPTION)$(GLES_CL_SONAME) -o $@ $(GLES_CL_OBJECTS) $(LDLIBS)

$(GLES_CM): $(GLES_CM_OBJECTS)
	$(CC) $(LDFLAGS) $(SONAME_OPTION)$(GLES_CM_SONAME) -o $@ $(GLES_CM_OBJECTS) $(LDLIBS)

$(GLES_V1_CL): $(GLES_V1_CL_OBJECTS)
	$(CC) $(LDFLAGS) $(SONAME_OPTION)$(GLES_V1_CL_SONAME) -o $@ $(GLES_V1_CL_OBJECTS) $(LDLIBS)

$(GLES_V1_CM): $(GLES_V1_CM_OBJECTS)
	$(CC) $(LDFLAGS) $(SONAME_OPTION)$(GLES_V1_CM_SONAME) -o $@ $(GLES_V1_CM_OBJECTS) $(LDLIBS)

endif

################################################################################
# Object rules.

$(OBJ_DIR)/%.o: %.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -MMD -o $@ $<

$(OBJ_DIR)/%-cl.o: %.c
	@mkdir -p $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -DCOMMON_LITE -MMD -o $@ $<

# object dependencies.
-include $(GLES_CM_OBJECTS:.o=.d)


/****************************************************************************
*
*    Copyright (c) 2005 - 2017 by Vivante Corp.  All rights reserved.
*
*    The material in this file is confidential and contains trade secrets
*    of Vivante Corporation. This is proprietary information owned by
*    Vivante Corporation. No part of this work may be disclosed,
*    reproduced, copied, transmitted, or used in any way for any purpose,
*    without the express written permission of Vivante Corporation.
*
*****************************************************************************/


#ifndef __gc_es_protos_h__
#define __gc_es_protos_h__

/* OGL type */
extern GLboolean GL_APIENTRY __gles_IsList(__GLcontext *gc,  GLuint list ) ;
extern GLvoid GL_APIENTRY __gles_DeleteLists(__GLcontext *gc,  GLuint list, GLsizei range ) ;
extern GLuint GL_APIENTRY __gles_GenLists(__GLcontext *gc,  GLsizei range ) ;
extern GLvoid GL_APIENTRY __gles_NewList(__GLcontext *gc,  GLuint list, GLenum mode );
extern GLvoid GL_APIENTRY __gles_EndList(__GLcontext *gc) ;
extern GLvoid GL_APIENTRY __gles_CallList(__GLcontext *gc,  GLuint list ) ;
extern GLvoid GL_APIENTRY __gles_CallLists(__GLcontext *gc,  GLsizei n, GLenum type, const GLvoid *lists ) ;
extern GLvoid GL_APIENTRY __gles_ListBase(__GLcontext *gc,  GLuint base ) ;
extern GLvoid GL_APIENTRY __gles_Begin(__GLcontext *gc,  GLenum mode ) ;
extern GLvoid GL_APIENTRY __gles_Bitmap(__GLcontext *gc,  GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap ) ;
extern GLvoid GL_APIENTRY __gles_Color3b(__GLcontext *gc,  GLbyte red, GLbyte green, GLbyte blue );
extern GLvoid GL_APIENTRY __gles_Color3d(__GLcontext *gc,  GLdouble red, GLdouble green, GLdouble blue );
extern GLvoid GL_APIENTRY __gles_Color3f(__GLcontext *gc,  GLfloat red, GLfloat green, GLfloat blue );
extern GLvoid GL_APIENTRY __gles_Color3i(__GLcontext *gc,  GLint red, GLint green, GLint blue );
extern GLvoid GL_APIENTRY __gles_Color3s(__GLcontext *gc,  GLshort red, GLshort green, GLshort blue );
extern GLvoid GL_APIENTRY __gles_Color3ub(__GLcontext *gc,  GLubyte red, GLubyte green, GLubyte blue );
extern GLvoid GL_APIENTRY __gles_Color3ui(__GLcontext *gc,  GLuint red, GLuint green, GLuint blue );
extern GLvoid GL_APIENTRY __gles_Color3us(__GLcontext *gc,  GLushort red, GLushort green, GLushort blue );
extern GLvoid GL_APIENTRY __gles_Color3bv(__GLcontext *gc,  const GLbyte *v );
extern GLvoid GL_APIENTRY __gles_Color3dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Color3fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Color3iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Color3sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Color3ubv(__GLcontext *gc,  const GLubyte *v );
extern GLvoid GL_APIENTRY __gles_Color3uiv(__GLcontext *gc,  const GLuint *v );
extern GLvoid GL_APIENTRY __gles_Color3usv(__GLcontext *gc,  const GLushort *v );
extern GLvoid GL_APIENTRY __gles_Color4b(__GLcontext *gc,  GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha );
extern GLvoid GL_APIENTRY __gles_Color4d(__GLcontext *gc,  GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha );
extern GLvoid GL_APIENTRY __gles_Color4f(__GLcontext *gc,  GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
extern GLvoid GL_APIENTRY __gles_Color4i(__GLcontext *gc,  GLint red, GLint green, GLint blue, GLint alpha );
extern GLvoid GL_APIENTRY __gles_Color4s(__GLcontext *gc,  GLshort red, GLshort green, GLshort blue, GLshort alpha );
extern GLvoid GL_APIENTRY __gles_Color4ub(__GLcontext *gc,  GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha );
extern GLvoid GL_APIENTRY __gles_Color4ui(__GLcontext *gc,  GLuint red, GLuint green, GLuint blue, GLuint alpha );
extern GLvoid GL_APIENTRY __gles_Color4us(__GLcontext *gc,  GLushort red, GLushort green, GLushort blue, GLushort alpha );
extern GLvoid GL_APIENTRY __gles_Color4bv(__GLcontext *gc,  const GLbyte *v );
extern GLvoid GL_APIENTRY __gles_Color4dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Color4fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Color4iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Color4sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Color4ubv(__GLcontext *gc,  const GLubyte *v );
extern GLvoid GL_APIENTRY __gles_Color4uiv(__GLcontext *gc,  const GLuint *v );
extern GLvoid GL_APIENTRY __gles_Color4usv(__GLcontext *gc,  const GLushort *v );
extern GLvoid GL_APIENTRY __gles_EdgeFlag(__GLcontext *gc,  GLboolean flag );
extern GLvoid GL_APIENTRY __gles_EdgeFlagv(__GLcontext *gc,  const GLboolean *flag );
extern GLvoid GL_APIENTRY __gles_End(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_Indexd(__GLcontext *gc,  GLdouble c );
extern GLvoid GL_APIENTRY __gles_Indexf(__GLcontext *gc,  GLfloat c );
extern GLvoid GL_APIENTRY __gles_Indexi(__GLcontext *gc,  GLint c );
extern GLvoid GL_APIENTRY __gles_Indexs(__GLcontext *gc,  GLshort c );
extern GLvoid GL_APIENTRY __gles_Indexdv(__GLcontext *gc,  const GLdouble *c );
extern GLvoid GL_APIENTRY __gles_Indexfv(__GLcontext *gc,  const GLfloat *c );
extern GLvoid GL_APIENTRY __gles_Indexiv(__GLcontext *gc,  const GLint *c );
extern GLvoid GL_APIENTRY __gles_Indexsv(__GLcontext *gc,  const GLshort *c );
extern GLvoid GL_APIENTRY __gles_Normal3b(__GLcontext *gc,  GLbyte nx, GLbyte ny, GLbyte nz );
extern GLvoid GL_APIENTRY __gles_Normal3d(__GLcontext *gc,  GLdouble nx, GLdouble ny, GLdouble nz );
extern GLvoid GL_APIENTRY __gles_Normal3f(__GLcontext *gc,  GLfloat nx, GLfloat ny, GLfloat nz );
extern GLvoid GL_APIENTRY __gles_Normal3i(__GLcontext *gc,  GLint nx, GLint ny, GLint nz );
extern GLvoid GL_APIENTRY __gles_Normal3s(__GLcontext *gc,  GLshort nx, GLshort ny, GLshort nz );
extern GLvoid GL_APIENTRY __gles_Normal3bv(__GLcontext *gc,  const GLbyte *v );
extern GLvoid GL_APIENTRY __gles_Normal3dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Normal3fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Normal3iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Normal3sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_RasterPos2d(__GLcontext *gc,  GLdouble x, GLdouble y );
extern GLvoid GL_APIENTRY __gles_RasterPos2f(__GLcontext *gc,  GLfloat x, GLfloat y );
extern GLvoid GL_APIENTRY __gles_RasterPos2i(__GLcontext *gc,  GLint x, GLint y );
extern GLvoid GL_APIENTRY __gles_RasterPos2s(__GLcontext *gc,  GLshort x, GLshort y );
extern GLvoid GL_APIENTRY __gles_RasterPos3d(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z );
extern GLvoid GL_APIENTRY __gles_RasterPos3f(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z );
extern GLvoid GL_APIENTRY __gles_RasterPos3i(__GLcontext *gc,  GLint x, GLint y, GLint z );
extern GLvoid GL_APIENTRY __gles_RasterPos3s(__GLcontext *gc,  GLshort x, GLshort y, GLshort z );
extern GLvoid GL_APIENTRY __gles_RasterPos4d(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z, GLdouble w );
extern GLvoid GL_APIENTRY __gles_RasterPos4f(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z, GLfloat w );
extern GLvoid GL_APIENTRY __gles_RasterPos4i(__GLcontext *gc,  GLint x, GLint y, GLint z, GLint w );
extern GLvoid GL_APIENTRY __gles_RasterPos4s(__GLcontext *gc,  GLshort x, GLshort y, GLshort z, GLshort w );
extern GLvoid GL_APIENTRY __gles_RasterPos2dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_RasterPos2fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_RasterPos2iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_RasterPos2sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_RasterPos3dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_RasterPos3fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_RasterPos3iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_RasterPos3sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_RasterPos4dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_RasterPos4fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_RasterPos4iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_RasterPos4sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Rectd(__GLcontext *gc,  GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );
extern GLvoid GL_APIENTRY __gles_Rectf(__GLcontext *gc,  GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );
extern GLvoid GL_APIENTRY __gles_Recti(__GLcontext *gc,  GLint x1, GLint y1, GLint x2, GLint y2 );
extern GLvoid GL_APIENTRY __gles_Rects(__GLcontext *gc,  GLshort x1, GLshort y1, GLshort x2, GLshort y2 );
extern GLvoid GL_APIENTRY __gles_Rectdv(__GLcontext *gc,  const GLdouble *v1, const GLdouble *v2 );
extern GLvoid GL_APIENTRY __gles_Rectfv(__GLcontext *gc,  const GLfloat *v1, const GLfloat *v2 );
extern GLvoid GL_APIENTRY __gles_Rectiv(__GLcontext *gc,  const GLint *v1, const GLint *v2 );
extern GLvoid GL_APIENTRY __gles_Rectsv(__GLcontext *gc,  const GLshort *v1, const GLshort *v2 );
extern GLvoid GL_APIENTRY __gles_TexCoord1d(__GLcontext *gc,  GLdouble s );
extern GLvoid GL_APIENTRY __gles_TexCoord1f(__GLcontext *gc,  GLfloat s );
extern GLvoid GL_APIENTRY __gles_TexCoord1i(__GLcontext *gc,  GLint s );
extern GLvoid GL_APIENTRY __gles_TexCoord1s(__GLcontext *gc,  GLshort s );
extern GLvoid GL_APIENTRY __gles_TexCoord2d(__GLcontext *gc,  GLdouble s, GLdouble t );
extern GLvoid GL_APIENTRY __gles_TexCoord2f(__GLcontext *gc,  GLfloat s, GLfloat t );
extern GLvoid GL_APIENTRY __gles_TexCoord2i(__GLcontext *gc,  GLint s, GLint t );
extern GLvoid GL_APIENTRY __gles_TexCoord2s(__GLcontext *gc,  GLshort s, GLshort t );
extern GLvoid GL_APIENTRY __gles_TexCoord3d(__GLcontext *gc,  GLdouble s, GLdouble t, GLdouble r );
extern GLvoid GL_APIENTRY __gles_TexCoord3f(__GLcontext *gc,  GLfloat s, GLfloat t, GLfloat r );
extern GLvoid GL_APIENTRY __gles_TexCoord3i(__GLcontext *gc,  GLint s, GLint t, GLint r );
extern GLvoid GL_APIENTRY __gles_TexCoord3s(__GLcontext *gc,  GLshort s, GLshort t, GLshort r );
extern GLvoid GL_APIENTRY __gles_TexCoord4d(__GLcontext *gc,  GLdouble s, GLdouble t, GLdouble r, GLdouble q );
extern GLvoid GL_APIENTRY __gles_TexCoord4f(__GLcontext *gc,  GLfloat s, GLfloat t, GLfloat r, GLfloat q );
extern GLvoid GL_APIENTRY __gles_TexCoord4i(__GLcontext *gc,  GLint s, GLint t, GLint r, GLint q );
extern GLvoid GL_APIENTRY __gles_TexCoord4s(__GLcontext *gc,  GLshort s, GLshort t, GLshort r, GLshort q );
extern GLvoid GL_APIENTRY __gles_TexCoord1dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_TexCoord1fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_TexCoord1iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_TexCoord1sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_TexCoord2dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_TexCoord2fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_TexCoord2iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_TexCoord2sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_TexCoord3dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_TexCoord3fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_TexCoord3iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_TexCoord3sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_TexCoord4dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_TexCoord4fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_TexCoord4iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_TexCoord4sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Vertex2d(__GLcontext *gc,  GLdouble x, GLdouble y );
extern GLvoid GL_APIENTRY __gles_Vertex2f(__GLcontext *gc,  GLfloat x, GLfloat y );
extern GLvoid GL_APIENTRY __gles_Vertex2i(__GLcontext *gc,  GLint x, GLint y );
extern GLvoid GL_APIENTRY __gles_Vertex2s(__GLcontext *gc,  GLshort x, GLshort y );
extern GLvoid GL_APIENTRY __gles_Vertex3d(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z );
extern GLvoid GL_APIENTRY __gles_Vertex3f(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z );
extern GLvoid GL_APIENTRY __gles_Vertex3i(__GLcontext *gc,  GLint x, GLint y, GLint z );
extern GLvoid GL_APIENTRY __gles_Vertex3s(__GLcontext *gc,  GLshort x, GLshort y, GLshort z );
extern GLvoid GL_APIENTRY __gles_Vertex4d(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z, GLdouble w );
extern GLvoid GL_APIENTRY __gles_Vertex4f(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z, GLfloat w );
extern GLvoid GL_APIENTRY __gles_Vertex4i(__GLcontext *gc,  GLint x, GLint y, GLint z, GLint w );
extern GLvoid GL_APIENTRY __gles_Vertex4s(__GLcontext *gc,  GLshort x, GLshort y, GLshort z, GLshort w );
extern GLvoid GL_APIENTRY __gles_Vertex2dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Vertex2fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Vertex2iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Vertex2sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Vertex3dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Vertex3fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Vertex3iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Vertex3sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_Vertex4dv(__GLcontext *gc,  const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_Vertex4fv(__GLcontext *gc,  const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_Vertex4iv(__GLcontext *gc,  const GLint *v );
extern GLvoid GL_APIENTRY __gles_Vertex4sv(__GLcontext *gc,  const GLshort *v );
extern GLvoid GL_APIENTRY __gles_ClipPlane(__GLcontext *gc,  GLenum plane, const GLdouble *equation );
extern GLvoid GL_APIENTRY __gles_ColorMaterial(__GLcontext *gc,  GLenum face, GLenum mode );
extern GLvoid GL_APIENTRY __gles_Fogf(__GLcontext *gc,  GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_Fogi(__GLcontext *gc,  GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_Fogfv(__GLcontext *gc,  GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_Fogiv(__GLcontext *gc,  GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_Lightf(__GLcontext *gc,  GLenum light, GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_Lighti(__GLcontext *gc,  GLenum light, GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_Lightfv(__GLcontext *gc,  GLenum light, GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_Lightiv(__GLcontext *gc,  GLenum light, GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_LightModelf(__GLcontext *gc,  GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_LightModeli(__GLcontext *gc,  GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_LightModelfv(__GLcontext *gc,  GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_LightModeliv(__GLcontext *gc,  GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_LineStipple(__GLcontext *gc,  GLint factor, GLushort pattern );
extern GLvoid GL_APIENTRY __gles_Materialf(__GLcontext *gc,  GLenum face, GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_Materiali(__GLcontext *gc,  GLenum face, GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_Materialfv(__GLcontext *gc,  GLenum face, GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_Materialiv(__GLcontext *gc,  GLenum face, GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_PointSize(__GLcontext *gc,  GLfloat size );
extern GLvoid GL_APIENTRY __gles_PolygonMode(__GLcontext *gc,  GLenum face, GLenum mode );
extern GLvoid GL_APIENTRY __gles_PolygonStipple(__GLcontext *gc,  const GLubyte *mask );
extern GLvoid GL_APIENTRY __gles_ShadeModel(__GLcontext *gc,  GLenum mode );
extern GLvoid GL_APIENTRY __gles_TexImage1D(__GLcontext *gc,  GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels );
extern GLvoid GL_APIENTRY __gles_TexEnvf(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_TexEnvi(__GLcontext *gc,  GLenum target, GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_TexEnvfv(__GLcontext *gc,  GLenum target, GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_TexEnviv(__GLcontext *gc,  GLenum target, GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_TexGend(__GLcontext *gc,  GLenum coord, GLenum pname, GLdouble param );
extern GLvoid GL_APIENTRY __gles_TexGenf(__GLcontext *gc,  GLenum coord, GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_TexGeni(__GLcontext *gc,  GLenum coord, GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_TexGendv(__GLcontext *gc,  GLenum coord, GLenum pname, const GLdouble *params );
extern GLvoid GL_APIENTRY __gles_TexGenfv(__GLcontext *gc,  GLenum coord, GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_TexGeniv(__GLcontext *gc,  GLenum coord, GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_FeedbackBuffer(__GLcontext *gc,  GLsizei size, GLenum type, GLfloat *buffer );
extern GLvoid GL_APIENTRY __gles_SelectBuffer(__GLcontext *gc,  GLsizei size, GLuint *buffer );
extern GLint GL_APIENTRY __gles_RenderMode(__GLcontext *gc,  GLenum mode );
extern GLvoid GL_APIENTRY __gles_InitNames(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_LoadName(__GLcontext *gc,  GLuint name );
extern GLvoid GL_APIENTRY __gles_PushName(__GLcontext *gc,  GLuint name );
extern GLvoid GL_APIENTRY __gles_PopName(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_PassThrough(__GLcontext *gc,  GLfloat token );
extern GLvoid GL_APIENTRY __gles_DrawBuffer(__GLcontext *gc,  GLenum mode );
extern GLvoid GL_APIENTRY __gles_ClearAccum(__GLcontext *gc,  GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
extern GLvoid GL_APIENTRY __gles_ClearIndex(__GLcontext *gc,  GLfloat c );
extern GLvoid GL_APIENTRY __gles_ClearDepth(__GLcontext *gc,  GLclampd depth );
extern GLvoid GL_APIENTRY __gles_IndexMask(__GLcontext *gc,  GLuint mask );
extern GLvoid GL_APIENTRY __gles_Accum(__GLcontext *gc,  GLenum op, GLfloat value );
extern GLvoid GL_APIENTRY __gles_PushAttrib(__GLcontext *gc,  GLbitfield mask );
extern GLvoid GL_APIENTRY __gles_PopAttrib(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_Map1d(__GLcontext *gc,  GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
extern GLvoid GL_APIENTRY __gles_Map1f(__GLcontext *gc,  GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
extern GLvoid GL_APIENTRY __gles_Map2d(__GLcontext *gc,  GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
extern GLvoid GL_APIENTRY __gles_Map2f(__GLcontext *gc,  GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
extern GLvoid GL_APIENTRY __gles_MapGrid1d(__GLcontext *gc,  GLint un, GLdouble u1, GLdouble u2 );
extern GLvoid GL_APIENTRY __gles_MapGrid1f(__GLcontext *gc,  GLint un, GLfloat u1, GLfloat u2 );
extern GLvoid GL_APIENTRY __gles_MapGrid2d(__GLcontext *gc,  GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2 );
extern GLvoid GL_APIENTRY __gles_MapGrid2f(__GLcontext *gc,  GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2 );
extern GLvoid GL_APIENTRY __gles_EvalCoord1d(__GLcontext *gc,  GLdouble u );
extern GLvoid GL_APIENTRY __gles_EvalCoord1f(__GLcontext *gc,  GLfloat u );
extern GLvoid GL_APIENTRY __gles_EvalCoord1dv(__GLcontext *gc,  const GLdouble *u );
extern GLvoid GL_APIENTRY __gles_EvalCoord1fv(__GLcontext *gc,  const GLfloat *u );
extern GLvoid GL_APIENTRY __gles_EvalCoord2d(__GLcontext *gc,  GLdouble u, GLdouble v );
extern GLvoid GL_APIENTRY __gles_EvalCoord2f(__GLcontext *gc,  GLfloat u, GLfloat v );
extern GLvoid GL_APIENTRY __gles_EvalCoord2dv(__GLcontext *gc,  const GLdouble *u );
extern GLvoid GL_APIENTRY __gles_EvalCoord2fv(__GLcontext *gc,  const GLfloat *u );
extern GLvoid GL_APIENTRY __gles_EvalPoint1(__GLcontext *gc,  GLint i );
extern GLvoid GL_APIENTRY __gles_EvalPoint2(__GLcontext *gc,  GLint i, GLint j );
extern GLvoid GL_APIENTRY __gles_EvalMesh1(__GLcontext *gc,  GLenum mode, GLint i1, GLint i2 );
extern GLvoid GL_APIENTRY __gles_EvalMesh2(__GLcontext *gc,  GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );
extern GLvoid GL_APIENTRY __gles_AlphaFunc(__GLcontext *gc,  GLenum func, GLclampf ref );
extern GLvoid GL_APIENTRY __gles_LogicOp(__GLcontext *gc,  GLenum opcode );
extern GLvoid GL_APIENTRY __gles_PixelZoom(__GLcontext *gc,  GLfloat xfactor, GLfloat yfactor );
extern GLvoid GL_APIENTRY __gles_PixelTransferf(__GLcontext *gc,  GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_PixelTransferi(__GLcontext *gc,  GLenum pname, GLint param );
extern GLvoid GL_APIENTRY __gles_PixelStoref(__GLcontext *gc,  GLenum pname, GLfloat param );
extern GLvoid GL_APIENTRY __gles_PixelMapfv(__GLcontext *gc,  GLenum map, GLsizei mapsize, const GLfloat *values );
extern GLvoid GL_APIENTRY __gles_PixelMapuiv(__GLcontext *gc,  GLenum map, GLsizei mapsize, const GLuint *values );
extern GLvoid GL_APIENTRY __gles_PixelMapusv(__GLcontext *gc,  GLenum map, GLsizei mapsize, const GLushort *values );
extern GLvoid GL_APIENTRY __gles_GetClipPlane(__GLcontext *gc,  GLenum plane, GLdouble *equation );
extern GLvoid GL_APIENTRY __gles_GetDoublev(__GLcontext *gc,  GLenum pname, GLdouble *params );
extern GLvoid GL_APIENTRY __gles_GetLightfv(__GLcontext *gc,  GLenum light, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetLightiv(__GLcontext *gc,  GLenum light, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_GetMapdv(__GLcontext *gc,  GLenum target, GLenum query, GLdouble *v );
extern GLvoid GL_APIENTRY __gles_GetMapfv(__GLcontext *gc,  GLenum target, GLenum query, GLfloat *v );
extern GLvoid GL_APIENTRY __gles_GetMapiv(__GLcontext *gc,  GLenum target, GLenum query, GLint *v );
extern GLvoid GL_APIENTRY __gles_GetMaterialfv(__GLcontext *gc,  GLenum face, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetMaterialiv(__GLcontext *gc,  GLenum face, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_GetPixelMapfv(__GLcontext *gc,  GLenum map, GLfloat *values );
extern GLvoid GL_APIENTRY __gles_GetPixelMapuiv(__GLcontext *gc,  GLenum map, GLuint *values );
extern GLvoid GL_APIENTRY __gles_GetPixelMapusv(__GLcontext *gc,  GLenum map, GLushort *values );
extern GLvoid GL_APIENTRY __gles_GetPolygonStipple(__GLcontext *gc,  GLubyte *mask );
extern GLvoid GL_APIENTRY __gles_GetTexEnvfv(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetTexEnviv(__GLcontext *gc,  GLenum target, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_GetTexGendv(__GLcontext *gc,  GLenum coord, GLenum pname, GLdouble *params );
extern GLvoid GL_APIENTRY __gles_GetTexGenfv(__GLcontext *gc,  GLenum coord, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetTexGeniv(__GLcontext *gc,  GLenum coord, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_GetTexImage(__GLcontext *gc,  GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels );
extern GLvoid GL_APIENTRY __gles_DepthRange(__GLcontext *gc,  GLclampd near_val, GLclampd far_val );
extern GLvoid GL_APIENTRY __gles_Frustum(__GLcontext *gc,  GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val );
extern GLvoid GL_APIENTRY __gles_LoadIdentity(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_LoadMatrixd(__GLcontext *gc,  const GLdouble *m );
extern GLvoid GL_APIENTRY __gles_LoadMatrixf(__GLcontext *gc,  const GLfloat *m );
extern GLvoid GL_APIENTRY __gles_MatrixMode(__GLcontext *gc,  GLenum mode );
extern GLvoid GL_APIENTRY __gles_MultMatrixd(__GLcontext *gc,  const GLdouble *m );
extern GLvoid GL_APIENTRY __gles_MultMatrixf(__GLcontext *gc,  const GLfloat *m );
extern GLvoid GL_APIENTRY __gles_Ortho(__GLcontext *gc,  GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val );
extern GLvoid GL_APIENTRY __gles_PushMatrix(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_PopMatrix(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_Rotated(__GLcontext *gc,  GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
extern GLvoid GL_APIENTRY __gles_Rotatef(__GLcontext *gc,  GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
extern GLvoid GL_APIENTRY __gles_Scaled(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z );
extern GLvoid GL_APIENTRY __gles_Scalef(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z );
extern GLvoid GL_APIENTRY __gles_Translated(__GLcontext *gc,  GLdouble x, GLdouble y, GLdouble z );
extern GLvoid GL_APIENTRY __gles_Translatef(__GLcontext *gc,  GLfloat x, GLfloat y, GLfloat z );
extern GLvoid GL_APIENTRY __gles_ArrayElement(__GLcontext *gc,  GLint i );
extern GLvoid GL_APIENTRY __gles_ColorPointer(__GLcontext *gc,  GLint size, GLenum type, GLsizei stride, const GLvoid *ptr );
extern GLvoid GL_APIENTRY __gles_EnableClientState(__GLcontext *gc,  GLenum cap );
extern GLvoid GL_APIENTRY __gles_DisableClientState(__GLcontext *gc,  GLenum cap );
extern GLvoid GL_APIENTRY __gles_EdgeFlagPointer(__GLcontext *gc,  GLsizei stride, const GLvoid *ptr );
extern GLvoid GL_APIENTRY __gles_IndexPointer(__GLcontext *gc,  GLenum type, GLsizei stride, const GLvoid *ptr );
extern GLvoid GL_APIENTRY __gles_InterleavedArrays(__GLcontext *gc,  GLenum format, GLsizei stride, const GLvoid *pointer );
extern GLvoid GL_APIENTRY __gles_NormalPointer(__GLcontext *gc,  GLenum type, GLsizei stride,  const GLvoid *ptr );
extern GLvoid GL_APIENTRY __gles_VertexPointer(__GLcontext *gc,  GLint size, GLenum type, GLsizei stride, const GLvoid *ptr );
extern GLboolean GL_APIENTRY __gles_AreTexturesResident(__GLcontext *gc,  GLsizei n, const GLuint *textures, GLboolean *residences ) ;
extern GLvoid GL_APIENTRY __gles_CopyTexImage1D(__GLcontext *gc,  GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
extern GLvoid GL_APIENTRY __gles_CopyTexSubImage1D(__GLcontext *gc,  GLenum target, GLint level,  GLint xoffset, GLint x, GLint y,  GLsizei width );
extern GLvoid GL_APIENTRY __gles_PrioritizeTextures(__GLcontext *gc,  GLsizei n,  const GLuint *textures, const GLclampf *priorities );
extern GLvoid GL_APIENTRY __gles_TexSubImage1D(__GLcontext *gc,  GLenum target, GLint level,  GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels );
extern GLvoid GL_APIENTRY __gles_PushClientAttrib(__GLcontext *gc,  GLbitfield mask );
extern GLvoid GL_APIENTRY __gles_PopClientAttrib(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_ColorTable(__GLcontext *gc,  GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table );
extern GLvoid GL_APIENTRY __gles_ColorTableParameteriv(__GLcontext *gc, GLenum target, GLenum pname, const GLint *params);
extern GLvoid GL_APIENTRY __gles_ColorTableParameterfv(__GLcontext *gc, GLenum target, GLenum pname, const GLfloat *params);
extern GLvoid GL_APIENTRY __gles_CopyColorTable(__GLcontext *gc,  GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
extern GLvoid GL_APIENTRY __gles_GetColorTable(__GLcontext *gc,  GLenum target, GLenum format,  GLenum type, GLvoid *table );
extern GLvoid GL_APIENTRY __gles_GetColorTableParameterfv(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetColorTableParameteriv(__GLcontext *gc,  GLenum target, GLenum pname,  GLint *params );
extern GLvoid GL_APIENTRY __gles_ColorSubTable(__GLcontext *gc,  GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data );
extern GLvoid GL_APIENTRY __gles_CopyColorSubTable(__GLcontext *gc,  GLenum target, GLsizei start, GLint x, GLint y, GLsizei width );
extern GLvoid GL_APIENTRY __gles_ConvolutionFilter1D(__GLcontext *gc,  GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image );
extern GLvoid GL_APIENTRY __gles_ConvolutionFilter2D(__GLcontext *gc,  GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image );
extern GLvoid GL_APIENTRY __gles_ConvolutionParameterf(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat params );
extern GLvoid GL_APIENTRY __gles_ConvolutionParameterfv(__GLcontext *gc,  GLenum target, GLenum pname, const GLfloat *params );
extern GLvoid GL_APIENTRY __gles_ConvolutionParameteri(__GLcontext *gc,  GLenum target, GLenum pname, GLint params );
extern GLvoid GL_APIENTRY __gles_ConvolutionParameteriv(__GLcontext *gc,  GLenum target, GLenum pname, const GLint *params );
extern GLvoid GL_APIENTRY __gles_CopyConvolutionFilter1D(__GLcontext *gc,  GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
extern GLvoid GL_APIENTRY __gles_CopyConvolutionFilter2D(__GLcontext *gc,  GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_GetConvolutionFilter(__GLcontext *gc,  GLenum target, GLenum format, GLenum type, GLvoid *image );
extern GLvoid GL_APIENTRY __gles_GetConvolutionParameterfv(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetConvolutionParameteriv(__GLcontext *gc,  GLenum target, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_SeparableFilter2D(__GLcontext *gc,  GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column );
extern GLvoid GL_APIENTRY __gles_GetSeparableFilter(__GLcontext *gc,  GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span );
extern GLvoid GL_APIENTRY __gles_Histogram(__GLcontext *gc,  GLenum target, GLsizei width, GLenum internalformat, GLboolean sink );
extern GLvoid GL_APIENTRY __gles_ResetHistogram(__GLcontext *gc,  GLenum target );
extern GLvoid GL_APIENTRY __gles_GetHistogram(__GLcontext *gc,  GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values );
extern GLvoid GL_APIENTRY __gles_GetHistogramParameterfv(__GLcontext *gc,  GLenum target, GLenum pname, GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetHistogramParameteriv(__GLcontext *gc,  GLenum target, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_Minmax(__GLcontext *gc,  GLenum target, GLenum internalformat, GLboolean sink );
extern GLvoid GL_APIENTRY __gles_ResetMinmax(__GLcontext *gc,  GLenum target );
extern GLvoid GL_APIENTRY __gles_GetMinmax(__GLcontext *gc,  GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values );
extern GLvoid GL_APIENTRY __gles_GetMinmaxParameterfv(__GLcontext *gc,  GLenum target, GLenum pname,  GLfloat *params );
extern GLvoid GL_APIENTRY __gles_GetMinmaxParameteriv(__GLcontext *gc,  GLenum target, GLenum pname, GLint *params );
extern GLvoid GL_APIENTRY __gles_ClientActiveTexture(__GLcontext *gc,  GLenum texture );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1d(__GLcontext *gc,  GLenum target, GLdouble s );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1dv(__GLcontext *gc,  GLenum target, const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1f(__GLcontext *gc,  GLenum target, GLfloat s );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1fv(__GLcontext *gc,  GLenum target, const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1i(__GLcontext *gc,  GLenum target, GLint s );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1iv(__GLcontext *gc,  GLenum target, const GLint *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1s(__GLcontext *gc,  GLenum target, GLshort s );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord1sv(__GLcontext *gc,  GLenum target, const GLshort *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2d(__GLcontext *gc,  GLenum target, GLdouble s, GLdouble t );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2dv(__GLcontext *gc,  GLenum target, const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2f(__GLcontext *gc,  GLenum target, GLfloat s, GLfloat t );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2fv(__GLcontext *gc,  GLenum target, const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2i(__GLcontext *gc,  GLenum target, GLint s, GLint t );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2iv(__GLcontext *gc,  GLenum target, const GLint *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2s(__GLcontext *gc,  GLenum target, GLshort s, GLshort t );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord2sv(__GLcontext *gc,  GLenum target, const GLshort *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3d(__GLcontext *gc,  GLenum target, GLdouble s, GLdouble t, GLdouble r );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3dv(__GLcontext *gc,  GLenum target, const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3f(__GLcontext *gc,  GLenum target, GLfloat s, GLfloat t, GLfloat r );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3fv(__GLcontext *gc,  GLenum target, const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3i(__GLcontext *gc,  GLenum target, GLint s, GLint t, GLint r );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3iv(__GLcontext *gc,  GLenum target, const GLint *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3s(__GLcontext *gc,  GLenum target, GLshort s, GLshort t, GLshort r );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord3sv(__GLcontext *gc,  GLenum target, const GLshort *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4d(__GLcontext *gc,  GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4dv(__GLcontext *gc,  GLenum target, const GLdouble *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4f(__GLcontext *gc,  GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4fv(__GLcontext *gc,  GLenum target, const GLfloat *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4i(__GLcontext *gc,  GLenum target, GLint s, GLint t, GLint r, GLint q );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4iv(__GLcontext *gc,  GLenum target, const GLint *v );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4s(__GLcontext *gc,  GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
extern GLvoid GL_APIENTRY __gles_MultiTexCoord4sv(__GLcontext *gc,  GLenum target, const GLshort *v );
extern GLvoid GL_APIENTRY __gles_LoadTransposeMatrixd(__GLcontext *gc,  const GLdouble m[16] );
extern GLvoid GL_APIENTRY __gles_LoadTransposeMatrixf(__GLcontext *gc,  const GLfloat m[16] );
extern GLvoid GL_APIENTRY __gles_MultTransposeMatrixd(__GLcontext *gc,  const GLdouble m[16] );
extern GLvoid GL_APIENTRY __gles_MultTransposeMatrixf(__GLcontext *gc,  const GLfloat m[16] );
extern GLvoid GL_APIENTRY __gles_CompressedTexImage1D(__GLcontext *gc,  GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data );
extern GLvoid GL_APIENTRY __gles_CompressedTexSubImage1D(__GLcontext *gc,  GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data );
extern GLvoid GL_APIENTRY __gles_GetCompressedTexImage(__GLcontext *gc,  GLenum target, GLint lod, GLvoid *img );
extern GLvoid GL_APIENTRY __gles_FogCoordf(__GLcontext *gc, GLfloat coord);
extern GLvoid GL_APIENTRY __gles_FogCoordfv(__GLcontext *gc, const GLfloat *coord);
extern GLvoid GL_APIENTRY __gles_FogCoordd(__GLcontext *gc, GLdouble coord);
extern GLvoid GL_APIENTRY __gles_FogCoorddv(__GLcontext *gc, const GLdouble *coord);
extern GLvoid GL_APIENTRY __gles_FogCoordPointer(__GLcontext *gc, GLenum type, GLsizei stride, const void *pointer);
extern GLvoid GL_APIENTRY __gles_PointParameterf(__GLcontext *gc, GLenum pname, GLfloat param);
extern GLvoid GL_APIENTRY __gles_PointParameterfv(__GLcontext *gc, GLenum pname, const GLfloat *params);
extern GLvoid GL_APIENTRY __gles_PointParameteri(__GLcontext *gc, GLenum pname, GLint param);
extern GLvoid GL_APIENTRY __gles_PointParameteriv(__GLcontext *gc, GLenum pname, const GLint *params);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3b(__GLcontext *gc, GLbyte red, GLbyte green, GLbyte blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3bv(__GLcontext *gc, const GLbyte *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3d(__GLcontext *gc, GLdouble red, GLdouble green, GLdouble blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3dv(__GLcontext *gc, const GLdouble *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3f(__GLcontext *gc, GLfloat red, GLfloat green, GLfloat blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3fv(__GLcontext *gc, const GLfloat *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3i(__GLcontext *gc, GLint red, GLint green, GLint blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3iv(__GLcontext *gc, const GLint *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3s(__GLcontext *gc, GLshort red, GLshort green, GLshort blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3sv(__GLcontext *gc, const GLshort *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3ub(__GLcontext *gc, GLubyte red, GLubyte green, GLubyte blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3ubv(__GLcontext *gc, const GLubyte *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3ui(__GLcontext *gc, GLuint red, GLuint green, GLuint blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3uiv(__GLcontext *gc, const GLuint *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3us(__GLcontext *gc, GLushort red, GLushort green, GLushort blue);
extern GLvoid GL_APIENTRY __gles_SecondaryColor3usv(__GLcontext *gc, const GLushort *v);
extern GLvoid GL_APIENTRY __gles_SecondaryColorPointer(__GLcontext *gc, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern GLvoid GL_APIENTRY __gles_WindowPos2d(__GLcontext *gc, GLdouble x, GLdouble y);
extern GLvoid GL_APIENTRY __gles_WindowPos2dv(__GLcontext *gc, const GLdouble *v);
extern GLvoid GL_APIENTRY __gles_WindowPos2f(__GLcontext *gc, GLfloat x, GLfloat y);
extern GLvoid GL_APIENTRY __gles_WindowPos2fv(__GLcontext *gc, const GLfloat *v);
extern GLvoid GL_APIENTRY __gles_WindowPos2i(__GLcontext *gc, GLint x, GLint y);
extern GLvoid GL_APIENTRY __gles_WindowPos2iv(__GLcontext *gc, const GLint *v);
extern GLvoid GL_APIENTRY __gles_WindowPos2s(__GLcontext *gc, GLshort x, GLshort y);
extern GLvoid GL_APIENTRY __gles_WindowPos2sv(__GLcontext *gc, const GLshort *v);
extern GLvoid GL_APIENTRY __gles_WindowPos3d(__GLcontext *gc, GLdouble x, GLdouble y, GLdouble z);
extern GLvoid GL_APIENTRY __gles_WindowPos3dv(__GLcontext *gc, const GLdouble *v);
extern GLvoid GL_APIENTRY __gles_WindowPos3f(__GLcontext *gc, GLfloat x, GLfloat y, GLfloat z);
extern GLvoid GL_APIENTRY __gles_WindowPos3fv(__GLcontext *gc, const GLfloat *v);
extern GLvoid GL_APIENTRY __gles_WindowPos3i(__GLcontext *gc, GLint x, GLint y, GLint z);
extern GLvoid GL_APIENTRY __gles_WindowPos3iv(__GLcontext *gc, const GLint *v);
extern GLvoid GL_APIENTRY __gles_WindowPos3s(__GLcontext *gc, GLshort x, GLshort y, GLshort z);
extern GLvoid GL_APIENTRY __gles_WindowPos3sv(__GLcontext *gc, const GLshort *v);
extern GLvoid GL_APIENTRY __gles_DrawPixels(__GLcontext *gc,  GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels );
extern GLvoid GL_APIENTRY __gles_CopyPixels(__GLcontext *gc,  GLint x, GLint y,  GLsizei width, GLsizei height, GLenum type );
extern GLvoid GL_APIENTRY __gles_Indexub(__GLcontext *gc,  GLubyte c );
extern GLvoid GL_APIENTRY __gles_Indexubv(__GLcontext *gc,  const GLubyte *c );

/* OpenGL ES 2.0 */

extern GLvoid GL_APIENTRY __gles_ActiveTexture(__GLcontext *gc, GLenum texture);
extern GLvoid GL_APIENTRY __gles_AttachShader(__GLcontext *gc, GLuint program, GLuint shader);
extern GLvoid GL_APIENTRY __gles_BindAttribLocation(__GLcontext *gc, GLuint program, GLuint index, const GLchar* name);
extern GLvoid GL_APIENTRY __gles_BindBuffer(__GLcontext *gc, GLenum target, GLuint buffer);
extern GLvoid GL_APIENTRY __gles_BindFramebuffer(__GLcontext *gc, GLenum target, GLuint framebuffer);
extern GLvoid GL_APIENTRY __gles_BindRenderbuffer(__GLcontext *gc, GLenum target, GLuint renderbuffer);
extern GLvoid GL_APIENTRY __gles_BindTexture(__GLcontext *gc, GLenum target, GLuint texture);
extern GLvoid GL_APIENTRY __gles_BlendColor(__GLcontext *gc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern GLvoid GL_APIENTRY __gles_BlendEquation(__GLcontext *gc, GLenum mode);
extern GLvoid GL_APIENTRY __gles_BlendEquationSeparate(__GLcontext *gc, GLenum modeRGB, GLenum modeAlpha);
extern GLvoid GL_APIENTRY __gles_BlendFunc(__GLcontext *gc, GLenum sfactor, GLenum dfactor);
extern GLvoid GL_APIENTRY __gles_BlendFuncSeparate(__GLcontext *gc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern GLvoid GL_APIENTRY __gles_BufferData(__GLcontext *gc, GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
extern GLvoid GL_APIENTRY __gles_BufferSubData(__GLcontext *gc, GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
extern GLenum GL_APIENTRY __gles_CheckFramebufferStatus(__GLcontext *gc, GLenum target);
extern GLvoid GL_APIENTRY __gles_Clear(__GLcontext *gc, GLbitfield mask);
extern GLvoid GL_APIENTRY __gles_ClearColor(__GLcontext *gc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern GLvoid GL_APIENTRY __gles_ClearDepthf(__GLcontext *gc, GLfloat depth);
extern GLvoid GL_APIENTRY __gles_ClearStencil(__GLcontext *gc, GLint s);
extern GLvoid GL_APIENTRY __gles_ColorMask(__GLcontext *gc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern GLvoid GL_APIENTRY __gles_CompileShader(__GLcontext *gc, GLuint shader);
extern GLvoid GL_APIENTRY __gles_CompressedTexImage2D(__GLcontext *gc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
extern GLvoid GL_APIENTRY __gles_CompressedTexSubImage2D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
extern GLvoid GL_APIENTRY __gles_CopyTexImage2D(__GLcontext *gc, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern GLvoid GL_APIENTRY __gles_CopyTexSubImage2D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLuint GL_APIENTRY __gles_CreateProgram(__GLcontext *gc);
extern GLuint GL_APIENTRY __gles_CreateShader(__GLcontext *gc, GLenum type);
extern GLvoid GL_APIENTRY __gles_CullFace(__GLcontext *gc, GLenum mode);
extern GLvoid GL_APIENTRY __gles_DeleteBuffers(__GLcontext *gc, GLsizei n, const GLuint* buffers);
extern GLvoid GL_APIENTRY __gles_DeleteFramebuffers(__GLcontext *gc, GLsizei n, const GLuint* framebuffers);
extern GLvoid GL_APIENTRY __gles_DeleteProgram(__GLcontext *gc, GLuint program);
extern GLvoid GL_APIENTRY __gles_DeleteRenderbuffers(__GLcontext *gc, GLsizei n, const GLuint* renderbuffers);
extern GLvoid GL_APIENTRY __gles_DeleteShader(__GLcontext *gc, GLuint shader);
extern GLvoid GL_APIENTRY __gles_DeleteTextures(__GLcontext *gc, GLsizei n, const GLuint* textures);
extern GLvoid GL_APIENTRY __gles_DepthFunc(__GLcontext *gc, GLenum func);
extern GLvoid GL_APIENTRY __gles_DepthMask(__GLcontext *gc, GLboolean flag);
extern GLvoid GL_APIENTRY __gles_DepthRangef(__GLcontext *gc, GLfloat n, GLfloat f);
extern GLvoid GL_APIENTRY __gles_DetachShader(__GLcontext *gc, GLuint program, GLuint shader);
extern GLvoid GL_APIENTRY __gles_Disable(__GLcontext *gc, GLenum cap);
extern GLvoid GL_APIENTRY __gles_DisableVertexAttribArray(__GLcontext *gc, GLuint index);
extern GLvoid GL_APIENTRY __gles_DrawArrays(__GLcontext *gc, GLenum mode, GLint first, GLsizei count);
extern GLvoid GL_APIENTRY __gles_DrawElements(__GLcontext *gc, GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
extern GLvoid GL_APIENTRY __gles_Enable(__GLcontext *gc, GLenum cap);
extern GLvoid GL_APIENTRY __gles_EnableVertexAttribArray(__GLcontext *gc, GLuint index);
extern GLvoid GL_APIENTRY __gles_Finish(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_Flush(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_FramebufferRenderbuffer(__GLcontext *gc, GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern GLvoid GL_APIENTRY __gles_FramebufferTexture2D(__GLcontext *gc, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern GLvoid GL_APIENTRY __gles_FrontFace(__GLcontext *gc, GLenum mode);
extern GLvoid GL_APIENTRY __gles_GenBuffers(__GLcontext *gc, GLsizei n, GLuint* buffers);
extern GLvoid GL_APIENTRY __gles_GenerateMipmap(__GLcontext *gc, GLenum target);
extern GLvoid GL_APIENTRY __gles_GenFramebuffers(__GLcontext *gc, GLsizei n, GLuint* framebuffers);
extern GLvoid GL_APIENTRY __gles_GenRenderbuffers(__GLcontext *gc, GLsizei n, GLuint* renderbuffers);
extern GLvoid GL_APIENTRY __gles_GenTextures(__GLcontext *gc, GLsizei n, GLuint* textures);
extern GLvoid GL_APIENTRY __gles_GetActiveAttrib(__GLcontext *gc, GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
extern GLvoid GL_APIENTRY __gles_GetActiveUniform(__GLcontext *gc, GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
extern GLvoid GL_APIENTRY __gles_GetAttachedShaders(__GLcontext *gc, GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);
extern GLint  GL_APIENTRY __gles_GetAttribLocation(__GLcontext *gc, GLuint program, const GLchar* name);
extern GLvoid GL_APIENTRY __gles_GetBooleanv(__GLcontext *gc, GLenum pname, GLboolean* params);
extern GLvoid GL_APIENTRY __gles_GetBufferParameteriv(__GLcontext *gc, GLenum target, GLenum pname, GLint* params);
extern GLenum GL_APIENTRY __gles_GetError(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_GetFloatv(__GLcontext *gc, GLenum pname, GLfloat* params);
extern GLvoid GL_APIENTRY __gles_GetFramebufferAttachmentParameteriv(__GLcontext *gc, GLenum target, GLenum attachment, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetIntegerv(__GLcontext *gc, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetProgramiv(__GLcontext *gc, GLuint program, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetProgramInfoLog(__GLcontext *gc, GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog);
extern GLvoid GL_APIENTRY __gles_GetRenderbufferParameteriv(__GLcontext *gc, GLenum target, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetShaderiv(__GLcontext *gc, GLuint shader, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetShaderInfoLog(__GLcontext *gc, GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog);
extern GLvoid GL_APIENTRY __gles_GetShaderPrecisionFormat(__GLcontext *gc, GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
extern GLvoid GL_APIENTRY __gles_GetShaderSource(__GLcontext *gc, GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source);
extern const GLubyte* GL_APIENTRY __gles_GetString(__GLcontext *gc, GLenum name);
extern GLvoid GL_APIENTRY __gles_GetTexParameterfv(__GLcontext *gc, GLenum target, GLenum pname, GLfloat* params);
extern GLvoid GL_APIENTRY __gles_GetTexParameteriv(__GLcontext *gc, GLenum target, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetUniformfv(__GLcontext *gc, GLuint program, GLint location, GLfloat* params);
extern GLvoid GL_APIENTRY __gles_GetUniformiv(__GLcontext *gc, GLuint program, GLint location, GLint* params);
extern GLint  GL_APIENTRY __gles_GetUniformLocation(__GLcontext *gc, GLuint program, const GLchar* name);
extern GLvoid GL_APIENTRY __gles_GetVertexAttribfv(__GLcontext *gc, GLuint index, GLenum pname, GLfloat* params);
extern GLvoid GL_APIENTRY __gles_GetVertexAttribiv(__GLcontext *gc, GLuint index, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetVertexAttribPointerv(__GLcontext *gc, GLuint index, GLenum pname, GLvoid** pointer);
extern GLvoid GL_APIENTRY __gles_Hint(__GLcontext *gc, GLenum target, GLenum mode);
extern GLboolean GL_APIENTRY __gles_IsBuffer(__GLcontext *gc, GLuint buffer);
extern GLboolean GL_APIENTRY __gles_IsEnabled(__GLcontext *gc, GLenum cap);
extern GLboolean GL_APIENTRY __gles_IsFramebuffer(__GLcontext *gc, GLuint framebuffer);
extern GLboolean GL_APIENTRY __gles_IsProgram(__GLcontext *gc, GLuint program);
extern GLboolean GL_APIENTRY __gles_IsRenderbuffer(__GLcontext *gc, GLuint renderbuffer);
extern GLboolean GL_APIENTRY __gles_IsShader(__GLcontext *gc, GLuint shader);
extern GLboolean GL_APIENTRY __gles_IsTexture(__GLcontext *gc, GLuint texture);
extern GLvoid GL_APIENTRY __gles_LineWidth(__GLcontext *gc, GLfloat width);
extern GLvoid GL_APIENTRY __gles_LinkProgram(__GLcontext *gc, GLuint program);
extern GLvoid GL_APIENTRY __gles_PixelStorei(__GLcontext *gc, GLenum pname, GLint param);
extern GLvoid GL_APIENTRY __gles_PolygonOffset(__GLcontext *gc, GLfloat factor, GLfloat units);
extern GLvoid GL_APIENTRY __gles_ReadPixels(__GLcontext *gc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern GLvoid GL_APIENTRY __gles_ReleaseShaderCompiler(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_RenderbufferStorage(__GLcontext *gc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_SampleCoverage(__GLcontext *gc, GLfloat value, GLboolean invert);
extern GLvoid GL_APIENTRY __gles_Scissor(__GLcontext *gc, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_ShaderBinary(__GLcontext *gc, GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);
extern GLvoid GL_APIENTRY __gles_ShaderSource(__GLcontext *gc, GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);
extern GLvoid GL_APIENTRY __gles_StencilFunc(__GLcontext *gc, GLenum func, GLint ref, GLuint mask);
extern GLvoid GL_APIENTRY __gles_StencilFuncSeparate(__GLcontext *gc, GLenum face, GLenum func, GLint ref, GLuint mask);
extern GLvoid GL_APIENTRY __gles_StencilMask(__GLcontext *gc, GLuint mask);
extern GLvoid GL_APIENTRY __gles_StencilMaskSeparate(__GLcontext *gc, GLenum face, GLuint mask);
extern GLvoid GL_APIENTRY __gles_StencilOp(__GLcontext *gc, GLenum fail, GLenum zfail, GLenum zpass);
extern GLvoid GL_APIENTRY __gles_StencilOpSeparate(__GLcontext *gc, GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
extern GLvoid GL_APIENTRY __gles_TexImage2D(__GLcontext *gc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
extern GLvoid GL_APIENTRY __gles_TexParameterf(__GLcontext *gc, GLenum target, GLenum pname, GLfloat param);
extern GLvoid GL_APIENTRY __gles_TexParameterfv(__GLcontext *gc, GLenum target, GLenum pname, const GLfloat* params);
extern GLvoid GL_APIENTRY __gles_TexParameteri(__GLcontext *gc, GLenum target, GLenum pname, GLint param);
extern GLvoid GL_APIENTRY __gles_TexParameteriv(__GLcontext *gc, GLenum target, GLenum pname, const GLint* params);
extern GLvoid GL_APIENTRY __gles_TexSubImage2D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
extern GLvoid GL_APIENTRY __gles_Uniform1f(__GLcontext *gc, GLint location, GLfloat x);
extern GLvoid GL_APIENTRY __gles_Uniform1fv(__GLcontext *gc, GLint location, GLsizei count, const GLfloat* v);
extern GLvoid GL_APIENTRY __gles_Uniform1i(__GLcontext *gc, GLint location, GLint x);
extern GLvoid GL_APIENTRY __gles_Uniform1iv(__GLcontext *gc, GLint location, GLsizei count, const GLint* v);
extern GLvoid GL_APIENTRY __gles_Uniform2f(__GLcontext *gc, GLint location, GLfloat x, GLfloat y);
extern GLvoid GL_APIENTRY __gles_Uniform2fv(__GLcontext *gc, GLint location, GLsizei count, const GLfloat* v);
extern GLvoid GL_APIENTRY __gles_Uniform2i(__GLcontext *gc, GLint location, GLint x, GLint y);
extern GLvoid GL_APIENTRY __gles_Uniform2iv(__GLcontext *gc, GLint location, GLsizei count, const GLint* v);
extern GLvoid GL_APIENTRY __gles_Uniform3f(__GLcontext *gc, GLint location, GLfloat x, GLfloat y, GLfloat z);
extern GLvoid GL_APIENTRY __gles_Uniform3fv(__GLcontext *gc, GLint location, GLsizei count, const GLfloat* v);
extern GLvoid GL_APIENTRY __gles_Uniform3i(__GLcontext *gc, GLint location, GLint x, GLint y, GLint z);
extern GLvoid GL_APIENTRY __gles_Uniform3iv(__GLcontext *gc, GLint location, GLsizei count, const GLint* v);
extern GLvoid GL_APIENTRY __gles_Uniform4f(__GLcontext *gc, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern GLvoid GL_APIENTRY __gles_Uniform4fv(__GLcontext *gc, GLint location, GLsizei count, const GLfloat* v);
extern GLvoid GL_APIENTRY __gles_Uniform4i(__GLcontext *gc, GLint location, GLint x, GLint y, GLint z, GLint w);
extern GLvoid GL_APIENTRY __gles_Uniform4iv(__GLcontext *gc, GLint location, GLsizei count, const GLint* v);
extern GLvoid GL_APIENTRY __gles_UniformMatrix2fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix3fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix4fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UseProgram(__GLcontext *gc, GLuint program);
extern GLvoid GL_APIENTRY __gles_ValidateProgram(__GLcontext *gc, GLuint program);
extern GLvoid GL_APIENTRY __gles_VertexAttrib1f(__GLcontext *gc, GLuint indx, GLfloat x);
extern GLvoid GL_APIENTRY __gles_VertexAttrib1fv(__GLcontext *gc, GLuint indx, const GLfloat* values);
extern GLvoid GL_APIENTRY __gles_VertexAttrib2f(__GLcontext *gc, GLuint indx, GLfloat x, GLfloat y);
extern GLvoid GL_APIENTRY __gles_VertexAttrib2fv(__GLcontext *gc, GLuint indx, const GLfloat* values);
extern GLvoid GL_APIENTRY __gles_VertexAttrib3f(__GLcontext *gc, GLuint indx, GLfloat x, GLfloat y, GLfloat z);
extern GLvoid GL_APIENTRY __gles_VertexAttrib3fv(__GLcontext *gc, GLuint indx, const GLfloat* values);
extern GLvoid GL_APIENTRY __gles_VertexAttrib4f(__GLcontext *gc, GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern GLvoid GL_APIENTRY __gles_VertexAttrib4fv(__GLcontext *gc, GLuint indx, const GLfloat* values);
extern GLvoid GL_APIENTRY __gles_VertexAttribPointer(__GLcontext *gc, GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr);
extern GLvoid GL_APIENTRY __gles_Viewport(__GLcontext *gc, GLint x, GLint y, GLsizei width, GLsizei height);

/* OpenGL ES 3.0 */

extern GLvoid GL_APIENTRY __gles_ReadBuffer(__GLcontext *gc, GLenum mode);
extern GLvoid GL_APIENTRY __gles_DrawRangeElements(__GLcontext *gc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices);
extern GLvoid GL_APIENTRY __gles_TexImage3D(__GLcontext *gc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
extern GLvoid GL_APIENTRY __gles_TexSubImage3D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);
extern GLvoid GL_APIENTRY __gles_CopyTexSubImage3D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_CompressedTexImage3D(__GLcontext *gc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
extern GLvoid GL_APIENTRY __gles_CompressedTexSubImage3D(__GLcontext *gc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
extern GLvoid GL_APIENTRY __gles_GenQueries(__GLcontext *gc, GLsizei n, GLuint* ids);
extern GLvoid GL_APIENTRY __gles_DeleteQueries(__GLcontext *gc, GLsizei n, const GLuint* ids);
extern GLboolean GL_APIENTRY __gles_IsQuery(__GLcontext *gc, GLuint id);
extern GLvoid GL_APIENTRY __gles_BeginQuery(__GLcontext *gc, GLenum target, GLuint id);
extern GLvoid GL_APIENTRY __gles_EndQuery(__GLcontext *gc, GLenum target);
extern GLvoid GL_APIENTRY __gles_GetQueryiv(__GLcontext *gc, GLenum target, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetQueryObjectuiv(__GLcontext *gc, GLuint id, GLenum pname, GLuint* params);
extern GLboolean GL_APIENTRY __gles_UnmapBuffer(__GLcontext *gc, GLenum target);
extern GLvoid GL_APIENTRY __gles_GetBufferPointerv(__GLcontext *gc, GLenum target, GLenum pname, GLvoid** params);
extern GLvoid GL_APIENTRY __gles_DrawBuffers(__GLcontext *gc, GLsizei n, const GLenum* bufs);
extern GLvoid GL_APIENTRY __gles_UniformMatrix2x3fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix3x2fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix2x4fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix4x2fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix3x4fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_UniformMatrix4x3fv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_BlitFramebuffer(__GLcontext *gc, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern GLvoid GL_APIENTRY __gles_RenderbufferStorageMultisample(__GLcontext *gc, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_FramebufferTextureLayer(__GLcontext *gc, GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern GLvoid* GL_APIENTRY __gles_MapBufferRange(__GLcontext *gc, GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern GLvoid GL_APIENTRY __gles_FlushMappedBufferRange(__GLcontext *gc, GLenum target, GLintptr offset, GLsizeiptr length);
extern GLvoid GL_APIENTRY __gles_BindVertexArray(__GLcontext *gc, GLuint array);
extern GLvoid GL_APIENTRY __gles_DeleteVertexArrays(__GLcontext *gc, GLsizei n, const GLuint* arrays);
extern GLvoid GL_APIENTRY __gles_GenVertexArrays(__GLcontext *gc, GLsizei n, GLuint* arrays);
extern GLboolean GL_APIENTRY __gles_IsVertexArray(__GLcontext *gc, GLuint array);
extern GLvoid GL_APIENTRY __gles_GetIntegeri_v(__GLcontext *gc, GLenum target, GLuint index, GLint* data);
extern GLvoid GL_APIENTRY __gles_BeginTransformFeedback(__GLcontext *gc, GLenum primitiveMode);
extern GLvoid GL_APIENTRY __gles_EndTransformFeedback(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_BindBufferRange(__GLcontext *gc, GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern GLvoid GL_APIENTRY __gles_BindBufferBase(__GLcontext *gc, GLenum target, GLuint index, GLuint buffer);
extern GLvoid GL_APIENTRY __gles_TransformFeedbackVaryings(__GLcontext *gc, GLuint program, GLsizei count, const GLchar* const* varyings, GLenum bufferMode);
extern GLvoid GL_APIENTRY __gles_GetTransformFeedbackVarying(__GLcontext *gc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
extern GLvoid GL_APIENTRY __gles_VertexAttribIPointer(__GLcontext *gc, GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
extern GLvoid GL_APIENTRY __gles_GetVertexAttribIiv(__GLcontext *gc, GLuint index, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetVertexAttribIuiv(__GLcontext *gc, GLuint index, GLenum pname, GLuint* params);
extern GLvoid GL_APIENTRY __gles_VertexAttribI4i(__GLcontext *gc, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern GLvoid GL_APIENTRY __gles_VertexAttribI4ui(__GLcontext *gc, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern GLvoid GL_APIENTRY __gles_VertexAttribI4iv(__GLcontext *gc, GLuint index, const GLint* v);
extern GLvoid GL_APIENTRY __gles_VertexAttribI4uiv(__GLcontext *gc, GLuint index, const GLuint* v);
extern GLvoid GL_APIENTRY __gles_GetUniformuiv(__GLcontext *gc, GLuint program, GLint location, GLuint* params);
extern GLint  GL_APIENTRY __gles_GetFragDataLocation(__GLcontext *gc, GLuint program, const GLchar *name);
extern GLvoid GL_APIENTRY __gles_Uniform1ui(__GLcontext *gc, GLint location, GLuint v0);
extern GLvoid GL_APIENTRY __gles_Uniform2ui(__GLcontext *gc, GLint location, GLuint v0, GLuint v1);
extern GLvoid GL_APIENTRY __gles_Uniform3ui(__GLcontext *gc, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern GLvoid GL_APIENTRY __gles_Uniform4ui(__GLcontext *gc, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern GLvoid GL_APIENTRY __gles_Uniform1uiv(__GLcontext *gc, GLint location, GLsizei count, const GLuint* value);
extern GLvoid GL_APIENTRY __gles_Uniform2uiv(__GLcontext *gc, GLint location, GLsizei count, const GLuint* value);
extern GLvoid GL_APIENTRY __gles_Uniform3uiv(__GLcontext *gc, GLint location, GLsizei count, const GLuint* value);
extern GLvoid GL_APIENTRY __gles_Uniform4uiv(__GLcontext *gc, GLint location, GLsizei count, const GLuint* value);
extern GLvoid GL_APIENTRY __gles_ClearBufferiv(__GLcontext *gc, GLenum buffer, GLint drawbuffer, const GLint* value);
extern GLvoid GL_APIENTRY __gles_ClearBufferuiv(__GLcontext *gc, GLenum buffer, GLint drawbuffer, const GLuint* value);
extern GLvoid GL_APIENTRY __gles_ClearBufferfv(__GLcontext *gc, GLenum buffer, GLint drawbuffer, const GLfloat* value);
extern GLvoid GL_APIENTRY __gles_ClearBufferfi(__GLcontext *gc, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern const GLubyte* GL_APIENTRY __gles_GetStringi(__GLcontext *gc, GLenum name, GLuint index);
extern GLvoid GL_APIENTRY __gles_CopyBufferSubData(__GLcontext *gc, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern GLvoid GL_APIENTRY __gles_GetUniformIndices(__GLcontext *gc, GLuint program, GLsizei uniformCount, const GLchar* const* uniformNames, GLuint* uniformIndices);
extern GLvoid GL_APIENTRY __gles_GetActiveUniformsiv(__GLcontext *gc, GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
extern GLuint GL_APIENTRY __gles_GetUniformBlockIndex(__GLcontext *gc, GLuint program, const GLchar* uniformBlockName);
extern GLvoid GL_APIENTRY __gles_GetActiveUniformBlockiv(__GLcontext *gc, GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetActiveUniformBlockName(__GLcontext *gc, GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
extern GLvoid GL_APIENTRY __gles_UniformBlockBinding(__GLcontext *gc, GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
extern GLvoid GL_APIENTRY __gles_DrawArraysInstanced(__GLcontext *gc, GLenum mode, GLint first, GLsizei count, GLsizei instanceCount);
extern GLvoid GL_APIENTRY __gles_DrawElementsInstanced(__GLcontext *gc, GLenum mode, GLsizei count, GLenum type, const GLvoid* indices, GLsizei instanceCount);
extern GLsync GL_APIENTRY __gles_FenceSync(__GLcontext *gc, GLenum condition, GLbitfield flags);
extern GLboolean GL_APIENTRY __gles_IsSync(__GLcontext *gc, GLsync sync);
extern GLvoid GL_APIENTRY __gles_DeleteSync(__GLcontext *gc, GLsync sync);
extern GLenum GL_APIENTRY __gles_ClientWaitSync(__GLcontext *gc, GLsync sync, GLbitfield flags, GLuint64 timeout);
extern GLvoid GL_APIENTRY __gles_WaitSync(__GLcontext *gc, GLsync sync, GLbitfield flags, GLuint64 timeout);
extern GLvoid GL_APIENTRY __gles_GetInteger64v(__GLcontext *gc, GLenum pname, GLint64* params);
extern GLvoid GL_APIENTRY __gles_GetSynciv(__GLcontext *gc, GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
extern GLvoid GL_APIENTRY __gles_GetInteger64i_v(__GLcontext *gc, GLenum target, GLuint index, GLint64* data);
extern GLvoid GL_APIENTRY __gles_GetBufferParameteri64v(__GLcontext *gc, GLenum target, GLenum pname, GLint64* params);
extern GLvoid GL_APIENTRY __gles_GenSamplers(__GLcontext *gc, GLsizei count, GLuint* samplers);
extern GLvoid GL_APIENTRY __gles_DeleteSamplers(__GLcontext *gc, GLsizei count, const GLuint* samplers);
extern GLboolean GL_APIENTRY __gles_IsSampler(__GLcontext *gc, GLuint sampler);
extern GLvoid GL_APIENTRY __gles_BindSampler(__GLcontext *gc, GLuint unit, GLuint sampler);
extern GLvoid GL_APIENTRY __gles_SamplerParameteri(__GLcontext *gc, GLuint sampler, GLenum pname, GLint param);
extern GLvoid GL_APIENTRY __gles_SamplerParameteriv(__GLcontext *gc, GLuint sampler, GLenum pname, const GLint* param);
extern GLvoid GL_APIENTRY __gles_SamplerParameterf(__GLcontext *gc, GLuint sampler, GLenum pname, GLfloat param);
extern GLvoid GL_APIENTRY __gles_SamplerParameterfv(__GLcontext *gc, GLuint sampler, GLenum pname, const GLfloat* param);
extern GLvoid GL_APIENTRY __gles_GetSamplerParameteriv(__GLcontext *gc, GLuint sampler, GLenum pname, GLint* params);
extern GLvoid GL_APIENTRY __gles_GetSamplerParameterfv(__GLcontext *gc, GLuint sampler, GLenum pname, GLfloat* params);
extern GLvoid GL_APIENTRY __gles_VertexAttribDivisor(__GLcontext *gc, GLuint index, GLuint divisor);
extern GLvoid GL_APIENTRY __gles_BindTransformFeedback(__GLcontext *gc, GLenum target, GLuint id);
extern GLvoid GL_APIENTRY __gles_DeleteTransformFeedbacks(__GLcontext *gc, GLsizei n, const GLuint* ids);
extern GLvoid GL_APIENTRY __gles_GenTransformFeedbacks(__GLcontext *gc, GLsizei n, GLuint* ids);
extern GLboolean GL_APIENTRY __gles_IsTransformFeedback(__GLcontext *gc, GLuint id);
extern GLvoid GL_APIENTRY __gles_PauseTransformFeedback(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_ResumeTransformFeedback(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_GetProgramBinary(__GLcontext *gc, GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, GLvoid* binary);
extern GLvoid GL_APIENTRY __gles_ProgramBinary(__GLcontext *gc, GLuint program, GLenum binaryFormat, const GLvoid* binary, GLsizei length);
extern GLvoid GL_APIENTRY __gles_ProgramParameteri(__GLcontext *gc, GLuint program, GLenum pname, GLint value);
extern GLvoid GL_APIENTRY __gles_InvalidateFramebuffer(__GLcontext *gc, GLenum target, GLsizei numAttachments, const GLenum* attachments);
extern GLvoid GL_APIENTRY __gles_InvalidateSubFramebuffer(__GLcontext *gc, GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_TexStorage2D(__GLcontext *gc, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_TexStorage3D(__GLcontext *gc, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern GLvoid GL_APIENTRY __gles_GetInternalformativ(__GLcontext *gc, GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);

/* OpenGL ES 3.1 */

extern GLvoid GL_APIENTRY __gles_DispatchCompute(__GLcontext *gc, GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
extern GLvoid GL_APIENTRY __gles_DispatchComputeIndirect(__GLcontext *gc, GLintptr indirect);
extern GLvoid GL_APIENTRY __gles_DrawArraysIndirect(__GLcontext *gc, GLenum mode, const void *indirect);
extern GLvoid GL_APIENTRY __gles_DrawElementsIndirect(__GLcontext *gc, GLenum mode, GLenum type, const void *indirect);
extern GLvoid GL_APIENTRY __gles_FramebufferParameteri(__GLcontext *gc, GLenum target, GLenum pname, GLint param);
extern GLvoid GL_APIENTRY __gles_GetFramebufferParameteriv(__GLcontext *gc, GLenum target, GLenum pname, GLint *params);
extern GLvoid GL_APIENTRY __gles_GetProgramInterfaceiv(__GLcontext *gc, GLuint program, GLenum programInterface, GLenum pname, GLint *params);
extern GLuint GL_APIENTRY __gles_GetProgramResourceIndex(__GLcontext *gc, GLuint program, GLenum programInterface, const GLchar *name);
extern GLvoid GL_APIENTRY __gles_GetProgramResourceName(__GLcontext *gc, GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
extern GLvoid GL_APIENTRY __gles_GetProgramResourceiv(__GLcontext *gc, GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
extern GLint GL_APIENTRY __gles_GetProgramResourceLocation(__GLcontext *gc, GLuint program, GLenum programInterface, const GLchar *name);
extern GLvoid GL_APIENTRY __gles_UseProgramStages(__GLcontext *gc, GLuint pipeline, GLbitfield stages, GLuint program);
extern GLvoid GL_APIENTRY __gles_ActiveShaderProgram(__GLcontext *gc, GLuint pipeline, GLuint program);
extern GLuint GL_APIENTRY __gles_CreateShaderProgramv(__GLcontext *gc, GLenum type, GLsizei count, const GLchar *const*strings);
extern GLvoid GL_APIENTRY __gles_BindProgramPipeline(__GLcontext *gc, GLuint pipeline);
extern GLvoid GL_APIENTRY __gles_DeleteProgramPipelines(__GLcontext *gc, GLsizei n, const GLuint *pipelines);
extern GLvoid GL_APIENTRY __gles_GenProgramPipelines(__GLcontext *gc, GLsizei n, GLuint *pipelines);
extern GLboolean GL_APIENTRY __gles_IsProgramPipeline(__GLcontext *gc, GLuint pipeline);
extern GLvoid GL_APIENTRY __gles_GetProgramPipelineiv(__GLcontext *gc, GLuint pipeline, GLenum pname, GLint *params);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1i(__GLcontext *gc, GLuint program, GLint location, GLint v0);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2i(__GLcontext *gc, GLuint program, GLint location, GLint v0, GLint v1);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3i(__GLcontext *gc, GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4i(__GLcontext *gc, GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1ui(__GLcontext *gc, GLuint program, GLint location, GLuint v0);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2ui(__GLcontext *gc, GLuint program, GLint location, GLuint v0, GLuint v1);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3ui(__GLcontext *gc, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4ui(__GLcontext *gc, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1f(__GLcontext *gc, GLuint program, GLint location, GLfloat v0);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2f(__GLcontext *gc, GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3f(__GLcontext *gc, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4f(__GLcontext *gc, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1iv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2iv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3iv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4iv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1uiv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLuint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2uiv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLuint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3uiv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLuint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4uiv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLuint *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform1fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform2fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform3fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniform4fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix2fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix3fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix4fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix2x3fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix3x2fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix2x4fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix4x2fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix3x4fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ProgramUniformMatrix4x3fv(__GLcontext *gc, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLvoid GL_APIENTRY __gles_ValidateProgramPipeline(__GLcontext *gc, GLuint pipeline);
extern GLvoid GL_APIENTRY __gles_GetProgramPipelineInfoLog(__GLcontext *gc, GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern GLvoid GL_APIENTRY __gles_BindImageTexture(__GLcontext *gc, GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
extern GLvoid GL_APIENTRY __gles_GetBooleani_v(__GLcontext *gc, GLenum target, GLuint index, GLboolean *data);
extern GLvoid GL_APIENTRY __gles_MemoryBarrier(__GLcontext *gc, GLbitfield barriers);
extern GLvoid GL_APIENTRY __gles_MemoryBarrierByRegion(__GLcontext *gc, GLbitfield barriers);
extern GLvoid GL_APIENTRY __gles_TexStorage2DMultisample(__GLcontext *gc, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern GLvoid GL_APIENTRY __gles_GetMultisamplefv(__GLcontext *gc, GLenum pname, GLuint index, GLfloat *val);
extern GLvoid GL_APIENTRY __gles_SampleMaski(__GLcontext *gc, GLuint maskNumber, GLbitfield mask);
extern GLvoid GL_APIENTRY __gles_GetTexLevelParameteriv(__GLcontext *gc, GLenum target, GLint level, GLenum pname, GLint *params);
extern GLvoid GL_APIENTRY __gles_GetTexLevelParameterfv(__GLcontext *gc, GLenum target, GLint level, GLenum pname, GLfloat *params);
extern GLvoid GL_APIENTRY __gles_BindVertexBuffer(__GLcontext *gc, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern GLvoid GL_APIENTRY __gles_VertexAttribFormat(__GLcontext *gc, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern GLvoid GL_APIENTRY __gles_VertexAttribIFormat(__GLcontext *gc, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern GLvoid GL_APIENTRY __gles_VertexAttribBinding(__GLcontext *gc, GLuint attribindex, GLuint bindingindex);
extern GLvoid GL_APIENTRY __gles_VertexBindingDivisor(__GLcontext *gc, GLuint bindingindex, GLuint divisor);

/* OpenGL ES 3.2 */
extern GLvoid GL_APIENTRY __gles_TexStorage3DMultisample(__GLcontext *gc, GLenum target, GLsizei samples, GLenum sizedinternalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

extern GLvoid GL_APIENTRY __gles_BlendBarrier(__GLcontext *gc);

extern GLvoid GL_APIENTRY __gles_DebugMessageControl(__GLcontext *gc, GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled);
extern GLvoid GL_APIENTRY __gles_DebugMessageInsert(__GLcontext *gc, GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf);
extern GLvoid GL_APIENTRY __gles_DebugMessageCallback(__GLcontext *gc, GLDEBUGPROCKHR callback, const GLvoid* userParam);
extern GLuint GL_APIENTRY __gles_GetDebugMessageLog(__GLcontext *gc, GLuint count, GLsizei bufSize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
extern GLvoid GL_APIENTRY __gles_GetPointerv(__GLcontext *gc, GLenum pname, GLvoid** params);
extern GLvoid GL_APIENTRY __gles_PushDebugGroup(__GLcontext *gc, GLenum source, GLuint id, GLsizei length, const GLchar * message);
extern GLvoid GL_APIENTRY __gles_PopDebugGroup(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_ObjectLabel(__GLcontext *gc, GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
extern GLvoid GL_APIENTRY __gles_GetObjectLabel(__GLcontext *gc, GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
extern GLvoid GL_APIENTRY __gles_ObjectPtrLabel(__GLcontext *gc, const GLvoid* ptr, GLsizei length, const GLchar *label);
extern GLvoid GL_APIENTRY __gles_GetObjectPtrLabel(__GLcontext *gc, const GLvoid* ptr, GLsizei bufSize, GLsizei *length, GLchar *label);


extern GLenum GL_APIENTRY __gles_GetGraphicsResetStatus(__GLcontext *gc);
extern GLvoid GL_APIENTRY __gles_ReadnPixels(__GLcontext *gc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
extern GLvoid GL_APIENTRY __gles_GetnUniformfv(__GLcontext *gc, GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern GLvoid GL_APIENTRY __gles_GetnUniformiv(__GLcontext *gc, GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern GLvoid GL_APIENTRY __gles_GetnUniformuiv(__GLcontext *gc, GLuint program, GLint location, GLsizei bufSize, GLuint *params);

extern GLvoid GL_APIENTRY __gles_BlendEquationi(__GLcontext * gc, GLuint buf, GLenum mode);
extern GLvoid GL_APIENTRY __gles_BlendEquationSeparatei(__GLcontext * gc, GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern GLvoid GL_APIENTRY __gles_BlendFunci(__GLcontext * gc, GLuint buf, GLenum sfactor, GLenum dfactor);
extern GLvoid GL_APIENTRY __gles_BlendFuncSeparatei(__GLcontext * gc, GLuint buf, GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha);
extern GLvoid GL_APIENTRY __gles_ColorMaski(__GLcontext * gc,GLuint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern GLvoid GL_APIENTRY __gles_Enablei(__GLcontext *gc, GLenum target, GLuint index);
extern GLvoid GL_APIENTRY __gles_Disablei(__GLcontext *gc, GLenum target, GLuint index);
extern GLboolean GL_APIENTRY __gles_IsEnabledi(__GLcontext * gc, GLenum target, GLuint index);

extern GLvoid GL_APIENTRY __gles_TexParameterIiv(__GLcontext *gc, GLenum target, GLenum pname, const GLint *params);
extern GLvoid GL_APIENTRY __gles_TexParameterIuiv(__GLcontext *gc, GLenum target, GLenum pname, const GLuint *params);
extern GLvoid GL_APIENTRY __gles_GetTexParameterIiv(__GLcontext *gc, GLenum target, GLenum pname, GLint *params);
extern GLvoid GL_APIENTRY __gles_GetTexParameterIuiv(__GLcontext *gc, GLenum target, GLenum pname, GLuint *params);
extern GLvoid GL_APIENTRY __gles_SamplerParameterIiv(__GLcontext *gc, GLuint sampler, GLenum pname, const GLint *param);
extern GLvoid GL_APIENTRY __gles_SamplerParameterIuiv(__GLcontext *gc, GLuint sampler, GLenum pname, const GLuint *param);
extern GLvoid GL_APIENTRY __gles_GetSamplerParameterIiv(__GLcontext *gc, GLuint sampler, GLenum pname, GLint *params);
extern GLvoid GL_APIENTRY __gles_GetSamplerParameterIuiv(__GLcontext *gc, GLuint sampler, GLenum pname, GLuint *params);

extern GLvoid GL_APIENTRY __gles_TexBuffer(__GLcontext *gc, GLenum target, GLenum internalformat, GLuint buffer);
extern GLvoid GL_APIENTRY __gles_TexBufferRange(__GLcontext *gc, GLenum target, GLenum internalformat,
                                                   GLuint buffer, GLintptr offset, GLsizeiptr size);
GLvoid GL_APIENTRY __gles_PatchParameteri(__GLcontext *gc, GLenum pname, GLint value);

GLvoid GL_APIENTRY __gles_FramebufferTexture(__GLcontext *gc, GLenum target, GLenum attachment, GLuint texture, GLint level);

GLvoid GL_APIENTRY __gles_MinSampleShading(__GLcontext *gc, GLfloat value);

GLvoid GL_APIENTRY __gles_CopyImageSubData(__GLcontext *gc,
                                           GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ,
                                           GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ,
                                           GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

extern GLvoid GL_APIENTRY __gles_DrawElementsBaseVertex(__GLcontext *gc, GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern GLvoid GL_APIENTRY __gles_DrawRangeElementsBaseVertex(__GLcontext *gc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern GLvoid GL_APIENTRY __gles_DrawElementsInstancedBaseVertex(__GLcontext *gc, GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
extern GLvoid GL_APIENTRY __gles_PrimitiveBoundingBox(__GLcontext *gc, GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);

/* OpenGL ES extension */
#if GL_OES_EGL_image
extern GLvoid GL_APIENTRY __gles_EGLImageTargetTexture2DOES(__GLcontext *gc, GLenum target, GLeglImageOES image);
extern GLvoid GL_APIENTRY __gles_EGLImageTargetRenderbufferStorageOES(__GLcontext *gc, GLenum target, GLeglImageOES image);
#endif

#if GL_EXT_multi_draw_arrays
extern GLvoid GL_APIENTRY __gles_MultiDrawArraysEXT(__GLcontext *gc, GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
extern GLvoid GL_APIENTRY __gles_MultiDrawElementsEXT(__GLcontext *gc, GLenum mode, const GLsizei *count, GLenum type, const GLvoid*const*indices, GLsizei primcount);
#if GL_EXT_draw_elements_base_vertex
extern GLvoid GL_APIENTRY __gles_MultiDrawElementsBaseVertexEXT(__GLcontext *gc, GLenum mode, const GLsizei * count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint * basevertex);
#endif
#endif

#if GL_OES_mapbuffer
extern GLvoid GL_APIENTRY __gles_GetBufferPointervOES(__GLcontext *gc, GLenum target, GLenum pname, GLvoid** params);
extern GLvoid* GL_APIENTRY __gles_MapBufferOES(__GLcontext *gc, GLenum target, GLenum access);
extern GLboolean GL_APIENTRY __gles_UnmapBufferOES(__GLcontext *gc, GLenum target);
#endif

#if GL_EXT_discard_framebuffer
extern GLvoid GL_APIENTRY __gles_DiscardFramebufferEXT(__GLcontext *gc, GLenum target, GLsizei numAttachments, const GLenum *attachments);
#endif

#if GL_EXT_multisampled_render_to_texture
extern GLvoid GL_APIENTRY __gles_RenderbufferStorageMultisampleEXT(__GLcontext *gc, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern GLvoid GL_APIENTRY __gles_FramebufferTexture2DMultisampleEXT(__GLcontext *gc, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
#endif

#if GL_VIV_direct_texture
extern GLvoid GL_APIENTRY __gles_TexDirectVIV(__GLcontext *gc, GLenum target, GLsizei width, GLsizei height, GLenum format, GLvoid ** pixels);
extern GLvoid GL_APIENTRY __gles_TexDirectInvalidateVIV(__GLcontext *gc, GLenum target);
extern GLvoid GL_APIENTRY __gles_TexDirectVIVMap(__GLcontext *gc, GLenum target, GLsizei width, GLsizei height, GLenum format, GLvoid ** logical, const GLuint * physical);
extern GLvoid GL_APIENTRY __gles_TexDirectTiledMapVIV(__GLcontext *gc, GLenum target, GLsizei width, GLsizei height, GLenum format, GLvoid ** logical, const GLuint * physical);
#endif

#if GL_EXT_multi_draw_indirect
extern GLvoid GL_APIENTRY __gles_MultiDrawArraysIndirectEXT(__GLcontext *gc, GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
extern GLvoid GL_APIENTRY __gles_MultiDrawElementsIndirectEXT(__GLcontext *gc, GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
#endif

extern GLvoid GL_APIENTRY __gles_GetObjectParameterivARB (__GLcontext *gc, UINT obj, GLenum pname, GLint *params);

extern GLvoid GLAPIENTRY __gles_VertexAttribI1i(__GLcontext *gc, GLuint index, GLint x);
extern GLvoid GLAPIENTRY __gles_VertexAttribI2i(__GLcontext *gc, GLuint index, GLint x, GLint y);
extern GLvoid GLAPIENTRY __gles_VertexAttribI3i(__GLcontext *gc, GLuint index, GLint x, GLint y, GLint z);

extern GLvoid GLAPIENTRY __gles_VertexAttribI1ui(__GLcontext *gc, GLuint index, GLuint x);
extern GLvoid GLAPIENTRY __gles_VertexAttribI2ui(__GLcontext *gc, GLuint index, GLuint x, GLuint y);
extern GLvoid GLAPIENTRY __gles_VertexAttribI3ui(__GLcontext *gc, GLuint index, GLuint x, GLuint y, GLuint z);

extern GLvoid GLAPIENTRY __gles_VertexAttribI1iv(__GLcontext *gc, GLuint index, const GLint *v);
extern GLvoid GLAPIENTRY __gles_VertexAttribI2iv(__GLcontext *gc, GLuint index, const GLint *v);
extern GLvoid GLAPIENTRY __gles_VertexAttribI3iv(__GLcontext *gc, GLuint index, const GLint *v);

extern GLvoid GLAPIENTRY __gles_VertexAttribI1uiv(__GLcontext *gc, GLuint index, const GLuint *v);
extern GLvoid GLAPIENTRY __gles_VertexAttribI2uiv(__GLcontext *gc, GLuint index, const GLuint *v);
extern GLvoid GLAPIENTRY __gles_VertexAttribI3uiv(__GLcontext *gc, GLuint index, const GLuint *v);

extern GLvoid GLAPIENTRY __gles_GetUniformdv(__GLcontext *gc,  GLuint program, GLint location, GLdouble * params);
extern GLvoid GLAPIENTRY __gles_Uniform1d(__GLcontext *gc, GLint location, GLdouble v0);
extern GLvoid GLAPIENTRY __gles_Uniform2d(__GLcontext *gc, GLint location, GLdouble v0, GLdouble v1);
extern GLvoid GLAPIENTRY __gles_Uniform3d(__GLcontext *gc, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
extern GLvoid GLAPIENTRY __gles_Uniform4d(__GLcontext *gc, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
extern GLvoid GLAPIENTRY __gles_Uniform1dv(__GLcontext *gc, GLint location, GLsizei count, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_Uniform2dv(__GLcontext *gc, GLint location, GLsizei count, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_Uniform3dv(__GLcontext *gc, GLint location, GLsizei count, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_Uniform4dv(__GLcontext *gc, GLint location, GLsizei count, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix2dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix3dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix4dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix2x3dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix3x2dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix2x4dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix4x2dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix3x4dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
extern GLvoid GLAPIENTRY __gles_UniformMatrix4x3dv(__GLcontext *gc, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);

#endif /* __gc_es_protos_h__ */

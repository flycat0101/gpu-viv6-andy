##############################################################################
#
#    Copyright (c) 2005 - 2019 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################


#############################################################################
# Include common definitions.

include $(AQROOT)/makefile.linux.def

ROOTDIR = $(AQROOT)/driver/khronos/libGL4

################################################################################
# Define target module name.

ifeq ($(YOCTO_DRI_BUILD),1)
ifeq ($(gcdSTATIC_LINK), 1)
  TARGET_MODULE     := $(OBJ_DIR)/vivante_dri.a
else
  TARGET_MODULE     := $(OBJ_DIR)/vivante_dri.so
  TARGET_SONAME     := vivante_dri.so
  TARGET_LINKS      :=
endif
else
ifeq ($(gcdSTATIC_LINK), 1)
  TARGET_MODULE     := $(OBJ_DIR)/libGL.a
else
  TARGET_MODULE     := $(OBJ_DIR)/libGL.so.1.2
  TARGET_SONAME     := libGL.so.1.2
  TARGET_LINKS      :=
endif
endif

################################################################################
# Supply additional include directories and extra compile flags

ifeq ($(DEBUG),1)
CFLAGS += -g -O0 -fPIC
else
CFLAGS += -O3 -fPIC
endif

CFLAGS += -D_LINUX_ -D_GNU_SOURCE -DPTHREADS -D_POSIX_SOURCE -D_POSIX_C_SOURCE=199309L \
          -DOPENGL40 -DDIRECT_TO_FB -DDISABLE_SWAP_THREAD -DUSE_CPU -D__declspec=""

INCLUDE += \
	-I$(AQROOT)/hal/inc \
	-I$(AQROOT)/hal/user \
	-I$(AQROOT)/hal/user/arch \
	-I$(AQROOT)/hal/user/archvg \
	-I$(AQROOT)/hal/os/linux/user \
	-I$(AQROOT)/compiler/libVSC/include \
	-I$(AQROOT)/sdk/inc/GL \
	-I$(AQROOT)/sdk/inc \
	-I$(AQROOT)/driver/khronos/libEGL/inc \
	-I$(AQROOT)/driver/khronos/libEGL/source \
	-I$(AQROOT)/driver/khronos/libGL4/src/glcore \
	-I$(ROOTDIR)/include -I$(ROOTDIR)/include/backend -I$(ROOTDIR)/include/gl \
	-I$(ROOTDIR)/include/dri -I$(ROOTDIR)/include/glcore \
	-I$(ROOTDIR)/include/chip \
	-I$(ROOTDIR)/include/dri \
	-I$(AQROOT)/driver/X/libdrm-2.4.91/include/drm \
	-I$(AQROOT)/driver/X/libdrm-2.4.91 \
	-I$(ROOTFS_USR)/include/pixman-1 \
	-I$(ROOTFS_USR)/include/libdrm \
	-I$(ROOTFS_USR)/include \
	$(OSINCLUDEDIR)

CFLAGS += $(INCLUDE)

################################################################################
# Describe object files.

OBJECTS :=  \
    $(OBJ_DIR)/gc_glcore_dri.o \
    $(OBJ_DIR)/gc_es_api.o \
    $(OBJ_DIR)/gc_es_api_profiler.o \
    $(OBJ_DIR)/gc_es_bufobj.o \
    $(OBJ_DIR)/gc_es_context.o \
    $(OBJ_DIR)/gc_es_dispatch.o \
    $(OBJ_DIR)/gc_es_draw.o \
    $(OBJ_DIR)/gc_es_egl.o \
    $(OBJ_DIR)/gc_es_extensions.o \
    $(OBJ_DIR)/gc_es_fbo.o \
    $(OBJ_DIR)/gc_es_formats.o \
    $(OBJ_DIR)/gc_es_fragop.o \
    $(OBJ_DIR)/gc_es_misc.o \
    $(OBJ_DIR)/gc_es_names.o \
    $(OBJ_DIR)/gc_es_pixelop.o \
    $(OBJ_DIR)/gc_es_query.o \
    $(OBJ_DIR)/gc_es_raster.o \
    $(OBJ_DIR)/gc_es_shader.o \
    $(OBJ_DIR)/gc_es_teximage.o \
    $(OBJ_DIR)/gc_es_texstate.o \
    $(OBJ_DIR)/gc_es_varray.o \
    $(OBJ_DIR)/gc_es_profiler.o \
    $(OBJ_DIR)/gc_gl_attrib.o \
    $(OBJ_DIR)/gc_gl_eval.o \
    $(OBJ_DIR)/gc_gl_feed.o \
    $(OBJ_DIR)/gc_gl_fog.o \
    $(OBJ_DIR)/gc_gl_image.o \
    $(OBJ_DIR)/gc_gl_light.o \
    $(OBJ_DIR)/gc_gl_material.o \
    $(OBJ_DIR)/gc_gl_math.o \
    $(OBJ_DIR)/gc_gl_memmgr.o \
    $(OBJ_DIR)/gc_gl_prim.o \
    $(OBJ_DIR)/gc_gl_px_util.o \
    $(OBJ_DIR)/gc_gl_pushpop.o \
    $(OBJ_DIR)/gc_gl_rect.o \
    $(OBJ_DIR)/gc_gl_select.o \
    $(OBJ_DIR)/gc_gl_varray.o \
    $(OBJ_DIR)/gc_gl_xform.o \
    $(OBJ_DIR)/gc_gl_api_inline.o \
    $(OBJ_DIR)/gc_gl_c2api.o \
    $(OBJ_DIR)/gc_gl_capi.o \
    $(OBJ_DIR)/gc_gl_cindex.o \
    $(OBJ_DIR)/gc_gl_edgeflag.o \
    $(OBJ_DIR)/gc_gl_fapi.o \
    $(OBJ_DIR)/gc_gl_napi.o \
    $(OBJ_DIR)/gc_gl_rapi.o \
    $(OBJ_DIR)/gc_gl_tapi.o \
    $(OBJ_DIR)/gc_gl_vapi.o \
    $(OBJ_DIR)/gc_gl_dl_init.o \
    $(OBJ_DIR)/gc_gl_dl_list.o \
    $(OBJ_DIR)/gc_gl_dl_opt.o \
    $(OBJ_DIR)/gc_gl_dl_utils.o \
    $(OBJ_DIR)/gc_gl_dl_varray.o \
    $(OBJ_DIR)/gc_gl_dl_varrayutil.o \
    $(OBJ_DIR)/gc_gl_dl_vfcull.o \
    $(OBJ_DIR)/g_lcomp.o \
    $(OBJ_DIR)/g_lexec.o \
    $(OBJ_DIR)/gc_chip_basic_types.o \
    $(OBJ_DIR)/gc_chip_buffer.o \
    $(OBJ_DIR)/gc_chip_clear.o \
    $(OBJ_DIR)/gc_chip_codec.o \
    $(OBJ_DIR)/gc_chip_context.o \
    $(OBJ_DIR)/gc_chip_depth.o \
    $(OBJ_DIR)/gc_chip_device.o \
    $(OBJ_DIR)/gc_chip_draw.o \
    $(OBJ_DIR)/gc_chip_drawable.o \
    $(OBJ_DIR)/gc_chip_fbo.o \
    $(OBJ_DIR)/gc_chip_misc.o \
    $(OBJ_DIR)/gc_chip_patch.o \
    $(OBJ_DIR)/gc_chip_pixel.o \
    $(OBJ_DIR)/gc_chip_profiler.o \
    $(OBJ_DIR)/gc_chip_hash.o \
    $(OBJ_DIR)/gc_chip_fragment_shader.o \
    $(OBJ_DIR)/gc_chip_func.o \
    $(OBJ_DIR)/gc_chip_vertex_shader.o \
    $(OBJ_DIR)/gc_chip_shader.o \
    $(OBJ_DIR)/gc_chip_state.o \
    $(OBJ_DIR)/gc_chip_texture.o \
    $(OBJ_DIR)/gc_chip_utils.o

################################################################################
# Define flags for the linker.

LDFLAGS += -Wl,--version-script=GL4SymExport
LDFLAGS += -Wall -Wl,-z,defs -shared -Wl,-soname,$(TARGET_SONAME)

################################################################################
# Supply dependent libraries.

ifeq ($(YOCTO_DRI_BUILD),1)
INSTALL_DIR = $(SDK_DIR)/drivers/dri
LDLIBS := -L$(ROOTDIR)/src/GLX/client/$(OBJ_DIR) -lGL \
          -L$(AQROOT)/hal/user/$(OBJ_DIR) -lGAL \
          -L$(AQROOT)/compiler/libVSC/$(OBJ_DIR) -lVSC \
          -lXext -lX11 -lXfixes -lXdamage -ldrm -lm -lpthread
else
INSTALL_DIR = $(SDK_DIR)/drivers
LDLIBS := -L$(SDK_DIR)/drivers \
          -L$(AQROOT)/hal/user/$(OBJ_DIR) -lGAL \
          -L$(AQROOT)/compiler/libVSC/$(OBJ_DIR) -lVSC \
          -lm -lpthread
endif

################################################################################
# Define targets.

.PHONY: all clean install

all: $(TARGET_MODULE)

clean:
	@rm -rf $(OBJ_DIR)

ifeq ($(YOCTO_DRI_BUILD),1)
install: all
	@mkdir -p $(INSTALL_DIR)
	@-cp $(TARGET_MODULE) $(INSTALL_DIR)
	@mkdir -p $(SDK_DIR)/include/GL
	@-cp -f $(AQROOT)/sdk/inc/GL/*.h $(SDK_DIR)/include/GL
else
install: all
	@mkdir -p $(INSTALL_DIR)
	@-cp $(TARGET_MODULE) $(INSTALL_DIR)
	@mkdir -p $(SDK_DIR)/include/GL
	@-cp -f $(AQROOT)/sdk/inc/GL/*.h $(SDK_DIR)/include/GL
	-cd $(OBJ_DIR); ln -sf $(TARGET_SONAME) libGL.so; ln -sf $(TARGET_SONAME) libGL.so.1
	cd $(SDK_DIR)/drivers; rm -f libGL.so libGL.so.1; ln -s $(TARGET_SONAME) libGL.so; ln -s $(TARGET_SONAME) libGL.so.1
endif

################################################################################
# Module rules.

ifeq ($(gcdSTATIC_LINK),1)
$(TARGET_MODULE): $(OBJECTS)
	@echo "  ARCHIVE \033[1m$(notdir $@)\033[0m"
	@$(AR) -r -c $@ $(OBJECTS)
ifneq ($(USE_ARMCC), 1)
	@$(RANLIB) $@
endif

else

# module dependencies
$(TARGET_MODULE): $(wildcard $(AQROOT)/hal/user/$(OBJ_DIR)/libGAL.so) \
                  $(wildcard $(AQROOT)/compiler/libVSC/$(OBJ_DIR)/libVSC.so)

$(TARGET_MODULE): $(OBJECTS)
	@echo "  LINK    \033[1m$(notdir $@)\033[0m"
	@$(CC) $(LDFLAGS) -o $@ $(OBJECTS) $(LDLIBS)
endif

################################################################################
# Object rules.

vpath
vpath %.c api
vpath %.c display_list
vpath %.c ../chip

$(OBJ_DIR)/%.o: %.c
	@echo "  COMPILE $(abspath $<)"
	@mkdir -p $(OBJ_DIR)
	@$(CC) -c $(CFLAGS) -MMD -o $@ $<

# object dependencies.
-include $(OBJECTS:.o=.d)


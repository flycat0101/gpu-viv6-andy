##############################################################################
#
#    Copyright (c) 2005 - 2020 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################


#
# Linux build file for libEGL library.
#

################################################################################
# Include common definitions.

include $(AQROOT)/makefile.linux.def

################################################################################
# Define target module name.

ifeq ($(gcdSTATIC_LINK),1)
  TARGET_MODULE    := $(OBJ_DIR)/libEGL.a
else
  TARGET_MODULE    := $(OBJ_DIR)/libEGL.so.1.0
  TARGET_SONAME    := libEGL.so.1
  TARGET_LINKS     := libEGL.so.1 libEGL.so
ifeq ($(EGL_API_WL),1)
  TARGET_LINKS     += libwayland-egl.so.1.0.0 libwayland-egl.so.1 libwayland-egl.so
endif
endif

################################################################################
# Installation directory.

INSTALL_DIR         := $(SDK_DIR)/drivers

################################################################################
# Supply additional include directories.

INCLUDE := \
    -I$(AQROOT)/hal/inc \
    -I$(AQROOT)/hal/user \
    -I$(AQROOT)/hal/os/linux/user \
    -I$(AQROOT)/compiler/libVSC/include \
    -I$(AQROOT)/sdk/inc \
    -I$(AQROOT)/driver/khronos/libEGL/os \
    -I$(AQROOT)/driver/khronos/libEGL/source \
    -I$(AQROOT)/driver/khronos/libEGL/api \
    -I$(AQROOT)/driver/khronos/libEGL/inc

ifeq ($(EGL_API_X),1)
  INCLUDE += -I$(X11_ARM_DIR)/include
endif

ifeq ($(EGL_API_WL),1)
  INCLUDE += -I$(AQROOT)/driver/wayland \
             -I$(WAYLAND_DIR)/include
else
  ifeq ($(EGL_API_DRI),1)
    INCLUDE += -I$(X11_ARM_DIR)/include \
             -I$(X11_ARM_DIR)/include/X11/extensions \
             -I$(X11_ARM_DIR)/include/libdrm \
             -I$(AQROOT)/driver/X/DRI/src
  endif

  ifeq ($(X11_DRI3),1)
    INCLUDE += -I$(X11_ARM_DIR)/include \
             -I$(X11_ARM_DIR)/include/X11/extensions \
             -I${ROOTFS_USR}/include/libdrm
  endif
endif

ifeq ($(EGL_API_FB),1)
  INCLUDE += -I$(ROOTFS_USR)/include/libdrm
endif

ifeq ($(EGL_API_GBM),1)
  ifneq ($(GBM_LIBS),)
    INCLUDE += $(GBM_CFLAGS)
  else
    INCLUDE += -I$(AQROOT)/driver/gbm/main
    INCLUDE += -I$(AQROOT)/driver/gbm/backends/viv
  endif
endif

ifeq ($(EGL_API_DFB),1)
  INCLUDE += -I$(DFB_DIR)/usr/include \
             -I$(DFB_DIR)/include \
             -I$(DFB_DIR)/include/directfb-internal \
             -I$(DFB_DIR)/include/directfb
endif

ifeq ($(USE_KMS),1)
  CFLAGS += $(INCLUDE) -DgcdUSE_KMS=$(USE_KMS)
else
  CFLAGS += $(INCLUDE) -DgcdUSE_KMS=0
endif
################################################################################
# Add extra flags for object files.
ifneq ($(filter 1,$(EGL_API_X) $(EGL_API_DRI) $(X11_DRI3)),)
  CFLAGS += -DX11
endif

ifeq ($(EGL_API_DRI), 1)
  CFLAGS += -Wno-int-to-pointer-cast -Wno-pointer-to-int-cast
endif

ifeq ($(X11_DRI3), 1)
  CFLAGS += -Wno-int-to-pointer-cast -Wno-pointer-to-int-cast
endif

ifneq ($(USE_ARMCC),1)
  CFLAGS += -fPIC -Werror

  # These header files don't follow ansi.
  ifeq ($(filter 1,$(EGL_API_WL) $(EGL_API_DFB) $(EGL_API_GBM)),)
    CFLAGS += -ansi
  endif
endif

ifeq ($(EGL_API_DFB),1)
  CFLAGS += -DDIRECTFB_MAJOR_VERSION=$(DIRECTFB_MAJOR_VERSION) \
            -DDIRECTFB_MINOR_VERSION=$(DIRECTFB_MINOR_VERSION) \
            -DDIRECTFB_MICRO_VERSION=$(DIRECTFB_MICRO_VERSION)
endif

ifeq ($(CUSTOM_PIXMAP),1)
  CFLAGS += -DCUSTOM_PIXMAP
endif

################################################################################
# Define flags for the linker.

LDFLAGS := \
    $(LFLAGS)

ifneq ($(USE_ARMCC),1)
  ifeq ($(EGL_APPENDIX),)
    LDFLAGS += -Wl,--version-script=source/libEGL.map
  endif
endif

ifeq ($(USE_ARMCC),1)
  LDFLAGS += -pthread --shared -L--soname=,$(TARGET_SONAME)
else
  LDFLAGS += -pthread -Wall -Wl,-z,defs -shared -Wl,-soname,$(TARGET_SONAME)
endif

################################################################################
# Supply dependent libraries.

LDLIBS := -L$(SDK_DIR)/drivers -L$(AQROOT)/hal/user/$(OBJ_DIR) -lGAL -ldl

ifeq ($(EGL_API_X),1)
  LDLIBS += -L$(X11_ARM_DIR)/lib -lX11
endif

ifeq ($(EGL_API_WL),1)
  LDLIBS += -L$(WAYLAND_DIR)/lib -lwayland-server -lwayland-client
else
  ifeq ($(EGL_API_DRI),1)
    LDLIBS += -L$(X11_ARM_DIR)/lib -lX11 -lXext -ldrm
  endif

  ifeq ($(X11_DRI3),1)
    LDLIBS += -L$(X11_ARM_DIR)/lib -lX11 -lX11-xcb -lXext -lxcb -lxcb-shm -lxcb-dri3 -lxcb-present -lxshmfence -lxcb-sync -ldrm_vivante
  endif
endif

ifeq ($(EGL_API_GBM),1)
  LDLIBS += -ldrm

  ifneq ($(GBM_LIBS),)
    LDLIBS += $(GBM_LIBS)
  else
    LDLIBS += -L$(SDK_DIR)/drivers -L$(AQROOT)/driver/gbm/main/$(OBJ_DIR) -lgbm -L$(AQROOT)/driver/gbm/backends/viv/$(OBJ_DIR) -lgbm_viv
  endif
endif

ifeq ($(EGL_API_DFB),1)
  LDLIBS += -L$(DFB_DIR)/lib -ldirectfb
endif

################################################################################
# Describe object files.

OBJECTS := \
    $(OBJ_DIR)/gc_egl_query.o \
    $(OBJ_DIR)/gc_egl_procaddr.o \
    $(OBJ_DIR)/gc_egl_config.o \
    $(OBJ_DIR)/gc_egl_context.o \
    $(OBJ_DIR)/gc_egl_init.o \
    $(OBJ_DIR)/gc_egl_surface.o \
    $(OBJ_DIR)/gc_egl_swap.o \
    $(OBJ_DIR)/gc_egl_sync.o \
    $(OBJ_DIR)/gc_egl_image.o \
    $(OBJ_DIR)/gc_egl.o \

# Always keep nullws.
OBJECTS += \
    $(OBJ_DIR)/gc_egl_nullws.o

ifeq ($(EGL_API_X),1)
  OBJECTS += $(OBJ_DIR)/gc_egl_x11.o
endif

ifeq ($(EGL_API_WL),1)
  OBJECTS += $(OBJ_DIR)/gc_egl_wayland.o \
             $(OBJ_DIR)/wayland-egl.o \
             $(OBJ_DIR)/gc_egl_wayland_server.o \
             $(OBJ_DIR)/wayland-viv-protocol.o \
             $(OBJ_DIR)/linux-explicit-synchronization-unstable-v1-protocol.o
else
  ifeq ($(EGL_API_DRI),1)
    OBJECTS += $(OBJ_DIR)/gc_egl_dri.o
    OBJECTS += $(OBJ_DIR)/XF86dri.o
  endif

  ifeq ($(X11_DRI3),1)
    OBJECTS += $(OBJ_DIR)/gc_egl_dri3.o
  endif
endif

ifeq ($(EGL_API_GBM),1)
  OBJECTS += $(OBJ_DIR)/gc_egl_gbm.o
endif

ifeq ($(EGL_API_FB),1)
  OBJECTS += $(OBJ_DIR)/gc_egl_fb.o
  OBJECTS += $(OBJ_DIR)/gc_egl_fbdev.o
  ifeq ($(USE_KMS),1)
    OBJECTS += $(OBJ_DIR)/gc_egl_fbdrm.o
    LDLIBS += -L$(X11_ARM_DIR)/lib -ldrm
  endif
endif

ifeq ($(EGL_API_DFB),1)
  OBJECTS += $(OBJ_DIR)/gc_egl_dfb.o
endif

################################################################################
# Define targets.

.PHONY: all clean install

all: $(TARGET_MODULE)

clean:
	@rm -rf $(OBJ_DIR)

install: all
	@mkdir -p $(INSTALL_DIR)
	@-cp $(TARGET_MODULE) $(INSTALL_DIR)
	@mkdir -p $(SDK_DIR)/include/EGL
	@-cp -f $(AQROOT)/sdk/inc/EGL/*.h $(SDK_DIR)/include/EGL
	@mkdir -p $(SDK_DIR)/include/KHR
	@-cp -f $(AQROOT)/sdk/inc/KHR/*.h $(SDK_DIR)/include/KHR
	@for lib in $(TARGET_LINKS); do \
	    ln -sf $(notdir $(TARGET_MODULE)) $(INSTALL_DIR)/$$lib; \
	done

################################################################################
# Module rules.

ifeq ($(gcdSTATIC_LINK),1)
$(TARGET_MODULE): $(OBJECTS)
	@echo "  ARCHIVE \033[1m$(notdir $@)\033[0m"
	@$(AR) -r -c $@ $(OBJECTS)
ifneq ($(USE_ARMCC),1)
	@$(RANLIB) $@
endif

else

# module dependencies
$(TARGET_MODULE): $(wildcard $(AQROOT)/hal/user/$(OBJ_DIR)/libGAL.so)

$(TARGET_MODULE): $(OBJECTS)
	@echo "  LINK    \033[1m$(notdir $@)\033[0m"
	@$(CC) $(LDFLAGS) -o $@ $(OBJECTS) $(LDLIBS)
endif

################################################################################
# Object rules.

vpath
vpath %.c api
vpath %.c source

ifeq ($(EGL_API_WL),1)
  vpath %.c ../../wayland
else
  ifeq ($(EGL_API_DRI),1)
    vpath %.c ../../X/DRI/src
  endif
endif

$(OBJ_DIR)/%.o: %.c
	@echo "  COMPILE $(abspath $<)"
	@mkdir -p $(OBJ_DIR)
	@$(CC) -c $(CFLAGS) -MMD -o $@ $<

# object dependencies.
-include $(OBJECTS:.o=.d)

